/* Generated by CIL v. 1.8.2 */
/* print_CIL_Input is true */

#line 143 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h"
typedef long ptrdiff_t;
#line 209 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h"
typedef unsigned long size_t;
#line 321 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h"
typedef int wchar_t;
#line 415 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h"
struct __anonstruct_max_align_t_896270833 {
   long long __max_align_ll  __attribute__((__aligned__(__alignof__(long long )))) ;
   long double __max_align_ld  __attribute__((__aligned__(__alignof__(long double )))) ;
};
#line 415 "/usr/lib/gcc/x86_64-linux-gnu/11/include/stddef.h"
typedef struct __anonstruct_max_align_t_896270833 max_align_t;
#line 31 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned char __u_char;
#line 32 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned short __u_short;
#line 33 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned int __u_int;
#line 34 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __u_long;
#line 37 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef signed char __int8_t;
#line 38 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned char __uint8_t;
#line 39 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef short __int16_t;
#line 40 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned short __uint16_t;
#line 41 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef int __int32_t;
#line 42 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned int __uint32_t;
#line 44 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __int64_t;
#line 45 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __uint64_t;
#line 52 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef __int8_t __int_least8_t;
#line 53 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef __uint8_t __uint_least8_t;
#line 54 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef __int16_t __int_least16_t;
#line 55 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef __uint16_t __uint_least16_t;
#line 56 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef __int32_t __int_least32_t;
#line 57 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef __uint32_t __uint_least32_t;
#line 58 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef __int64_t __int_least64_t;
#line 59 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef __uint64_t __uint_least64_t;
#line 63 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __quad_t;
#line 64 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __u_quad_t;
#line 72 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __intmax_t;
#line 73 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __uintmax_t;
#line 145 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __dev_t;
#line 146 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned int __uid_t;
#line 147 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned int __gid_t;
#line 148 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __ino_t;
#line 149 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __ino64_t;
#line 150 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned int __mode_t;
#line 151 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __nlink_t;
#line 152 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __off_t;
#line 153 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __off64_t;
#line 154 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef int __pid_t;
#line 155 "/usr/include/x86_64-linux-gnu/bits/types.h"
struct __anonstruct___fsid_t_109580352 {
   int __val[2] ;
};
#line 155 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef struct __anonstruct___fsid_t_109580352 __fsid_t;
#line 156 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __clock_t;
#line 157 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __rlim_t;
#line 158 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __rlim64_t;
#line 159 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned int __id_t;
#line 160 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __time_t;
#line 161 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned int __useconds_t;
#line 162 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __suseconds_t;
#line 163 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __suseconds64_t;
#line 165 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef int __daddr_t;
#line 166 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef int __key_t;
#line 169 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef int __clockid_t;
#line 172 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef void *__timer_t;
#line 175 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __blksize_t;
#line 180 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __blkcnt_t;
#line 181 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __blkcnt64_t;
#line 184 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __fsblkcnt_t;
#line 185 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __fsblkcnt64_t;
#line 188 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __fsfilcnt_t;
#line 189 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __fsfilcnt64_t;
#line 192 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __fsword_t;
#line 194 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __ssize_t;
#line 197 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __syscall_slong_t;
#line 199 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned long __syscall_ulong_t;
#line 203 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef __off64_t __loff_t;
#line 204 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef char *__caddr_t;
#line 207 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __intptr_t;
#line 210 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef unsigned int __socklen_t;
#line 215 "/usr/include/x86_64-linux-gnu/bits/types.h"
typedef int __sig_atomic_t;
#line 10 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h"
typedef __time_t time_t;
#line 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
struct timespec {
   __time_t tv_sec ;
   __syscall_slong_t tv_nsec ;
};
#line 38 "/usr/include/sched.h"
typedef __pid_t pid_t;
#line 23 "/usr/include/x86_64-linux-gnu/bits/types/struct_sched_param.h"
struct sched_param {
   int sched_priority ;
};
#line 32 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h"
typedef unsigned long __cpu_mask;
#line 39 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h"
struct __anonstruct_cpu_set_t_826868708 {
   __cpu_mask __bits[1024UL / (8UL * sizeof(__cpu_mask ))] ;
};
#line 39 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h"
typedef struct __anonstruct_cpu_set_t_826868708 cpu_set_t;
#line 7 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h"
typedef __clock_t clock_t;
#line 7 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h"
struct tm {
   int tm_sec ;
   int tm_min ;
   int tm_hour ;
   int tm_mday ;
   int tm_mon ;
   int tm_year ;
   int tm_wday ;
   int tm_yday ;
   int tm_isdst ;
   long tm_gmtoff ;
   char const   *tm_zone ;
};
#line 7 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h"
typedef __clockid_t clockid_t;
#line 7 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h"
typedef __timer_t timer_t;
#line 8 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h"
struct itimerspec {
   struct timespec it_interval ;
   struct timespec it_value ;
};
#line 49 "/usr/include/time.h"
struct sigevent ;
#line 28 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h"
struct __locale_data ;
#line 28 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h"
struct __locale_struct {
   struct __locale_data *__locales[13] ;
   unsigned short const   *__ctype_b ;
   int const   *__ctype_tolower ;
   int const   *__ctype_toupper ;
   char const   *__names[13] ;
};
#line 42 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h"
typedef struct __locale_struct *__locale_t;
#line 24 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h"
typedef __locale_t locale_t;
#line 49 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
struct __pthread_internal_list {
   struct __pthread_internal_list *__prev ;
   struct __pthread_internal_list *__next ;
};
#line 49 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
typedef struct __pthread_internal_list __pthread_list_t;
#line 55 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
struct __pthread_internal_slist {
   struct __pthread_internal_slist *__next ;
};
#line 55 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
typedef struct __pthread_internal_slist __pthread_slist_t;
#line 22 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h"
struct __pthread_mutex_s {
   int __lock ;
   unsigned int __count ;
   int __owner ;
   unsigned int __nusers ;
   int __kind ;
   short __spins ;
   short __elision ;
   __pthread_list_t __list ;
};
#line 23 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h"
struct __pthread_rwlock_arch_t {
   unsigned int __readers ;
   unsigned int __writers ;
   unsigned int __wrphase_futex ;
   unsigned int __writers_futex ;
   unsigned int __pad3 ;
   unsigned int __pad4 ;
   int __cur_writer ;
   int __shared ;
   signed char __rwelision ;
   unsigned char __pad1[7] ;
   unsigned long __pad2 ;
   unsigned int __flags ;
};
#line 92 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
struct __anonstruct___wseq32_817613185 {
   unsigned int __low ;
   unsigned int __high ;
};
#line 92 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
union __anonunion____missing_field_name_930316680 {
   unsigned long long __wseq ;
   struct __anonstruct___wseq32_817613185 __wseq32 ;
};
#line 92 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
struct __anonstruct___g1_start32_817613186 {
   unsigned int __low ;
   unsigned int __high ;
};
#line 92 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
union __anonunion____missing_field_name_397133489 {
   unsigned long long __g1_start ;
   struct __anonstruct___g1_start32_817613186 __g1_start32 ;
};
#line 92 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
struct __pthread_cond_s {
   union __anonunion____missing_field_name_930316680 __annonCompField1 ;
   union __anonunion____missing_field_name_397133489 __annonCompField2 ;
   unsigned int __g_refs[2] ;
   unsigned int __g_size[2] ;
   unsigned int __g1_orig_size ;
   unsigned int __wrefs ;
   unsigned int __g_signals[2] ;
};
#line 119 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
typedef unsigned int __tss_t;
#line 120 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
typedef unsigned long __thrd_t;
#line 122 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
struct __anonstruct___once_flag_930316681 {
   int __data ;
};
#line 122 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
typedef struct __anonstruct___once_flag_930316681 __once_flag;
#line 27 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef unsigned long pthread_t;
#line 32 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union __anonunion_pthread_mutexattr_t_488594144 {
   char __size[4] ;
   int __align ;
};
#line 32 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union __anonunion_pthread_mutexattr_t_488594144 pthread_mutexattr_t;
#line 41 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union __anonunion_pthread_condattr_t_488594145 {
   char __size[4] ;
   int __align ;
};
#line 41 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union __anonunion_pthread_condattr_t_488594145 pthread_condattr_t;
#line 49 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef unsigned int pthread_key_t;
#line 53 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef int pthread_once_t;
#line 56 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union pthread_attr_t {
   char __size[56] ;
   long __align ;
};
#line 62 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union pthread_attr_t pthread_attr_t;
#line 67 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union __anonunion_pthread_mutex_t_335460617 {
   struct __pthread_mutex_s __data ;
   char __size[40] ;
   long __align ;
};
#line 67 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union __anonunion_pthread_mutex_t_335460617 pthread_mutex_t;
#line 75 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union __anonunion_pthread_cond_t_951761805 {
   struct __pthread_cond_s __data ;
   char __size[48] ;
   long long __align ;
};
#line 75 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union __anonunion_pthread_cond_t_951761805 pthread_cond_t;
#line 86 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union __anonunion_pthread_rwlock_t_656928968 {
   struct __pthread_rwlock_arch_t __data ;
   char __size[56] ;
   long __align ;
};
#line 86 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union __anonunion_pthread_rwlock_t_656928968 pthread_rwlock_t;
#line 93 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union __anonunion_pthread_rwlockattr_t_145707745 {
   char __size[8] ;
   long __align ;
};
#line 93 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union __anonunion_pthread_rwlockattr_t_145707745 pthread_rwlockattr_t;
#line 103 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef int volatile   pthread_spinlock_t;
#line 108 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union __anonunion_pthread_barrier_t_145707746 {
   char __size[32] ;
   long __align ;
};
#line 108 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union __anonunion_pthread_barrier_t_145707746 pthread_barrier_t;
#line 114 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union __anonunion_pthread_barrierattr_t_951761806 {
   char __size[4] ;
   int __align ;
};
#line 114 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union __anonunion_pthread_barrierattr_t_951761806 pthread_barrierattr_t;
#line 31 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
typedef long __jmp_buf[8];
#line 5 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
struct __anonstruct___sigset_t_764561023 {
   unsigned long __val[1024UL / (8UL * sizeof(unsigned long ))] ;
};
#line 5 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
typedef struct __anonstruct___sigset_t_764561023 __sigset_t;
#line 26 "/usr/include/x86_64-linux-gnu/bits/types/struct___jmp_buf_tag.h"
struct __jmp_buf_tag {
   __jmp_buf __jmpbuf ;
   int __mask_was_saved ;
   __sigset_t __saved_mask ;
};
#line 37 "/usr/include/pthread.h"
enum __anonenum_34415463 {
    PTHREAD_CREATE_JOINABLE = 0,
    PTHREAD_CREATE_DETACHED = 1
} ;
#line 47
enum __anonenum_508643754 {
    PTHREAD_MUTEX_TIMED_NP = 0,
    PTHREAD_MUTEX_RECURSIVE_NP = 1,
    PTHREAD_MUTEX_ERRORCHECK_NP = 2,
    PTHREAD_MUTEX_ADAPTIVE_NP = 3,
    PTHREAD_MUTEX_NORMAL = 0,
    PTHREAD_MUTEX_RECURSIVE = 1,
    PTHREAD_MUTEX_ERRORCHECK = 2,
    PTHREAD_MUTEX_DEFAULT = 0
} ;
#line 69
enum __anonenum_931900394 {
    PTHREAD_MUTEX_STALLED = 0,
    PTHREAD_MUTEX_STALLED_NP = 0,
    PTHREAD_MUTEX_ROBUST = 1,
    PTHREAD_MUTEX_ROBUST_NP = 1
} ;
#line 81
enum __anonenum_205214487 {
    PTHREAD_PRIO_NONE = 0,
    PTHREAD_PRIO_INHERIT = 1,
    PTHREAD_PRIO_PROTECT = 2
} ;
#line 104
enum __anonenum_25043950 {
    PTHREAD_RWLOCK_PREFER_READER_NP = 0,
    PTHREAD_RWLOCK_PREFER_WRITER_NP = 1,
    PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP = 2,
    PTHREAD_RWLOCK_DEFAULT_NP = 0
} ;
#line 124
enum __anonenum_436439511 {
    PTHREAD_INHERIT_SCHED = 0,
    PTHREAD_EXPLICIT_SCHED = 1
} ;
#line 134
enum __anonenum_998661166 {
    PTHREAD_SCOPE_SYSTEM = 0,
    PTHREAD_SCOPE_PROCESS = 1
} ;
#line 144
enum __anonenum_146137331 {
    PTHREAD_PROCESS_PRIVATE = 0,
    PTHREAD_PROCESS_SHARED = 1
} ;
#line 159 "/usr/include/pthread.h"
struct _pthread_cleanup_buffer {
   void (*__routine)(void * ) ;
   void *__arg ;
   int __canceltype ;
   struct _pthread_cleanup_buffer *__prev ;
};
#line 168
enum __anonenum_53396917 {
    PTHREAD_CANCEL_ENABLE = 0,
    PTHREAD_CANCEL_DISABLE = 1
} ;
#line 175
enum __anonenum_904563783 {
    PTHREAD_CANCEL_DEFERRED = 0,
    PTHREAD_CANCEL_ASYNCHRONOUS = 1
} ;
#line 538 "/usr/include/pthread.h"
struct __cancel_jmp_buf_tag {
   __jmp_buf __cancel_jmp_buf ;
   int __mask_was_saved ;
};
#line 544 "/usr/include/pthread.h"
struct __anonstruct___pthread_unwind_buf_t_530692248 {
   struct __cancel_jmp_buf_tag __cancel_jmp_buf[1] ;
   void *__pad[4] ;
};
#line 544 "/usr/include/pthread.h"
typedef struct __anonstruct___pthread_unwind_buf_t_530692248  __attribute__((__aligned__)) __pthread_unwind_buf_t;
#line 557 "/usr/include/pthread.h"
struct __pthread_cleanup_frame {
   void (*__cancel_routine)(void * ) ;
   void *__cancel_arg ;
   int __do_it ;
   int __cancel_type ;
};
#line 5 "ctrace_comb.c"
union __anonunion_pthread_attr_t_4 {
   char __size[36] ;
   long __align ;
};
#line 9 "ctrace_comb.c"
typedef union __anonunion_pthread_attr_t_4 pthread_attr_t___0;
#line 10 "ctrace_comb.c"
union __anonunion_sem_t_27 {
   char __size[16] ;
   long __align ;
};
#line 14 "ctrace_comb.c"
typedef union __anonunion_sem_t_27 sem_t;
#line 15 "ctrace_comb.c"
typedef unsigned int uint_t;
#line 16 "ctrace_comb.c"
typedef char const   cchar_t;
#line 17 "ctrace_comb.c"
typedef pthread_t tid_t;
#line 18 "ctrace_comb.c"
typedef uint_t tenable_t;
#line 19 "ctrace_comb.c"
typedef uint_t ton_t;
#line 20 "ctrace_comb.c"
typedef uint_t tlevel_t;
#line 21 "ctrace_comb.c"
typedef uint_t tserver_t;
#line 22 "ctrace_comb.c"
typedef uint_t taction_t;
#line 23 "ctrace_comb.c"
typedef unsigned int size_t___0;
#line 24 "ctrace_comb.c"
typedef long long __quad_t___0;
#line 26 "ctrace_comb.c"
typedef __quad_t___0 __off64_t___0;
#line 29
struct _IO_FILE ;
#line 30 "ctrace_comb.c"
typedef struct _IO_FILE FILE;
#line 31 "ctrace_comb.c"
typedef __builtin_va_list __gnuc_va_list;
#line 32 "ctrace_comb.c"
typedef void _IO_lock_t;
#line 33 "ctrace_comb.c"
struct _IO_marker {
   struct _IO_marker *_next ;
   struct _IO_FILE *_sbuf ;
   int _pos ;
};
#line 38 "ctrace_comb.c"
struct _IO_FILE {
   int _flags ;
   char *_IO_read_ptr ;
   char *_IO_read_end ;
   char *_IO_read_base ;
   char *_IO_write_base ;
   char *_IO_write_ptr ;
   char *_IO_write_end ;
   char *_IO_buf_base ;
   char *_IO_buf_end ;
   char *_IO_save_base ;
   char *_IO_backup_base ;
   char *_IO_save_end ;
   struct _IO_marker *_markers ;
   struct _IO_FILE *_chain ;
   int _fileno ;
   int _flags2 ;
   __off_t _old_offset ;
   unsigned short _cur_column ;
   signed char _vtable_offset ;
   char _shortbuf[1] ;
   _IO_lock_t *_lock ;
   __off64_t___0 _offset ;
   void *__pad1 ;
   void *__pad2 ;
   void *__pad3 ;
   void *__pad4 ;
   size_t___0 __pad5 ;
   int _mode ;
   char _unused2[(15UL * sizeof(int ) - 4UL * sizeof(void *)) - sizeof(size_t___0 )] ;
};
#line 69 "ctrace_comb.c"
typedef __gnuc_va_list va_list;
#line 75 "ctrace_comb.c"
union __anonunion____missing_field_name_14 {
   int __spins ;
   __pthread_slist_t __list ;
};
#line 79 "ctrace_comb.c"
struct __pthread_mutex_s___0 {
   int __lock ;
   unsigned int __count ;
   int __owner ;
   int __kind ;
   unsigned int __nusers ;
   union __anonunion____missing_field_name_14 __annonCompField1 ;
};
#line 87 "ctrace_comb.c"
union __anonunion_pthread_mutex_t_13 {
   struct __pthread_mutex_s___0 __data ;
   char __size[24] ;
   long __align ;
};
#line 92 "ctrace_comb.c"
typedef union __anonunion_pthread_mutex_t_13 pthread_mutex_t___0;
#line 93 "ctrace_comb.c"
union __anonunion_pthread_mutexattr_t_15 {
   char __size[4] ;
   long __align ;
};
#line 97 "ctrace_comb.c"
typedef union __anonunion_pthread_mutexattr_t_15 pthread_mutexattr_t___0;
#line 98 "ctrace_comb.c"
typedef __socklen_t socklen_t;
#line 99 "ctrace_comb.c"
typedef unsigned short sa_family_t;
#line 100 "ctrace_comb.c"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14] ;
};
#line 104 "ctrace_comb.c"
typedef unsigned short uint16_t;
#line 105 "ctrace_comb.c"
typedef unsigned int uint32_t;
#line 106 "ctrace_comb.c"
typedef uint16_t in_port_t;
#line 107 "ctrace_comb.c"
typedef uint32_t in_addr_t;
#line 108 "ctrace_comb.c"
struct in_addr {
   in_addr_t s_addr ;
};
#line 111 "ctrace_comb.c"
struct sockaddr_in {
   sa_family_t sin_family ;
   in_port_t sin_port ;
   struct in_addr sin_addr ;
   unsigned char sin_zero[((sizeof(struct sockaddr ) - sizeof(unsigned short )) - sizeof(in_port_t )) - sizeof(struct in_addr )] ;
};
#line 117 "ctrace_comb.c"
struct hostent {
   char *h_name ;
   char **h_aliases ;
   int h_addrtype ;
   int h_length ;
   char **h_addr_list ;
};
#line 137 "ctrace_comb.c"
struct tthread_t {
   tid_t id ;
   char name[10] ;
   int on ;
   tlevel_t level ;
   char wspace[44] ;
   char fmt[1024] ;
   char trace[1098] ;
   struct tthread_t *next ;
};
#line 147 "ctrace_comb.c"
typedef struct tthread_t tthread_t;
#line 148 "ctrace_comb.c"
struct tunit_t {
   int on ;
   tlevel_t level ;
};
#line 152 "ctrace_comb.c"
typedef struct tunit_t tunit_t;
/* compiler builtin: 
   void __builtin_va_copy(__builtin_va_list  , __builtin_va_list  ) ;  */
/* compiler builtin: 
   void *__builtin_frob_return_address(void * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_and_and_fetch(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_or(...) ;  */
/* compiler builtin: 
   int __builtin_popcountll(unsigned long long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch(...) ;  */
/* compiler builtin: 
   float __builtin_atanf(float  ) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_addps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   unsigned long __builtin_strcspn(char const   * , char const   * ) ;  */
/* compiler builtin: 
   float __builtin_asinf(float  ) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_maxps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_unpckhps(float __attribute__((____vector_size____(16)))   ,
                                                                           float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   double __builtin_acos(double  ) ;  */
/* compiler builtin: 
   int __builtin___sprintf_chk(char * , int  , unsigned long  , char const   *  , ...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch_16(...) ;  */
/* compiler builtin: 
   double __builtin_cosh(double  ) ;  */
/* compiler builtin: 
   float __builtin_tanhf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand_16(...) ;  */
/* compiler builtin: 
   void *__builtin_mempcpy(void * , void const   * , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch_1(...) ;  */
/* compiler builtin: 
   long double __builtin_sqrtl(long double  ) ;  */
/* compiler builtin: 
   int __builtin_parity(unsigned int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or(...) ;  */
/* compiler builtin: 
   long double __builtin_coshl(long double  ) ;  */
/* compiler builtin: 
   long double __builtin_cosl(long double  ) ;  */
/* compiler builtin: 
   float __builtin_cosf(float  ) ;  */
/* compiler builtin: 
   void __sync_synchronize(...) ;  */
/* compiler builtin: 
   long double __builtin_acosl(long double  ) ;  */
/* compiler builtin: 
   void *__builtin___mempcpy_chk(void * , void const   * , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_or_and_fetch(...) ;  */
/* compiler builtin: 
   int __builtin_clz(unsigned int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch_4(...) ;  */
/* compiler builtin: 
   double __builtin_log10(double  ) ;  */
/* compiler builtin: 
   char *__builtin___strcat_chk(char * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   float __builtin_modff(float  , float * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch_4(...) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_n(...) ;  */
/* compiler builtin: 
   double __builtin_sin(double  ) ;  */
/* compiler builtin: 
   double __builtin_frexp(double  , int * ) ;  */
/* compiler builtin: 
   float __builtin_acosf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_add_and_fetch(...) ;  */
/* compiler builtin: 
   long double __builtin_sinhl(long double  ) ;  */
/* compiler builtin: 
   char *__builtin___stpcpy_chk(char * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   void __atomic_signal_fence(int  ) ;  */
/* compiler builtin: 
   double __builtin_fabs(double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch_16(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_nand(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch_2(...) ;  */
/* compiler builtin: 
   void __atomic_thread_fence(int  ) ;  */
/* compiler builtin: 
   void __atomic_store_16(...) ;  */
/* compiler builtin: 
   void __builtin_va_start(__builtin_va_list  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and_8(...) ;  */
/* compiler builtin: 
   short __builtin_bswap16(short  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch_2(...) ;  */
/* compiler builtin: 
   _Bool __atomic_test_and_set(void * , int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add_8(...) ;  */
/* compiler builtin: 
   int __builtin_ctz(unsigned int  ) ;  */
/* compiler builtin: 
   char *__builtin_strpbrk(char const   * , char const   * ) ;  */
/* compiler builtin: 
   char *__builtin_strcpy(char * , char const   * ) ;  */
/* compiler builtin: 
   double __builtin_sqrt(double  ) ;  */
/* compiler builtin: 
   __builtin_va_list __builtin_next_arg(void) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_16(...) ;  */
/* compiler builtin: 
   void __atomic_clear(_Bool * , int  ) ;  */
/* compiler builtin: 
   void __atomic_store(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch_2(...) ;  */
/* compiler builtin: 
   float __builtin_log10f(float  ) ;  */
/* compiler builtin: 
   long double __builtin_fabsl(long double  ) ;  */
/* compiler builtin: 
   long double __builtin_floorl(long double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch(...) ;  */
/* compiler builtin: 
   float __builtin_floorf(float  ) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_4(...) ;  */
/* compiler builtin: 
   void *__builtin_memcpy(void * , void const   * , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_sub_and_fetch(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_nand_and_fetch(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_16(...) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_subps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   int __builtin_parityll(unsigned long long  ) ;  */
/* compiler builtin: 
   void __builtin_va_end(__builtin_va_list  ) ;  */
/* compiler builtin: 
   void __builtin_bzero(void * , unsigned long  ) ;  */
/* compiler builtin: 
   _Bool __atomic_always_lock_free(unsigned long  , void * ) ;  */
/* compiler builtin: 
   int __builtin_strncmp(char const   * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch_16(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_xor_and_fetch(...) ;  */
/* compiler builtin: 
   int __builtin___vsprintf_chk(char * , int  , unsigned long  , char const   * ,
                                __builtin_va_list  ) ;  */
/* compiler builtin: 
   float __builtin_sqrtf(float  ) ;  */
/* compiler builtin: 
   double __builtin_nans(char const   * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor_8(...) ;  */
/* compiler builtin: 
   double __builtin_exp(double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_1(...) ;  */
/* compiler builtin: 
   int __builtin_strcmp(char const   * , char const   * ) ;  */
/* compiler builtin: 
   float __builtin_ldexpf(float  , int  ) ;  */
/* compiler builtin: 
   float __builtin_powif(float  , int  ) ;  */
/* compiler builtin: 
   long double __builtin_log10l(long double  ) ;  */
/* compiler builtin: 
   void *__builtin___memmove_chk(void * , void const   * , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_and(...) ;  */
/* compiler builtin: 
   void *__builtin_return_address(unsigned int  ) ;  */
/* compiler builtin: 
   void __atomic_feraiseexcept(int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch_4(...) ;  */
/* compiler builtin: 
   float __builtin_fabsf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch_1(...) ;  */
/* compiler builtin: 
   unsigned long __builtin_object_size(void * , int  ) ;  */
/* compiler builtin: 
   void *__builtin_alloca(unsigned long  ) ;  */
/* compiler builtin: 
   int __builtin_va_arg_pack_len(void) ;  */
/* compiler builtin: 
   long double __builtin_tanl(long double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and_2(...) ;  */
/* compiler builtin: 
   void __sync_lock_release(...) ;  */
/* compiler builtin: 
   long double __builtin_modfl(long double  , long double * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand_8(...) ;  */
/* compiler builtin: 
   char *__builtin_stpcpy(char * , char const   * ) ;  */
/* compiler builtin: 
   long double __builtin_sinl(long double  ) ;  */
/* compiler builtin: 
   double __builtin_asin(double  ) ;  */
/* compiler builtin: 
   float __builtin_sinhf(float  ) ;  */
/* compiler builtin: 
   int __builtin_ctzl(unsigned long  ) ;  */
/* compiler builtin: 
   long double __builtin_tanhl(long double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add(...) ;  */
/* compiler builtin: 
   long __builtin_bswap64(long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand_2(...) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_mulps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   double __builtin_tan(double  ) ;  */
/* compiler builtin: 
   char *__builtin_strncpy(char * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   float __builtin_inff(void) ;  */
/* compiler builtin: 
   void *__builtin___memset_chk(void * , int  , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_n(...) ;  */
/* compiler builtin: 
   double __builtin_huge_val(void) ;  */
/* compiler builtin: 
   int __builtin_clzl(unsigned long  ) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_16(...) ;  */
/* compiler builtin: 
   float __builtin_frexpf(float  , int * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_n(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or_1(...) ;  */
/* compiler builtin: 
   long double __builtin_fmodl(long double  ) ;  */
/* compiler builtin: 
   double __builtin_atan(double  ) ;  */
/* compiler builtin: 
   int __builtin___fprintf_chk(void * , int  , char const   *  , ...) ;  */
/* compiler builtin: 
   float __builtin_ceilf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add_1(...) ;  */
/* compiler builtin: 
   void __builtin_return(void const   * ) ;  */
/* compiler builtin: 
   long double __builtin_asinl(long double  ) ;  */
/* compiler builtin: 
   int __builtin_ffsll(unsigned long long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub_1(...) ;  */
/* compiler builtin: 
   int __builtin_va_arg_pack(void) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or_4(...) ;  */
/* compiler builtin: 
   char *__builtin___strncpy_chk(char * , char const   * , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   double __builtin_powi(double  , int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_2(...) ;  */
/* compiler builtin: 
   char *__builtin_strchr(char * , int  ) ;  */
/* compiler builtin: 
   char *__builtin___strncat_chk(char * , char const   * , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   void __atomic_store_2(...) ;  */
/* compiler builtin: 
   long double __builtin_huge_vall(void) ;  */
/* compiler builtin: 
   int __builtin_ffsl(unsigned long  ) ;  */
/* compiler builtin: 
   int __builtin___vprintf_chk(int  , char const   * , __builtin_va_list  ) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_unpcklps(float __attribute__((____vector_size____(16)))   ,
                                                                           float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   char *__builtin_strncat(char * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   int __builtin_ctzll(unsigned long long  ) ;  */
/* compiler builtin: 
   void __builtin_stdarg_start(__builtin_va_list  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_xor(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and_4(...) ;  */
/* compiler builtin: 
   long double __builtin_frexpl(long double  , int * ) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange(...) ;  */
/* compiler builtin: 
   float __builtin_tanf(float  ) ;  */
/* compiler builtin: 
   long double __builtin_logl(long double  ) ;  */
/* compiler builtin: 
   void __builtin_va_arg(__builtin_va_list  , unsigned long  , void * ) ;  */
/* compiler builtin: 
   long __builtin_expect(long  , long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_1(...) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_1(...) ;  */
/* compiler builtin: 
   int __builtin___printf_chk(int  , char const   *  , ...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor_2(...) ;  */
/* compiler builtin: 
   int __builtin___vfprintf_chk(void * , int  , char const   * , __builtin_va_list  ) ;  */
/* compiler builtin: 
   void __builtin_prefetch(void const   *  , ...) ;  */
/* compiler builtin: 
   long double __builtin_nansl(char const   * ) ;  */
/* compiler builtin: 
   double __builtin_fmod(double  ) ;  */
/* compiler builtin: 
   void __atomic_load(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch_16(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch_16(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_val_compare_and_swap(...) ;  */
/* compiler builtin: 
   void __atomic_store_4(...) ;  */
/* compiler builtin: 
   double __builtin_tanh(double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add_16(...) ;  */
/* compiler builtin: 
   void __builtin_unreachable(void) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_2(...) ;  */
/* compiler builtin: 
   long double __builtin_ldexpl(long double  , int  ) ;  */
/* compiler builtin: 
   void *__builtin_apply(void (*)() , void * , unsigned long  ) ;  */
/* compiler builtin: 
   float __builtin_sinf(float  ) ;  */
/* compiler builtin: 
   double __builtin_ceil(double  ) ;  */
/* compiler builtin: 
   void __atomic_exchange(...) ;  */
/* compiler builtin: 
   long double __builtin_powil(long double  , int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch_8(...) ;  */
/* compiler builtin: 
   long double __builtin_expl(long double  ) ;  */
/* compiler builtin: 
   int __builtin_constant_p(int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub_16(...) ;  */
/* compiler builtin: 
   double __builtin_log(double  ) ;  */
/* compiler builtin: 
   float __builtin_expf(float  ) ;  */
/* compiler builtin: 
   int __builtin_types_compatible_p(unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   long double __builtin_atan2l(long double  , long double  ) ;  */
/* compiler builtin: 
   void *__builtin_apply_args(void) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_2(...) ;  */
/* compiler builtin: 
   float __builtin_logf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch_2(...) ;  */
/* compiler builtin: 
   unsigned long __builtin_strlen(char const   * ) ;  */
/* compiler builtin: 
   int __builtin_ffs(unsigned int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor_16(...) ;  */
/* compiler builtin: 
   double __builtin_inf(void) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or_16(...) ;  */
/* compiler builtin: 
   void *__builtin___memcpy_chk(void * , void const   * , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_4(...) ;  */
/* compiler builtin: 
   void __atomic_store_n(...) ;  */
/* compiler builtin: 
   void __builtin_trap(void) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add_4(...) ;  */
/* compiler builtin: 
   int __builtin_parityl(unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch_2(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_lock_test_and_set(...) ;  */
/* compiler builtin: 
   unsigned long __builtin_strspn(char const   * , char const   * ) ;  */
/* compiler builtin: 
   void __builtin_varargs_start(__builtin_va_list  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and_16(...) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch(...) ;  */
/* compiler builtin: 
   double __builtin_nan(char const   * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_8(...) ;  */
/* compiler builtin: 
   int __builtin___snprintf_chk(char * , unsigned long  , int  , unsigned long  ,
                                char const   *  , ...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub_2(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch(...) ;  */
/* compiler builtin: 
   long double __builtin_atanl(long double  ) ;  */
/* compiler builtin: 
   int __builtin_clzll(unsigned long long  ) ;  */
/* compiler builtin: 
   float __builtin_huge_valf(void) ;  */
/* compiler builtin: 
   float __builtin_coshf(float  ) ;  */
/* compiler builtin: 
   float __builtin_nansf(char const   * ) ;  */
/* compiler builtin: 
   void __atomic_store_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_add(...) ;  */
/* compiler builtin: 
   int __builtin___vsnprintf_chk(char * , unsigned long  , int  , unsigned long  ,
                                 char const   * , __builtin_va_list  ) ;  */
/* compiler builtin: 
   float __builtin_nanf(char const   * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch_2(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub_8(...) ;  */
/* compiler builtin: 
   _Bool __sync_bool_compare_and_swap(...) ;  */
/* compiler builtin: 
   double __builtin_atan2(double  , double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __builtin_tgmath(...) ;  */
/* compiler builtin: 
   int __builtin_popcountl(unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch_1(...) ;  */
/* compiler builtin: 
   long double __builtin_ceill(long double  ) ;  */
/* compiler builtin: 
   void __atomic_store_1(...) ;  */
/* compiler builtin: 
   char *__builtin___strcpy_chk(char * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or_2(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch_16(...) ;  */
/* compiler builtin: 
   double __builtin_floor(double  ) ;  */
/* compiler builtin: 
   double __builtin_cos(double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_sub(...) ;  */
/* compiler builtin: 
   void *__builtin_memset(void * , int  , int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add_2(...) ;  */
/* compiler builtin: 
   long double __builtin_nanl(char const   * ) ;  */
/* compiler builtin: 
   float __builtin_atan2f(float  , float  ) ;  */
/* compiler builtin: 
   _Bool __atomic_is_lock_free(unsigned long  , void * ) ;  */
/* compiler builtin: 
   int __builtin_popcount(unsigned int  ) ;  */
/* compiler builtin: 
   double __builtin_sinh(double  ) ;  */
/* compiler builtin: 
   void __builtin_bcopy(void const   * , void * , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub(...) ;  */
/* compiler builtin: 
   void *__builtin_extract_return_addr(void * ) ;  */
/* compiler builtin: 
   int __builtin_bswap32(int  ) ;  */
/* compiler builtin: 
   double __builtin_ldexp(double  , int  ) ;  */
/* compiler builtin: 
   long double __builtin_infl(void) ;  */
/* compiler builtin: 
   float __builtin_fmodf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch_4(...) ;  */
/* compiler builtin: 
   void *__builtin_frame_address(unsigned int  ) ;  */
#line 6 "/home/simmo/dev/goblint/sv-comp/goblint/includes/stdlib.c"
void qsort(void *ptr , size_t count , size_t size , int (*comp)(void const   * , void const   * ) )  __attribute__((__goblint_stub__)) ;
#line 7
void qsort(void *ptr , size_t count , size_t size , int (*comp)(void const   * , void const   * ) )  __attribute__((__goblint_stub__)) ;
#line 7 "/home/simmo/dev/goblint/sv-comp/goblint/includes/stdlib.c"
void qsort(void *ptr , size_t count , size_t size , int (*comp)(void const   * , void const   * ) ) 
{ 
  size_t i ;
  size_t j ;
  size_t i___0 ;
  size_t j___0 ;
  int r ;
  size_t k ;
  char *a ;
  char *b ;
  char c ;

  {
  {
#line 9
  i = (size_t )0;
  }
  {
#line 9
  while (1) {
    while_continue: /* CIL Label */ ;
#line 9
    if (! (i < count)) {
#line 9
      goto while_break;
    }
    {
#line 10
    j = (size_t )0;
    }
    {
#line 10
    while (1) {
      while_continue___0: /* CIL Label */ ;
#line 10
      if (! (j < count)) {
#line 10
        goto while_break___0;
      }
      {
#line 11
      (*comp)((void const   *)(ptr + i * size), (void const   *)(ptr + j * size));
#line 10
      j ++;
      }
    }
    while_break___0: /* CIL Label */ ;
    }
    {
#line 9
    i ++;
    }
  }
  while_break: /* CIL Label */ ;
  }
  {
#line 16
  i___0 = (size_t )0;
  }
  {
#line 16
  while (1) {
    while_continue___1: /* CIL Label */ ;
#line 16
    if (! (i___0 < count)) {
#line 16
      goto while_break___1;
    }
    {
#line 17
    j___0 = (size_t )0;
    }
    {
#line 17
    while (1) {
      while_continue___2: /* CIL Label */ ;
#line 17
      if (! (j___0 < count)) {
#line 17
        goto while_break___2;
      }
#line 19
      if (r) {
        {
#line 21
        k = (size_t )0;
        }
        {
#line 21
        while (1) {
          while_continue___3: /* CIL Label */ ;
#line 21
          if (! (k < size)) {
#line 21
            goto while_break___3;
          }
          {
#line 22
          a = (char *)((ptr + i___0 * size) + k);
#line 23
          b = (char *)((ptr + j___0 * size) + k);
#line 24
          c = *a;
#line 25
          *a = *b;
#line 26
          *b = c;
#line 21
          k ++;
          }
        }
        while_break___3: /* CIL Label */ ;
        }
      }
      {
#line 17
      j___0 ++;
      }
    }
    while_break___2: /* CIL Label */ ;
    }
    {
#line 16
    i___0 ++;
    }
  }
  while_break___1: /* CIL Label */ ;
  }
#line 33
  return;
}
}
#line 37
void *bsearch(void const   *key , void const   *ptr , size_t count , size_t size ,
              int (*comp)(void const   * , void const   * ) )  __attribute__((__goblint_stub__)) ;
#line 38
void *bsearch(void const   *key , void const   *ptr , size_t count , size_t size ,
              int (*comp)(void const   * , void const   * ) )  __attribute__((__goblint_stub__)) ;
#line 38 "/home/simmo/dev/goblint/sv-comp/goblint/includes/stdlib.c"
void *bsearch(void const   *key , void const   *ptr , size_t count , size_t size ,
              int (*comp)(void const   * , void const   * ) ) 
{ 
  size_t i ;
  void const   *a ;
  int tmp ;

  {
  {
#line 40
  i = (size_t )0;
  }
  {
#line 40
  while (1) {
    while_continue: /* CIL Label */ ;
#line 40
    if (! (i < count)) {
#line 40
      goto while_break;
    }
    {
#line 41
    a = ptr + i * size;
#line 42
    tmp = (*comp)(key, a);
    }
#line 42
    if (tmp == 0) {
#line 43
      return ((void *)a);
    }
    {
#line 40
    i ++;
    }
  }
  while_break: /* CIL Label */ ;
  }
#line 47
  return ((void *)0);
}
}
#line 117 "/usr/include/x86_64-linux-gnu/bits/cpu-set.h"
extern int ( __attribute__((__leaf__)) __sched_cpucount)(size_t __setsize , cpu_set_t const   *__setp )  __attribute__((__nothrow__)) ;
#line 119
extern cpu_set_t *( __attribute__((__leaf__)) __sched_cpualloc)(size_t __count )  __attribute__((__nothrow__)) ;
#line 120
extern void ( __attribute__((__leaf__)) __sched_cpufree)(cpu_set_t *__set )  __attribute__((__nothrow__)) ;
#line 54 "/usr/include/sched.h"
extern int ( __attribute__((__leaf__)) sched_setparam)(__pid_t __pid , struct sched_param  const  *__param )  __attribute__((__nothrow__)) ;
#line 58
extern int ( __attribute__((__leaf__)) sched_getparam)(__pid_t __pid , struct sched_param *__param )  __attribute__((__nothrow__)) ;
#line 61
extern int ( __attribute__((__leaf__)) sched_setscheduler)(__pid_t __pid , int __policy ,
                                                           struct sched_param  const  *__param )  __attribute__((__nothrow__)) ;
#line 65
extern int ( __attribute__((__leaf__)) sched_getscheduler)(__pid_t __pid )  __attribute__((__nothrow__)) ;
#line 68
extern int ( __attribute__((__leaf__)) sched_yield)(void)  __attribute__((__nothrow__)) ;
#line 71
extern int ( __attribute__((__leaf__)) sched_get_priority_max)(int __algorithm )  __attribute__((__nothrow__)) ;
#line 74
extern int ( __attribute__((__leaf__)) sched_get_priority_min)(int __algorithm )  __attribute__((__nothrow__)) ;
#line 78
extern int ( __attribute__((__leaf__)) sched_rr_get_interval)(__pid_t __pid , struct timespec *__t )  __attribute__((__nothrow__)) ;
#line 72 "/usr/include/time.h"
extern clock_t ( __attribute__((__leaf__)) clock)(void)  __attribute__((__nothrow__)) ;
#line 76
extern time_t ( __attribute__((__leaf__)) time)(time_t *__timer )  __attribute__((__nothrow__)) ;
#line 79
extern double ( __attribute__((__leaf__)) difftime)(time_t __time1 , time_t __time0 )  __attribute__((__nothrow__,
__const__)) ;
#line 83
extern time_t ( __attribute__((__leaf__)) mktime)(struct tm *__tp )  __attribute__((__nothrow__)) ;
#line 100
extern size_t ( __attribute__((__leaf__)) strftime)(char * __restrict  __s , size_t __maxsize ,
                                                    char const   * __restrict  __format ,
                                                    struct tm  const  * __restrict  __tp )  __attribute__((__nothrow__)) ;
#line 116
extern size_t ( __attribute__((__leaf__)) strftime_l)(char * __restrict  __s , size_t __maxsize ,
                                                      char const   * __restrict  __format ,
                                                      struct tm  const  * __restrict  __tp ,
                                                      locale_t __loc )  __attribute__((__nothrow__)) ;
#line 132
extern struct tm *( __attribute__((__leaf__)) gmtime)(time_t const   *__timer )  __attribute__((__nothrow__)) ;
#line 136
extern struct tm *( __attribute__((__leaf__)) localtime)(time_t const   *__timer )  __attribute__((__nothrow__)) ;
#line 154
extern struct tm *( __attribute__((__leaf__)) gmtime_r)(time_t const   * __restrict  __timer ,
                                                        struct tm * __restrict  __tp )  __attribute__((__nothrow__)) ;
#line 159
extern struct tm *( __attribute__((__leaf__)) localtime_r)(time_t const   * __restrict  __timer ,
                                                           struct tm * __restrict  __tp )  __attribute__((__nothrow__)) ;
#line 179
extern char *( __attribute__((__leaf__)) asctime)(struct tm  const  *__tp )  __attribute__((__nothrow__)) ;
#line 183
extern char *( __attribute__((__leaf__)) ctime)(time_t const   *__timer )  __attribute__((__nothrow__)) ;
#line 197
extern char *( __attribute__((__leaf__)) asctime_r)(struct tm  const  * __restrict  __tp ,
                                                    char * __restrict  __buf )  __attribute__((__nothrow__)) ;
#line 202
extern char *( __attribute__((__leaf__)) ctime_r)(time_t const   * __restrict  __timer ,
                                                  char * __restrict  __buf )  __attribute__((__nothrow__)) ;
#line 217
extern char *__tzname[2] ;
#line 218
extern int __daylight ;
#line 219
extern long __timezone ;
#line 224
extern char *tzname[2] ;
#line 228
extern void ( __attribute__((__leaf__)) tzset)(void)  __attribute__((__nothrow__)) ;
#line 232
extern int daylight ;
#line 233
extern long timezone ;
#line 249
extern time_t ( __attribute__((__leaf__)) timegm)(struct tm *__tp )  __attribute__((__nothrow__)) ;
#line 251
extern time_t ( __attribute__((__leaf__)) timelocal)(struct tm *__tp )  __attribute__((__nothrow__)) ;
#line 262
extern int ( __attribute__((__leaf__)) dysize)(int __year )  __attribute__((__nothrow__,
__const__)) ;
#line 272
extern int nanosleep(struct timespec  const  *__requested_time , struct timespec *__remaining ) ;
#line 276
extern int ( __attribute__((__leaf__)) clock_getres)(clockid_t __clock_id , struct timespec *__res )  __attribute__((__nothrow__)) ;
#line 279
extern int ( __attribute__((__leaf__)) clock_gettime)(clockid_t __clock_id , struct timespec *__tp )  __attribute__((__nothrow__)) ;
#line 282
extern int ( __attribute__((__leaf__)) clock_settime)(clockid_t __clock_id , struct timespec  const  *__tp )  __attribute__((__nothrow__)) ;
#line 311
extern int clock_nanosleep(clockid_t __clock_id , int __flags , struct timespec  const  *__req ,
                           struct timespec *__rem ) ;
#line 326
extern int ( __attribute__((__leaf__)) clock_getcpuclockid)(pid_t __pid , clockid_t *__clock_id )  __attribute__((__nothrow__)) ;
#line 331
extern int ( __attribute__((__leaf__)) timer_create)(clockid_t __clock_id , struct sigevent * __restrict  __evp ,
                                                     timer_t * __restrict  __timerid )  __attribute__((__nothrow__)) ;
#line 336
extern int ( __attribute__((__leaf__)) timer_delete)(timer_t __timerid )  __attribute__((__nothrow__)) ;
#line 340
extern int ( __attribute__((__leaf__)) timer_settime)(timer_t __timerid , int __flags ,
                                                      struct itimerspec  const  * __restrict  __value ,
                                                      struct itimerspec * __restrict  __ovalue )  __attribute__((__nothrow__)) ;
#line 345
extern int ( __attribute__((__leaf__)) timer_gettime)(timer_t __timerid , struct itimerspec *__value )  __attribute__((__nothrow__)) ;
#line 364
extern int ( __attribute__((__leaf__)) timer_getoverrun)(timer_t __timerid )  __attribute__((__nothrow__)) ;
#line 371
extern int ( __attribute__((__nonnull__(1), __leaf__)) timespec_get)(struct timespec *__ts ,
                                                                     int __base )  __attribute__((__nothrow__)) ;
#line 202 "/usr/include/pthread.h"
extern int ( __attribute__((__nonnull__(1,3))) pthread_create)(pthread_t * __restrict  __newthread ,
                                                               pthread_attr_t const   * __restrict  __attr ,
                                                               void *(*__start_routine)(void * ) ,
                                                               void * __restrict  __arg )  __attribute__((__nothrow__)) ;
#line 211
extern void pthread_exit(void *__retval )  __attribute__((__noreturn__)) ;
#line 219
extern int pthread_join(pthread_t __th , void **__thread_return ) ;
#line 269
extern int ( __attribute__((__leaf__)) pthread_detach)(pthread_t __th )  __attribute__((__nothrow__)) ;
#line 273
extern pthread_t ( __attribute__((__leaf__)) pthread_self)(void)  __attribute__((__nothrow__,
__const__)) ;
#line 276
extern int ( __attribute__((__leaf__)) pthread_equal)(pthread_t __thread1 , pthread_t __thread2 )  __attribute__((__nothrow__,
__const__)) ;
#line 285
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_attr_init)(pthread_attr_t *__attr )  __attribute__((__nothrow__)) ;
#line 288
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_attr_destroy)(pthread_attr_t *__attr )  __attribute__((__nothrow__)) ;
#line 292
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_attr_getdetachstate)(pthread_attr_t const   *__attr ,
                                                                                      int *__detachstate )  __attribute__((__nothrow__)) ;
#line 297
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_attr_setdetachstate)(pthread_attr_t *__attr ,
                                                                                    int __detachstate )  __attribute__((__nothrow__)) ;
#line 303
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_attr_getguardsize)(pthread_attr_t const   *__attr ,
                                                                                    size_t *__guardsize )  __attribute__((__nothrow__)) ;
#line 308
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_attr_setguardsize)(pthread_attr_t *__attr ,
                                                                                  size_t __guardsize )  __attribute__((__nothrow__)) ;
#line 314
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_attr_getschedparam)(pthread_attr_t const   * __restrict  __attr ,
                                                                                     struct sched_param * __restrict  __param )  __attribute__((__nothrow__)) ;
#line 319
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_attr_setschedparam)(pthread_attr_t * __restrict  __attr ,
                                                                                     struct sched_param  const  * __restrict  __param )  __attribute__((__nothrow__)) ;
#line 324
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_attr_getschedpolicy)(pthread_attr_t const   * __restrict  __attr ,
                                                                                      int * __restrict  __policy )  __attribute__((__nothrow__)) ;
#line 329
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_attr_setschedpolicy)(pthread_attr_t *__attr ,
                                                                                    int __policy )  __attribute__((__nothrow__)) ;
#line 333
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_attr_getinheritsched)(pthread_attr_t const   * __restrict  __attr ,
                                                                                       int * __restrict  __inherit )  __attribute__((__nothrow__)) ;
#line 338
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_attr_setinheritsched)(pthread_attr_t *__attr ,
                                                                                     int __inherit )  __attribute__((__nothrow__)) ;
#line 344
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_attr_getscope)(pthread_attr_t const   * __restrict  __attr ,
                                                                                int * __restrict  __scope )  __attribute__((__nothrow__)) ;
#line 349
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_attr_setscope)(pthread_attr_t *__attr ,
                                                                              int __scope )  __attribute__((__nothrow__)) ;
#line 353
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_attr_getstackaddr)(pthread_attr_t const   * __restrict  __attr ,
                                                                                    void ** __restrict  __stackaddr )  __attribute__((__nothrow__,
__deprecated__)) ;
#line 361
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_attr_setstackaddr)(pthread_attr_t *__attr ,
                                                                                  void *__stackaddr )  __attribute__((__nothrow__,
__deprecated__)) ;
#line 366
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_attr_getstacksize)(pthread_attr_t const   * __restrict  __attr ,
                                                                                    size_t * __restrict  __stacksize )  __attribute__((__nothrow__)) ;
#line 373
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_attr_setstacksize)(pthread_attr_t *__attr ,
                                                                                  size_t __stacksize )  __attribute__((__nothrow__)) ;
#line 379
extern int ( __attribute__((__nonnull__(1,2,3), __leaf__)) pthread_attr_getstack)(pthread_attr_t const   * __restrict  __attr ,
                                                                                  void ** __restrict  __stackaddr ,
                                                                                  size_t * __restrict  __stacksize )  __attribute__((__nothrow__)) ;
#line 387
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_attr_setstack)(pthread_attr_t *__attr ,
                                                                              void *__stackaddr ,
                                                                              size_t __stacksize )  __attribute__((__nothrow__)) ;
#line 441
extern int ( __attribute__((__nonnull__(3), __leaf__)) pthread_setschedparam)(pthread_t __target_thread ,
                                                                              int __policy ,
                                                                              struct sched_param  const  *__param )  __attribute__((__nothrow__)) ;
#line 446
extern int ( __attribute__((__nonnull__(2,3), __leaf__)) pthread_getschedparam)(pthread_t __target_thread ,
                                                                                int * __restrict  __policy ,
                                                                                struct sched_param * __restrict  __param )  __attribute__((__nothrow__)) ;
#line 452
extern int ( __attribute__((__leaf__)) pthread_setschedprio)(pthread_t __target_thread ,
                                                             int __prio )  __attribute__((__nothrow__)) ;
#line 509
int ( __attribute__((__nonnull__(1,2))) pthread_once)(pthread_once_t *once_control ,
                                                      void (*init_routine)(void) )  __attribute__((__goblint_stub__)) ;
#line 521
extern int pthread_setcancelstate(int __state , int *__oldstate ) ;
#line 525
extern int pthread_setcanceltype(int __type , int *__oldtype ) ;
#line 528
extern int pthread_cancel(pthread_t __th ) ;
#line 533
extern void pthread_testcancel(void) ;
#line 697
extern void __pthread_register_cancel(__pthread_unwind_buf_t *__buf ) ;
#line 709
extern void __pthread_unregister_cancel(__pthread_unwind_buf_t *__buf ) ;
#line 750
extern void __pthread_unwind_next(__pthread_unwind_buf_t *__buf )  __attribute__((__weak__,
__noreturn__)) ;
#line 766
extern int __sigsetjmp_cancel(struct __cancel_jmp_buf_tag *__env , int __savemask )  __asm__("__sigsetjmp") __attribute__((__returns_twice__,
__nothrow__)) ;
#line 781
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutex_init)(pthread_mutex_t *__mutex ,
                                                                           pthread_mutexattr_t const   *__mutexattr )  __attribute__((__nothrow__)) ;
#line 786
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutex_destroy)(pthread_mutex_t *__mutex )  __attribute__((__nothrow__)) ;
#line 790
extern int ( __attribute__((__nonnull__(1))) pthread_mutex_trylock)(pthread_mutex_t *__mutex )  __attribute__((__nothrow__)) ;
#line 794
extern int ( __attribute__((__nonnull__(1))) pthread_mutex_lock)(pthread_mutex_t *__mutex )  __attribute__((__nothrow__)) ;
#line 800
extern int ( __attribute__((__nonnull__(1,2))) pthread_mutex_timedlock)(pthread_mutex_t * __restrict  __mutex ,
                                                                        struct timespec  const  * __restrict  __abstime )  __attribute__((__nothrow__)) ;
#line 835
extern int ( __attribute__((__nonnull__(1))) pthread_mutex_unlock)(pthread_mutex_t *__mutex )  __attribute__((__nothrow__)) ;
#line 840
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_mutex_getprioceiling)(pthread_mutex_t const   * __restrict  __mutex ,
                                                                                       int * __restrict  __prioceiling )  __attribute__((__nothrow__)) ;
#line 847
extern int ( __attribute__((__nonnull__(1,3), __leaf__)) pthread_mutex_setprioceiling)(pthread_mutex_t * __restrict  __mutex ,
                                                                                       int __prioceiling ,
                                                                                       int * __restrict  __old_ceiling )  __attribute__((__nothrow__)) ;
#line 855
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutex_consistent)(pthread_mutex_t *__mutex )  __attribute__((__nothrow__)) ;
#line 874
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutexattr_init)(pthread_mutexattr_t *__attr )  __attribute__((__nothrow__)) ;
#line 878
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutexattr_destroy)(pthread_mutexattr_t *__attr )  __attribute__((__nothrow__)) ;
#line 882
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_mutexattr_getpshared)(pthread_mutexattr_t const   * __restrict  __attr ,
                                                                                       int * __restrict  __pshared )  __attribute__((__nothrow__)) ;
#line 888
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutexattr_setpshared)(pthread_mutexattr_t *__attr ,
                                                                                     int __pshared )  __attribute__((__nothrow__)) ;
#line 894
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_mutexattr_gettype)(pthread_mutexattr_t const   * __restrict  __attr ,
                                                                                    int * __restrict  __kind )  __attribute__((__nothrow__)) ;
#line 901
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutexattr_settype)(pthread_mutexattr_t *__attr ,
                                                                                  int __kind )  __attribute__((__nothrow__)) ;
#line 906
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_mutexattr_getprotocol)(pthread_mutexattr_t const   * __restrict  __attr ,
                                                                                        int * __restrict  __protocol )  __attribute__((__nothrow__)) ;
#line 913
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutexattr_setprotocol)(pthread_mutexattr_t *__attr ,
                                                                                      int __protocol )  __attribute__((__nothrow__)) ;
#line 918
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_mutexattr_getprioceiling)(pthread_mutexattr_t const   * __restrict  __attr ,
                                                                                           int * __restrict  __prioceiling )  __attribute__((__nothrow__)) ;
#line 924
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutexattr_setprioceiling)(pthread_mutexattr_t *__attr ,
                                                                                         int __prioceiling )  __attribute__((__nothrow__)) ;
#line 930
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_mutexattr_getrobust)(pthread_mutexattr_t const   *__attr ,
                                                                                      int *__robustness )  __attribute__((__nothrow__)) ;
#line 946
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutexattr_setrobust)(pthread_mutexattr_t *__attr ,
                                                                                    int __robustness )  __attribute__((__nothrow__)) ;
#line 967
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_rwlock_init)(pthread_rwlock_t * __restrict  __rwlock ,
                                                                            pthread_rwlockattr_t const   * __restrict  __attr )  __attribute__((__nothrow__)) ;
#line 972
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_rwlock_destroy)(pthread_rwlock_t *__rwlock )  __attribute__((__nothrow__)) ;
#line 976
extern int ( __attribute__((__nonnull__(1))) pthread_rwlock_rdlock)(pthread_rwlock_t *__rwlock )  __attribute__((__nothrow__)) ;
#line 980
extern int ( __attribute__((__nonnull__(1))) pthread_rwlock_tryrdlock)(pthread_rwlock_t *__rwlock )  __attribute__((__nothrow__)) ;
#line 986
extern int ( __attribute__((__nonnull__(1,2))) pthread_rwlock_timedrdlock)(pthread_rwlock_t * __restrict  __rwlock ,
                                                                           struct timespec  const  * __restrict  __abstime )  __attribute__((__nothrow__)) ;
#line 1023
extern int ( __attribute__((__nonnull__(1))) pthread_rwlock_wrlock)(pthread_rwlock_t *__rwlock )  __attribute__((__nothrow__)) ;
#line 1027
extern int ( __attribute__((__nonnull__(1))) pthread_rwlock_trywrlock)(pthread_rwlock_t *__rwlock )  __attribute__((__nothrow__)) ;
#line 1033
extern int ( __attribute__((__nonnull__(1,2))) pthread_rwlock_timedwrlock)(pthread_rwlock_t * __restrict  __rwlock ,
                                                                           struct timespec  const  * __restrict  __abstime )  __attribute__((__nothrow__)) ;
#line 1071
extern int ( __attribute__((__nonnull__(1))) pthread_rwlock_unlock)(pthread_rwlock_t *__rwlock )  __attribute__((__nothrow__)) ;
#line 1078
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_rwlockattr_init)(pthread_rwlockattr_t *__attr )  __attribute__((__nothrow__)) ;
#line 1082
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_rwlockattr_destroy)(pthread_rwlockattr_t *__attr )  __attribute__((__nothrow__)) ;
#line 1086
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_rwlockattr_getpshared)(pthread_rwlockattr_t const   * __restrict  __attr ,
                                                                                        int * __restrict  __pshared )  __attribute__((__nothrow__)) ;
#line 1092
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_rwlockattr_setpshared)(pthread_rwlockattr_t *__attr ,
                                                                                      int __pshared )  __attribute__((__nothrow__)) ;
#line 1097
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_rwlockattr_getkind_np)(pthread_rwlockattr_t const   * __restrict  __attr ,
                                                                                        int * __restrict  __pref )  __attribute__((__nothrow__)) ;
#line 1103
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_rwlockattr_setkind_np)(pthread_rwlockattr_t *__attr ,
                                                                                      int __pref )  __attribute__((__nothrow__)) ;
#line 1112
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_cond_init)(pthread_cond_t * __restrict  __cond ,
                                                                          pthread_condattr_t const   * __restrict  __cond_attr )  __attribute__((__nothrow__)) ;
#line 1117
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_cond_destroy)(pthread_cond_t *__cond )  __attribute__((__nothrow__)) ;
#line 1121
extern int ( __attribute__((__nonnull__(1))) pthread_cond_signal)(pthread_cond_t *__cond )  __attribute__((__nothrow__)) ;
#line 1125
extern int ( __attribute__((__nonnull__(1))) pthread_cond_broadcast)(pthread_cond_t *__cond )  __attribute__((__nothrow__)) ;
#line 1133
extern int ( __attribute__((__nonnull__(1,2))) pthread_cond_wait)(pthread_cond_t * __restrict  __cond ,
                                                                  pthread_mutex_t * __restrict  __mutex ) ;
#line 1145
extern int ( __attribute__((__nonnull__(1,2,3))) pthread_cond_timedwait)(pthread_cond_t * __restrict  __cond ,
                                                                         pthread_mutex_t * __restrict  __mutex ,
                                                                         struct timespec  const  * __restrict  __abstime ) ;
#line 1194
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_condattr_init)(pthread_condattr_t *__attr )  __attribute__((__nothrow__)) ;
#line 1198
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_condattr_destroy)(pthread_condattr_t *__attr )  __attribute__((__nothrow__)) ;
#line 1202
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_condattr_getpshared)(pthread_condattr_t const   * __restrict  __attr ,
                                                                                      int * __restrict  __pshared )  __attribute__((__nothrow__)) ;
#line 1208
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_condattr_setpshared)(pthread_condattr_t *__attr ,
                                                                                    int __pshared )  __attribute__((__nothrow__)) ;
#line 1213
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_condattr_getclock)(pthread_condattr_t const   * __restrict  __attr ,
                                                                                    __clockid_t * __restrict  __clock_id )  __attribute__((__nothrow__)) ;
#line 1219
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_condattr_setclock)(pthread_condattr_t *__attr ,
                                                                                  __clockid_t __clock_id )  __attribute__((__nothrow__)) ;
#line 1230
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_spin_init)(pthread_spinlock_t *__lock ,
                                                                          int __pshared )  __attribute__((__nothrow__)) ;
#line 1234
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_spin_destroy)(pthread_spinlock_t *__lock )  __attribute__((__nothrow__)) ;
#line 1238
extern int ( __attribute__((__nonnull__(1))) pthread_spin_lock)(pthread_spinlock_t *__lock )  __attribute__((__nothrow__)) ;
#line 1242
extern int ( __attribute__((__nonnull__(1))) pthread_spin_trylock)(pthread_spinlock_t *__lock )  __attribute__((__nothrow__)) ;
#line 1246
extern int ( __attribute__((__nonnull__(1))) pthread_spin_unlock)(pthread_spinlock_t *__lock )  __attribute__((__nothrow__)) ;
#line 1254
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_barrier_init)(pthread_barrier_t * __restrict  __barrier ,
                                                                             pthread_barrierattr_t const   * __restrict  __attr ,
                                                                             unsigned int __count )  __attribute__((__nothrow__)) ;
#line 1260
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_barrier_destroy)(pthread_barrier_t *__barrier )  __attribute__((__nothrow__)) ;
#line 1264
extern int ( __attribute__((__nonnull__(1))) pthread_barrier_wait)(pthread_barrier_t *__barrier )  __attribute__((__nothrow__)) ;
#line 1269
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_barrierattr_init)(pthread_barrierattr_t *__attr )  __attribute__((__nothrow__)) ;
#line 1273
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_barrierattr_destroy)(pthread_barrierattr_t *__attr )  __attribute__((__nothrow__)) ;
#line 1277
extern int ( __attribute__((__nonnull__(1,2), __leaf__)) pthread_barrierattr_getpshared)(pthread_barrierattr_t const   * __restrict  __attr ,
                                                                                         int * __restrict  __pshared )  __attribute__((__nothrow__)) ;
#line 1283
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_barrierattr_setpshared)(pthread_barrierattr_t *__attr ,
                                                                                       int __pshared )  __attribute__((__nothrow__)) ;
#line 1297
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_key_create)(pthread_key_t *__key ,
                                                                           void (*__destr_function)(void * ) )  __attribute__((__nothrow__)) ;
#line 1302
extern int ( __attribute__((__leaf__)) pthread_key_delete)(pthread_key_t __key )  __attribute__((__nothrow__)) ;
#line 1305
extern void *( __attribute__((__leaf__)) pthread_getspecific)(pthread_key_t __key )  __attribute__((__nothrow__)) ;
#line 1308
extern int ( __attribute__((__leaf__)) pthread_setspecific)(pthread_key_t __key ,
                                                            void const   *__pointer )  __attribute__((__nothrow__,
__access__(__none__,2))) ;
#line 1315
extern int ( __attribute__((__nonnull__(2), __leaf__)) pthread_getcpuclockid)(pthread_t __thread_id ,
                                                                              __clockid_t *__clock_id )  __attribute__((__nothrow__)) ;
#line 1332
extern int ( __attribute__((__leaf__)) pthread_atfork)(void (*__prepare)(void) , void (*__parent)(void) ,
                                                       void (*__child)(void) )  __attribute__((__nothrow__)) ;
#line 5 "/home/simmo/dev/goblint/sv-comp/goblint/includes/pthread.c"
int ( __attribute__((__nonnull__(1,2))) pthread_once)(pthread_once_t *once_control ,
                                                      void (*init_routine)(void) )  __attribute__((__goblint_stub__)) ;
#line 5 "/home/simmo/dev/goblint/sv-comp/goblint/includes/pthread.c"
int ( __attribute__((__nonnull__(1,2))) pthread_once)(pthread_once_t *once_control ,
                                                      void (*init_routine)(void) ) 
{ 
  int top ;

  {
  {
#line 8
  (*init_routine)();
  }
#line 9
  return (top);
}
}
#line 153 "ctrace_comb.c"
#pragma merger(0,"/tmp/cil-DDXCGPyu.i","-g")
#line 159
extern int sem_init(sem_t *__sem , int __pshared , unsigned int __value )  __attribute__((__nothrow__)) ;
#line 160
extern int sem_destroy(sem_t *__sem )  __attribute__((__nothrow__)) ;
#line 161
extern int sem_wait(sem_t *__sem ) ;
#line 162
extern int sem_post(sem_t *__sem )  __attribute__((__nothrow__)) ;
#line 163
tenable_t _trc ;
#line 164
int trc_init(cchar_t *file , tenable_t trc , ton_t on , tlevel_t level , uint_t umax ,
             tserver_t server ) ;
#line 166
void trc_end(void) ;
#line 167
int trc_add_thread(cchar_t *tname , tid_t id ) ;
#line 168
int trc_remove_thread(tid_t id ) ;
#line 169
int trc_turn_thread_on(tid_t id ) ;
#line 170
int trc_add_level(tlevel_t level ) ;
#line 171
int trc_set_thread_level(tlevel_t level , tid_t id ) ;
#line 172
int trc_add_thread_level(tlevel_t level , tid_t id ) ;
#line 173
int trc_remove_thread_level(tlevel_t level , tid_t id ) ;
#line 174
char *trc_varargs(char const   *fmt  , ...) ;
#line 175
void trc_trace(taction_t a , uint_t i , tlevel_t level , cchar_t *file , uint_t line ,
               cchar_t *fn , cchar_t *kword , cchar_t *s ) ;
#line 177
void *thread1(void *arg ) ;
#line 178
void *thread2(void *arg ) ;
#line 179 "ctrace_comb.c"
sem_t sem  ;
#line 180 "ctrace_comb.c"
void myprocedure(void) 
{ 
  char *tmp ;

  {
#line 184
  if (_trc) {
    {
#line 185
    tmp = trc_varargs((char const   *)((void *)0));
#line 186
    trc_trace(0U, 0U, 1U, (cchar_t *)"main.c", 12U, (cchar_t *)"myprocedure", (cchar_t *)((void *)0),
              (cchar_t *)tmp);
    }
  }
#line 188
  if (_trc) {
    {
#line 189
    trc_trace(2U, 0U, 1U, (cchar_t *)"main.c", 13U, (cchar_t *)"myprocedure", (cchar_t *)((void *)0),
              (cchar_t *)((void *)0));
    }
  }
#line 191
  return;
}
}
#line 194 "ctrace_comb.c"
int main(int argc , char **argv ) 
{ 
  int i ;
  tid_t tid1 ;
  tid_t tid2 ;
  char *tmp ;
  int tmp___0 ;
  int tmp___1 ;
  char *tmp___2 ;
  char *tmp___3 ;
  char *tmp___4 ;

  {
  {
#line 206
  i = 6;
#line 207
  sem_init(& sem, 0, 1U);
#line 208
  trc_init((cchar_t *)((void *)0), 1U, 1U, 1U, 0U, 0U);
#line 209
  trc_add_thread((cchar_t *)*(argv + 0), 0UL);
  }
#line 210
  if (_trc) {
    {
#line 211
    tmp = trc_varargs((char const   *)"%d, %s", 1, "string");
#line 212
    trc_trace(0U, 0U, 1U, (cchar_t *)"main.c", 26U, (cchar_t *)"main", (cchar_t *)((void *)0),
              (cchar_t *)tmp);
    }
  }
  {
#line 214
  trc_add_level(4U);
#line 215
  tmp___0 = pthread_create((pthread_t * __restrict  )(& tid1), (pthread_attr_t___0 const   * __restrict  )((void *)0),
                           & thread1, (void * __restrict  )((void *)0));
  }
#line 217
  if (tmp___0) {
#line 218
    return (1);
  }
  {
#line 220
  tmp___1 = pthread_create((pthread_t * __restrict  )(& tid2), (pthread_attr_t___0 const   * __restrict  )((void *)0),
                           & thread2, (void * __restrict  )((void *)0));
  }
#line 222
  if (tmp___1) {
#line 223
    return (1);
  }
  {
#line 225
  sem_post(& sem);
#line 226
  sem_post(& sem);
#line 227
  myprocedure();
  }
#line 228
  if (_trc) {
    {
#line 229
    tmp___2 = trc_varargs((char const   *)"i=%d", 0);
#line 230
    trc_trace(3U, 0U, 1U, (cchar_t *)"main.c", 42U, (cchar_t *)"main", (cchar_t *)((void *)0),
              (cchar_t *)tmp___2);
    }
  }
#line 232
  if (_trc) {
    {
#line 233
    tmp___3 = trc_varargs((char const   *)"mystring=%s", "stringval");
#line 234
    trc_trace(4U, 0U, 64U, (cchar_t *)"main.c", 43U, (cchar_t *)"main", (cchar_t *)((void *)0),
              (cchar_t *)tmp___3);
    }
  }
  {
#line 236
  pthread_join(tid1, (void **)((void *)0));
#line 237
  trc_remove_thread(tid1);
#line 238
  pthread_join(tid2, (void **)((void *)0));
#line 239
  trc_remove_thread(tid2);
  }
#line 240
  if (_trc) {
    {
#line 241
    tmp___4 = trc_varargs((char const   *)"%d", i);
#line 242
    trc_trace(1U, 0U, 1U, (cchar_t *)"main.c", 51U, (cchar_t *)"main", (cchar_t *)((void *)0),
              (cchar_t *)tmp___4);
    }
  }
#line 244
  return (i);
  {
#line 245
  trc_end();
#line 246
  sem_destroy(& sem);
  }
}
}
#line 249 "ctrace_comb.c"
void *thread1(void *arg ) 
{ 
  char *tmp ;
  char *tmp___0 ;
  char *tmp___1 ;
  char *tmp___2 ;
  char *tmp___3 ;
  char *tmp___4 ;
  char *tmp___5 ;

  {
  {
#line 259
  trc_add_thread((cchar_t *)"thread1", 0UL);
#line 260
  trc_set_thread_level(16U, 0UL);
#line 261
  trc_add_thread_level(1U, 0UL);
#line 262
  trc_remove_thread_level(16U, 0UL);
#line 263
  trc_turn_thread_on(0UL);
#line 264
  sem_wait(& sem);
  }
#line 265
  if (_trc) {
    {
#line 266
    tmp = trc_varargs((char const   *)"%d", 1);
#line 267
    trc_trace(0U, 0U, 1U, (cchar_t *)"main.c", 65U, (cchar_t *)"thread1", (cchar_t *)((void *)0),
              (cchar_t *)tmp);
    }
  }
#line 269
  if (_trc) {
    {
#line 270
    tmp___0 = trc_varargs((char const   *)"level0: i=%d", 1);
#line 271
    trc_trace(3U, 0U, 1U, (cchar_t *)"main.c", 66U, (cchar_t *)"thread1", (cchar_t *)((void *)0),
              (cchar_t *)tmp___0);
    }
  }
#line 273
  if (_trc) {
    {
#line 274
    tmp___1 = trc_varargs((char const   *)"level1: i=%d", 1);
#line 275
    trc_trace(3U, 0U, 2U, (cchar_t *)"main.c", 67U, (cchar_t *)"thread1", (cchar_t *)((void *)0),
              (cchar_t *)tmp___1);
    }
  }
#line 277
  if (_trc) {
    {
#line 278
    tmp___2 = trc_varargs((char const   *)"level2: i=%d", 1);
#line 279
    trc_trace(3U, 0U, 4U, (cchar_t *)"main.c", 68U, (cchar_t *)"thread1", (cchar_t *)((void *)0),
              (cchar_t *)tmp___2);
    }
  }
#line 281
  if (_trc) {
    {
#line 282
    tmp___3 = trc_varargs((char const   *)"level3: i=%d", 1);
#line 283
    trc_trace(3U, 0U, 8U, (cchar_t *)"main.c", 69U, (cchar_t *)"thread1", (cchar_t *)((void *)0),
              (cchar_t *)tmp___3);
    }
  }
#line 285
  if (_trc) {
    {
#line 286
    tmp___4 = trc_varargs((char const   *)"level4: i=%d", 1);
#line 287
    trc_trace(3U, 0U, 16U, (cchar_t *)"main.c", 70U, (cchar_t *)"thread1", (cchar_t *)((void *)0),
              (cchar_t *)tmp___4);
    }
  }
#line 289
  if (_trc) {
    {
#line 290
    tmp___5 = trc_varargs((char const   *)"0x%x", (void *)0);
#line 291
    trc_trace(1U, 0U, 1U, (cchar_t *)"main.c", 72U, (cchar_t *)"thread1", (cchar_t *)((void *)0),
              (cchar_t *)tmp___5);
    }
  }
#line 293
  return ((void *)0);
}
}
#line 296 "ctrace_comb.c"
void *thread2(void *arg ) 
{ 
  char *tmp ;
  char *tmp___0 ;
  char *tmp___1 ;
  char *tmp___2 ;
  char *tmp___3 ;
  char *tmp___4 ;
  char *tmp___5 ;

  {
  {
#line 306
  trc_add_thread((cchar_t *)"thread2", 0UL);
#line 307
  sem_wait(& sem);
  }
#line 308
  if (_trc) {
    {
#line 309
    tmp = trc_varargs((char const   *)"%d", 2);
#line 310
    trc_trace(0U, 0U, 1U, (cchar_t *)"main.c", 79U, (cchar_t *)"thread2", (cchar_t *)((void *)0),
              (cchar_t *)tmp);
    }
  }
#line 312
  if (_trc) {
    {
#line 313
    tmp___0 = trc_varargs((char const   *)"level0: i=%d", 2);
#line 314
    trc_trace(3U, 0U, 1U, (cchar_t *)"main.c", 80U, (cchar_t *)"thread2", (cchar_t *)((void *)0),
              (cchar_t *)tmp___0);
    }
  }
#line 316
  if (_trc) {
    {
#line 317
    tmp___1 = trc_varargs((char const   *)"level1: i=%d", 2);
#line 318
    trc_trace(3U, 0U, 2U, (cchar_t *)"main.c", 81U, (cchar_t *)"thread2", (cchar_t *)((void *)0),
              (cchar_t *)tmp___1);
    }
  }
#line 320
  if (_trc) {
    {
#line 321
    tmp___2 = trc_varargs((char const   *)"level2: i=%d", 2);
#line 322
    trc_trace(3U, 0U, 4U, (cchar_t *)"main.c", 82U, (cchar_t *)"thread2", (cchar_t *)((void *)0),
              (cchar_t *)tmp___2);
    }
  }
#line 324
  if (_trc) {
    {
#line 325
    tmp___3 = trc_varargs((char const   *)"level3: i=%d", 2);
#line 326
    trc_trace(3U, 0U, 8U, (cchar_t *)"main.c", 83U, (cchar_t *)"thread2", (cchar_t *)((void *)0),
              (cchar_t *)tmp___3);
    }
  }
#line 328
  if (_trc) {
    {
#line 329
    tmp___4 = trc_varargs((char const   *)"level4: i=%d", 2);
#line 330
    trc_trace(3U, 0U, 16U, (cchar_t *)"main.c", 84U, (cchar_t *)"thread2", (cchar_t *)((void *)0),
              (cchar_t *)tmp___4);
    }
  }
#line 332
  if (_trc) {
    {
#line 333
    tmp___5 = trc_varargs((char const   *)"0x%x", (void *)0);
#line 334
    trc_trace(1U, 0U, 1U, (cchar_t *)"main.c", 85U, (cchar_t *)"thread2", (cchar_t *)((void *)0),
              (cchar_t *)tmp___5);
    }
  }
#line 336
  return ((void *)0);
}
}
#line 343
#pragma merger(0,"/tmp/cil-25ldxckG.i","")
#line 344
extern struct _IO_FILE *stdout ;
#line 345
extern struct _IO_FILE *stderr ;
#line 346
extern int fclose(FILE *__stream ) ;
#line 347
extern FILE *fopen(char const   * __restrict  __filename , char const   * __restrict  __modes ) ;
#line 348
extern int fprintf(FILE * __restrict  __stream , char const   * __restrict  __format 
                   , ...) ;
#line 350
extern int printf(char const   * __restrict  __format  , ...) ;
#line 351
extern int sprintf(char * __restrict  __s , char const   * __restrict  __format  , ...)  __attribute__((__nothrow__)) ;
#line 353
extern int vsprintf(char * __restrict  __s , char const   * __restrict  __format ,
                    __gnuc_va_list __arg )  __attribute__((__nothrow__)) ;
#line 355
extern void perror(char const   *__s ) ;
#line 356
extern int socket(int __domain , int __type , int __protocol )  __attribute__((__nothrow__)) ;
#line 357
extern int bind(int __fd , struct sockaddr  const  *__addr , socklen_t __len )  __attribute__((__nothrow__)) ;
#line 359
extern int connect(int __fd , struct sockaddr  const  *__addr , socklen_t __len ) ;
#line 360
extern int setsockopt(int __fd , int __level , int __optname , void const   *__optval ,
                      socklen_t __optlen )  __attribute__((__nothrow__)) ;
#line 362
extern int listen(int __fd , int __n )  __attribute__((__nothrow__)) ;
#line 363
extern int accept(int __fd , struct sockaddr * __restrict  __addr , socklen_t * __restrict  __addr_len ) ;
#line 364
extern uint32_t htonl(uint32_t __hostlong )  __attribute__((__nothrow__, __const__)) ;
#line 365
extern uint16_t htons(uint16_t __hostshort )  __attribute__((__nothrow__, __const__)) ;
#line 366
extern struct hostent *gethostbyname(char const   *__name ) ;
#line 378
static tlevel_t _tlevel ;
#line 379
int trc_file(cchar_t *file ) ;
#line 380
void trc_turn_on(void) ;
#line 381
void trc_turn_off(void) ;
#line 382
int trc_turn_thread_off(tid_t id ) ;
#line 383
int trc_turn_unit_on(uint_t i ) ;
#line 384
int trc_turn_unit_off(uint_t i ) ;
#line 385
int trc_set_level(tlevel_t level ) ;
#line 386
int trc_remove_level(tlevel_t level ) ;
#line 387
int trc_set_unit_level(uint_t i , tlevel_t level ) ;
#line 388
int trc_add_unit_level(uint_t i , tlevel_t level ) ;
#line 389
int trc_remove_unit_level(uint_t i , tlevel_t level ) ;
#line 390
void trc_state(void) ;
#line 391
void trc_print_threads(void) ;
#line 392 "ctrace_comb.c"
tenable_t _trc  =    (tenable_t )0;
#line 393 "ctrace_comb.c"
static ton_t _on  =    (ton_t )0;
#line 394 "ctrace_comb.c"
static tlevel_t _tlevel  =    (tlevel_t )0;
#line 395 "ctrace_comb.c"
static FILE *_fp  =    (FILE *)((void *)0);
#line 396 "ctrace_comb.c"
static tserver_t _server  =    (tserver_t )0;
#line 397 "ctrace_comb.c"
static int _msgs  =    0;
#line 398 "ctrace_comb.c"
static pthread_t _sid  ;
#line 399 "ctrace_comb.c"
static int _serv_sockfd  ;
#line 400 "ctrace_comb.c"
static sem_t _startclient  ;
#line 401 "ctrace_comb.c"
static int _initialised  =    0;
#line 402 "ctrace_comb.c"
static tthread_t *_thread[307]  ;
#line 403 "ctrace_comb.c"
static uint_t _numthreads  =    (uint_t )0;
#line 404 "ctrace_comb.c"
static pthread_mutex_t___0 _hashmutex  ;
#line 405 "ctrace_comb.c"
static int _hashreads  =    0;
#line 406 "ctrace_comb.c"
static sem_t _hashsem  ;
#line 407 "ctrace_comb.c"
static tunit_t *_unit  =    (tunit_t *)((void *)0);
#line 408 "ctrace_comb.c"
static uint_t _unitmax  =    (uint_t )0;
#line 409
void *trc_start_server(void) ;
#line 410
int trc_stop_server(void) ;
#line 411
extern int malloc() ;
#line 412
int trc_start_client(void) ;
#line 413 "ctrace_comb.c"
int trc_init(cchar_t *file , tenable_t trc , ton_t on , tlevel_t level , uint_t umax ,
             tserver_t server ) 
{ 
  int i ;
  int ret ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;

  {
  {
#line 423
  ret = 0;
  }
#line 424
  if (_initialised) {
#line 425
    return (1);
  }
  {
#line 427
  _trc = trc;
#line 428
  _on = on;
#line 429
  _tlevel = level;
#line 430
  _server = server;
#line 431
  tmp = trc_file(file);
  }
#line 432
  if (tmp) {
#line 433
    return (1);
  }
  {
#line 435
  i = 0;
  }
  {
#line 436
  while (1) {
    while_continue: /* CIL Label */ ;
#line 436
    if (! (i < 307)) {
#line 436
      goto while_break;
    }
    {
#line 437
    _thread[i] = (tthread_t *)((void *)0);
#line 438
    i ++;
    }
  }
  while_break: /* CIL Label */ ;
  }
#line 440
  if (umax > 0U) {
    {
#line 441
    _unitmax = umax;
#line 442
    tmp___0 = malloc(sizeof(tunit_t ) * (unsigned long )_unitmax);
#line 443
    _unit = (tunit_t *)tmp___0;
#line 444
    i = 0;
    }
    {
#line 445
    while (1) {
      while_continue___0: /* CIL Label */ ;
#line 445
      if (! ((uint_t )i < _unitmax)) {
#line 445
        goto while_break___0;
      }
      {
#line 446
      (_unit + i)->on = 0;
#line 447
      (_unit + i)->level = 127U;
#line 448
      i ++;
      }
    }
    while_break___0: /* CIL Label */ ;
    }
  }
  {
#line 451
  tmp___1 = pthread_mutex_init(& _hashmutex, (pthread_mutexattr_t___0 const   *)((void *)0));
  }
#line 452
  if (tmp___1) {
#line 453
    return (1);
  }
  {
#line 455
  sem_init(& _hashsem, 0, 1U);
#line 456
  sem_init(& _startclient, 0, 1U);
  }
#line 457
  if (_server == 1U) {
    {
#line 458
    sem_wait(& _startclient);
#line 459
    tmp___2 = pthread_create((pthread_t * __restrict  )(& _sid), (pthread_attr_t___0 const   * __restrict  )((void *)0),
                             (void *(*)(void * ))(& trc_start_server), (void * __restrict  )((void *)0));
    }
#line 461
    if (tmp___2) {
      {
#line 462
      trc_end();
      }
#line 463
      return (1);
    }
    {
#line 465
    trc_start_client();
    }
  }
  {
#line 467
  _initialised = 1;
  }
#line 468
  return (0);
}
}
#line 471
int trc_stop_client(void) ;
#line 472
extern int free() ;
#line 473 "ctrace_comb.c"
void trc_end(void) 
{ 
  int i ;
  tthread_t *cur ;
  tthread_t *next ;

  {
  {
#line 479
  _trc = 0U;
  }
#line 480
  if (_server) {
    {
#line 481
    trc_stop_server();
#line 482
    pthread_join(_sid, (void **)((void *)0));
#line 483
    trc_stop_client();
    }
  }
  {
#line 485
  i = 0;
  }
  {
#line 486
  while (1) {
    while_continue: /* CIL Label */ ;
#line 486
    if (! (i < 307)) {
#line 486
      goto while_break;
    }
    {
#line 487
    cur = _thread[i];
    }
    {
#line 488
    while (1) {
      while_continue___0: /* CIL Label */ ;
#line 488
      if (! ((unsigned int )cur != (unsigned int )((void *)0))) {
#line 488
        goto while_break___0;
      }
      {
#line 489
      next = cur->next;
#line 490
      free(cur);
#line 491
      cur = next;
      }
    }
    while_break___0: /* CIL Label */ ;
    }
    {
#line 493
    i ++;
    }
  }
  while_break: /* CIL Label */ ;
  }
  {
#line 495
  pthread_mutex_destroy(& _hashmutex);
#line 496
  sem_destroy(& _hashsem);
#line 497
  sem_destroy(& _startclient);
  }
#line 498
  if (! ((unsigned int )_fp == (unsigned int )stdout)) {
#line 499
    if (! ((unsigned int )_fp == (unsigned int )stderr)) {
      {
#line 500
      fclose(_fp);
      }
    }
  }
  {
#line 503
  _initialised = 0;
  }
#line 504
  return;
}
}
#line 507 "ctrace_comb.c"
int trc_file(cchar_t *file ) 
{ 


  {
#line 511
  if (_fp) {
#line 512
    if (! ((unsigned int )_fp == (unsigned int )stdout)) {
#line 513
      if (! ((unsigned int )_fp == (unsigned int )stderr)) {
        {
#line 514
        fclose(_fp);
        }
      }
    }
  }
#line 518
  if (! file) {
    {
#line 519
    _fp = stdout;
    }
  } else {
    {
#line 521
    _fp = fopen((char const   * __restrict  )file, (char const   * __restrict  )"w");
    }
#line 522
    if (! _fp) {
#line 523
      return (1);
    }
  }
#line 526
  return (0);
}
}
#line 529 "ctrace_comb.c"
tthread_t *trc_thread(tid_t id ) 
{ 
  tthread_t *t ;

  {
  {
#line 533
  t = (tthread_t *)((void *)0);
#line 534
  t = _thread[(int )id % 307];
  }
  {
#line 535
  while (1) {
    while_continue: /* CIL Label */ ;
#line 535
    if (! ((unsigned int )t != (unsigned int )((void *)0))) {
#line 535
      goto while_break;
    }
#line 536
    if (t->id == id) {
#line 537
      goto while_break;
    }
    {
#line 539
    t = t->next;
    }
  }
  while_break: /* CIL Label */ ;
  }
#line 541
  return (t);
}
}
#line 544 "ctrace_comb.c"
void trc_print_threads(void) 
{ 
  int i ;
  tthread_t *t ;

  {
  {
#line 549
  t = (tthread_t *)((void *)0);
#line 550
  sem_wait(& _hashsem);
#line 551
  i = 0;
  }
  {
#line 552
  while (1) {
    while_continue: /* CIL Label */ ;
#line 552
    if (! (i < 307)) {
#line 552
      goto while_break;
    }
    {
#line 553
    t = _thread[i];
    }
    {
#line 554
    while (1) {
      while_continue___0: /* CIL Label */ ;
#line 555
      if (_thread[i]) {
#line 556
        if (! ((unsigned int )t != (unsigned int )((void *)0))) {
#line 557
          goto while_break___0;
        }
      } else {
#line 560
        goto while_break___0;
      }
      {
#line 562
      printf((char const   * __restrict  )"t->id: %d\t t->name: %s\t t->level: %d\tt->on: %d\n",
             t->id, t->name, t->level, t->on);
#line 564
      t = t->next;
      }
    }
    while_break___0: /* CIL Label */ ;
    }
    {
#line 566
    i ++;
    }
  }
  while_break: /* CIL Label */ ;
  }
  {
#line 568
  sem_post(& _hashsem);
  }
#line 569
  return;
}
}
#line 572
extern int memset() ;
#line 573 "ctrace_comb.c"
int trc_add_thread(cchar_t *tname , tid_t id ) 
{ 
  uint_t i ;
  tthread_t *t ;
  int tmp ;

  {
  {
#line 579
  t = (tthread_t *)((void *)0);
  }
#line 580
  if (id == 0UL) {
    {
#line 581
    id = pthread_self();
    }
  }
  {
#line 583
  sem_wait(& _hashsem);
#line 584
  t = trc_thread(id);
  }
#line 585
  if (t) {
#line 586
    if (tname) {
      {
#line 587
      sprintf((char * __restrict  )(t->name), (char const   * __restrict  )"%s", tname);
      }
    } else {
      {
#line 589
      sprintf((char * __restrict  )(t->name), (char const   * __restrict  )"%d", id);
      }
    }
  } else {
    {
#line 592
    tmp = malloc(sizeof(tthread_t ));
#line 593
    t = (tthread_t *)tmp;
    }
#line 594
    if (! t) {
      {
#line 595
      sem_post(& _hashsem);
      }
#line 596
      return (1);
    }
    {
#line 598
    i = (unsigned int )((int )id % 307);
#line 599
    t->id = id;
    }
#line 600
    if (tname) {
      {
#line 601
      sprintf((char * __restrict  )(t->name), (char const   * __restrict  )"%s", tname);
      }
    } else {
      {
#line 603
      sprintf((char * __restrict  )(t->name), (char const   * __restrict  )"%d", id);
      }
    }
    {
#line 605
    t->on = (int )_on;
#line 606
    t->level = _tlevel;
#line 607
    memset(t->wspace, ' ', 44);
#line 608
    t->next = _thread[i];
#line 609
    _thread[i] = t;
#line 610
    _numthreads ++;
    }
  }
  {
#line 612
  sem_post(& _hashsem);
  }
#line 613
  return (0);
}
}
#line 616 "ctrace_comb.c"
int trc_remove_thread(tid_t id ) 
{ 
  int i ;
  int ret ;
  tthread_t *cur ;
  tthread_t *next ;

  {
  {
#line 623
  ret = 1;
  }
#line 624
  if (id == 0UL) {
    {
#line 625
    id = pthread_self();
    }
  }
  {
#line 627
  sem_wait(& _hashsem);
#line 628
  i = (int )id % 307;
  }
#line 629
  if (_thread[i]) {
#line 630
    if ((_thread[i])->id == id) {
      {
#line 631
      cur = _thread[i];
#line 632
      _thread[i] = cur->next;
#line 633
      free(cur);
#line 634
      _numthreads --;
#line 635
      ret = 0;
      }
    } else {
#line 637
      goto _L;
    }
  } else {
    _L: 
    {
#line 641
    cur = _thread[i];
    }
    {
#line 642
    while (1) {
      while_continue: /* CIL Label */ ;
#line 642
      if (! ((unsigned int )cur != (unsigned int )((void *)0))) {
#line 642
        goto while_break;
      }
      {
#line 643
      next = cur->next;
      }
#line 644
      if (next) {
#line 645
        if (next->id == id) {
          {
#line 646
          cur->next = next->next;
#line 647
          free(next);
#line 648
          _numthreads --;
#line 649
          ret = 0;
          }
        }
      }
      {
#line 652
      cur = cur->next;
      }
    }
    while_break: /* CIL Label */ ;
    }
  }
  {
#line 655
  sem_post(& _hashsem);
  }
#line 656
  return (ret);
}
}
#line 659 "ctrace_comb.c"
void trc_turn_on(void) 
{ 
  uint_t i ;
  tthread_t *t ;

  {
  {
#line 664
  t = (tthread_t *)((void *)0);
#line 665
  sem_wait(& _hashsem);
#line 666
  _on = 1U;
#line 667
  i = 0U;
  }
  {
#line 668
  while (1) {
    while_continue: /* CIL Label */ ;
#line 668
    if (! (i < 307U)) {
#line 668
      goto while_break;
    }
    {
#line 669
    t = _thread[i];
    }
    {
#line 670
    while (1) {
      while_continue___0: /* CIL Label */ ;
#line 671
      if (_thread[i]) {
#line 672
        if (! ((unsigned int )t != (unsigned int )((void *)0))) {
#line 673
          goto while_break___0;
        }
      } else {
#line 676
        goto while_break___0;
      }
      {
#line 678
      t->on = 1;
#line 679
      t = t->next;
      }
    }
    while_break___0: /* CIL Label */ ;
    }
    {
#line 681
    i ++;
    }
  }
  while_break: /* CIL Label */ ;
  }
  {
#line 683
  sem_post(& _hashsem);
  }
#line 684
  return;
}
}
#line 687 "ctrace_comb.c"
void trc_turn_off(void) 
{ 
  uint_t i ;
  tthread_t *t ;

  {
  {
#line 692
  t = (tthread_t *)((void *)0);
#line 693
  sem_wait(& _hashsem);
#line 694
  _on = 0U;
#line 695
  i = 0U;
  }
  {
#line 696
  while (1) {
    while_continue: /* CIL Label */ ;
#line 696
    if (! (i < 307U)) {
#line 696
      goto while_break;
    }
    {
#line 697
    t = _thread[i];
    }
    {
#line 698
    while (1) {
      while_continue___0: /* CIL Label */ ;
#line 699
      if (_thread[i]) {
#line 700
        if (! ((unsigned int )t != (unsigned int )((void *)0))) {
#line 701
          goto while_break___0;
        }
      } else {
#line 704
        goto while_break___0;
      }
      {
#line 706
      t->on = 0;
#line 707
      t = t->next;
      }
    }
    while_break___0: /* CIL Label */ ;
    }
    {
#line 709
    i ++;
    }
  }
  while_break: /* CIL Label */ ;
  }
  {
#line 711
  sem_post(& _hashsem);
  }
#line 712
  return;
}
}
#line 715 "ctrace_comb.c"
int trc_turn_thread_on(tid_t id ) 
{ 
  int ret ;
  tthread_t *t ;

  {
  {
#line 720
  ret = 1;
#line 721
  t = (tthread_t *)((void *)0);
  }
#line 722
  if (id == 0UL) {
    {
#line 723
    id = pthread_self();
    }
  }
  {
#line 725
  pthread_mutex_lock(& _hashmutex);
#line 726
  __VERIFIER_atomic_begin();
#line 726
  assert(-1LL + (long long )_trc >= 0LL);
#line 726
  assert(-1LL + (long long )_on >= 0LL);
#line 726
  assert((-2LL + (long long )_on) + (long long )_trc >= 0LL);
#line 726
  assert((-1LL + (long long )_trc) + (long long )_unitmax >= 0LL);
#line 726
  assert((-1LL + (long long )_on) + (long long )_server >= 0LL);
#line 726
  assert((-1LL + (long long )_on) + (long long )_sid >= 0LL);
#line 726
  assert((-1LL + (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 726
  assert((-1LL + (long long )_on) + (long long )_unitmax >= 0LL);
#line 726
  assert((-1LL + (long long )_server) + (long long )_trc >= 0LL);
#line 726
  assert((-1LL + (long long )_msgs) + (long long )_trc >= 0LL);
#line 726
  assert((-1LL + (long long )_msgs) + (long long )_on >= 0LL);
#line 726
  assert((-1LL + (long long )_sid) + (long long )_trc >= 0LL);
#line 726
  assert((-1LL + (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 726
  assert((-1LL + (long long )_initialised) + (long long )_trc >= 0LL);
#line 726
  assert((-1LL + (long long )_initialised) + (long long )_on >= 0LL);
#line 726
  assert((-1LL - (long long )_server) + (long long )_trc >= 0LL);
#line 726
  assert((-1LL - (long long )_msgs) + (long long )_trc >= 0LL);
#line 726
  assert((-1LL - (long long )_msgs) + (long long )_on >= 0LL);
#line 726
  assert((-1LL - (long long )_sid) + (long long )_trc >= 0LL);
#line 726
  assert((-1LL - (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 726
  assert((0LL - (long long )_on) + (long long )_trc >= 0LL);
#line 726
  assert((0LL - (long long )_server) + (long long )_sid >= 0LL);
#line 726
  assert((0LL - (long long )_server) + (long long )_unitmax >= 0LL);
#line 726
  assert((0LL - (long long )_msgs) + (long long )_server >= 0LL);
#line 726
  assert((0LL - (long long )_msgs) + (long long )_sid >= 0LL);
#line 726
  assert((0LL - (long long )_msgs) + (long long )_serv_sockfd >= 0LL);
#line 726
  assert((0LL - (long long )_msgs) + (long long )_unitmax >= 0LL);
#line 726
  assert((0LL - (long long )_sid) + (long long )_unitmax >= 0LL);
#line 726
  assert((0LL - (long long )_serv_sockfd) + (long long )_server >= 0LL);
#line 726
  assert((0LL - (long long )_serv_sockfd) + (long long )_sid >= 0LL);
#line 726
  assert((0LL - (long long )_serv_sockfd) + (long long )_unitmax >= 0LL);
#line 726
  assert((0LL - (long long )_initialised) + (long long )_trc >= 0LL);
#line 726
  assert((0LL - (long long )_initialised) + (long long )_on >= 0LL);
#line 726
  assert((1LL - (long long )_trc) + (long long )_unitmax >= 0LL);
#line 726
  assert((1LL - (long long )_on) + (long long )_server >= 0LL);
#line 726
  assert((1LL - (long long )_on) + (long long )_sid >= 0LL);
#line 726
  assert((1LL - (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 726
  assert((1LL - (long long )_on) + (long long )_unitmax >= 0LL);
#line 726
  assert((1LL - (long long )_initialised) + (long long )_server >= 0LL);
#line 726
  assert((1LL - (long long )_initialised) + (long long )_msgs >= 0LL);
#line 726
  assert((1LL - (long long )_initialised) + (long long )_sid >= 0LL);
#line 726
  assert((1LL - (long long )_initialised) + (long long )_serv_sockfd >= 0LL);
#line 726
  assert((1LL - (long long )_initialised) + (long long )_unitmax >= 0LL);
#line 726
  assert((long long )_server + (long long )_sid >= 0LL);
#line 726
  assert((long long )_server + (long long )_unitmax >= 0LL);
#line 726
  assert((long long )_msgs + (long long )_server >= 0LL);
#line 726
  assert((long long )_msgs + (long long )_sid >= 0LL);
#line 726
  assert((long long )_msgs + (long long )_serv_sockfd >= 0LL);
#line 726
  assert((long long )_msgs + (long long )_unitmax >= 0LL);
#line 726
  assert((long long )_sid + (long long )_unitmax >= 0LL);
#line 726
  assert((long long )_serv_sockfd + (long long )_server >= 0LL);
#line 726
  assert((long long )_serv_sockfd + (long long )_sid >= 0LL);
#line 726
  assert((long long )_serv_sockfd + (long long )_unitmax >= 0LL);
#line 726
  assert((long long )_initialised + (long long )_server >= 0LL);
#line 726
  assert((long long )_initialised + (long long )_msgs >= 0LL);
#line 726
  assert((long long )_initialised + (long long )_sid >= 0LL);
#line 726
  assert((long long )_initialised + (long long )_serv_sockfd >= 0LL);
#line 726
  assert((long long )_initialised + (long long )_unitmax >= 0LL);
#line 726
  assert(0LL - (long long )_server >= 0LL);
#line 726
  assert(0LL - (long long )_msgs >= 0LL);
#line 726
  assert(0LL - (long long )_sid >= 0LL);
#line 726
  assert(0LL - (long long )_serv_sockfd >= 0LL);
#line 726
  assert(0LL - (long long )_unitmax >= 0LL);
#line 726
  assert(1LL - (long long )_trc >= 0LL);
#line 726
  assert(1LL - (long long )_on >= 0LL);
#line 726
  assert(1LL - (long long )_initialised >= 0LL);
#line 726
  assert((-1LL + (long long )_trc) - (long long )_unitmax >= 0LL);
#line 726
  assert((-1LL + (long long )_on) - (long long )_server >= 0LL);
#line 726
  assert((-1LL + (long long )_on) - (long long )_sid >= 0LL);
#line 726
  assert((-1LL + (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 726
  assert((-1LL + (long long )_on) - (long long )_unitmax >= 0LL);
#line 726
  assert((1LL + (long long )_server) - (long long )_trc >= 0LL);
#line 726
  assert((1LL + (long long )_msgs) - (long long )_trc >= 0LL);
#line 726
  assert((1LL + (long long )_msgs) - (long long )_on >= 0LL);
#line 726
  assert((1LL + (long long )_sid) - (long long )_trc >= 0LL);
#line 726
  assert((1LL + (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 726
  assert((1LL + (long long )_initialised) - (long long )_trc >= 0LL);
#line 726
  assert((1LL + (long long )_initialised) - (long long )_on >= 0LL);
#line 726
  assert((0LL - (long long )_server) - (long long )_sid >= 0LL);
#line 726
  assert((0LL - (long long )_server) - (long long )_unitmax >= 0LL);
#line 726
  assert((0LL - (long long )_msgs) - (long long )_server >= 0LL);
#line 726
  assert((0LL - (long long )_msgs) - (long long )_sid >= 0LL);
#line 726
  assert((0LL - (long long )_msgs) - (long long )_serv_sockfd >= 0LL);
#line 726
  assert((0LL - (long long )_msgs) - (long long )_unitmax >= 0LL);
#line 726
  assert((0LL - (long long )_sid) - (long long )_unitmax >= 0LL);
#line 726
  assert((0LL - (long long )_serv_sockfd) - (long long )_server >= 0LL);
#line 726
  assert((0LL - (long long )_serv_sockfd) - (long long )_sid >= 0LL);
#line 726
  assert((0LL - (long long )_serv_sockfd) - (long long )_unitmax >= 0LL);
#line 726
  assert((1LL - (long long )_trc) - (long long )_unitmax >= 0LL);
#line 726
  assert((1LL - (long long )_on) - (long long )_server >= 0LL);
#line 726
  assert((1LL - (long long )_on) - (long long )_sid >= 0LL);
#line 726
  assert((1LL - (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 726
  assert((1LL - (long long )_on) - (long long )_unitmax >= 0LL);
#line 726
  assert((1LL - (long long )_server) - (long long )_trc >= 0LL);
#line 726
  assert((1LL - (long long )_msgs) - (long long )_trc >= 0LL);
#line 726
  assert((1LL - (long long )_msgs) - (long long )_on >= 0LL);
#line 726
  assert((1LL - (long long )_sid) - (long long )_trc >= 0LL);
#line 726
  assert((1LL - (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 726
  assert((1LL - (long long )_initialised) - (long long )_server >= 0LL);
#line 726
  assert((1LL - (long long )_initialised) - (long long )_msgs >= 0LL);
#line 726
  assert((1LL - (long long )_initialised) - (long long )_sid >= 0LL);
#line 726
  assert((1LL - (long long )_initialised) - (long long )_serv_sockfd >= 0LL);
#line 726
  assert((1LL - (long long )_initialised) - (long long )_unitmax >= 0LL);
#line 726
  assert((2LL - (long long )_on) - (long long )_trc >= 0LL);
#line 726
  assert((2LL - (long long )_initialised) - (long long )_trc >= 0LL);
#line 726
  assert((2LL - (long long )_initialised) - (long long )_on >= 0LL);
#line 726
  assert((long long )_on - (long long )_trc >= 0LL);
#line 726
  assert((long long )_server - (long long )_sid >= 0LL);
#line 726
  assert((long long )_server - (long long )_unitmax >= 0LL);
#line 726
  assert((long long )_msgs - (long long )_server >= 0LL);
#line 726
  assert((long long )_msgs - (long long )_sid >= 0LL);
#line 726
  assert((long long )_msgs - (long long )_serv_sockfd >= 0LL);
#line 726
  assert((long long )_msgs - (long long )_unitmax >= 0LL);
#line 726
  assert((long long )_sid - (long long )_unitmax >= 0LL);
#line 726
  assert((long long )_serv_sockfd - (long long )_server >= 0LL);
#line 726
  assert((long long )_serv_sockfd - (long long )_sid >= 0LL);
#line 726
  assert((long long )_serv_sockfd - (long long )_unitmax >= 0LL);
#line 726
  assert((long long )_initialised - (long long )_server >= 0LL);
#line 726
  assert((long long )_initialised - (long long )_msgs >= 0LL);
#line 726
  assert((long long )_initialised - (long long )_sid >= 0LL);
#line 726
  assert((long long )_initialised - (long long )_serv_sockfd >= 0LL);
#line 726
  assert((long long )_initialised - (long long )_unitmax >= 0LL);
#line 726
  assert((long long )_server >= 0LL);
#line 726
  assert((long long )_msgs >= 0LL);
#line 726
  assert((long long )_sid >= 0LL);
#line 726
  assert((long long )_serv_sockfd >= 0LL);
#line 726
  assert((long long )_initialised >= 0LL);
#line 726
  assert((long long )_unitmax >= 0LL);
#line 726
  __VERIFIER_atomic_end();
  }
#line 726
  if (! _hashreads) {
    {
#line 727
    sem_wait(& _hashsem);
    }
  }
  {
#line 729
  _hashreads ++;
#line 730
  pthread_mutex_unlock(& _hashmutex);
#line 731
  t = trc_thread(id);
  }
#line 732
  if (t) {
    {
#line 733
    t->on = 1;
#line 734
    ret = 0;
    }
  }
  {
#line 736
  pthread_mutex_lock(& _hashmutex);
#line 737
  __VERIFIER_atomic_begin();
#line 737
  assert(-1LL + (long long )_trc >= 0LL);
#line 737
  assert(-1LL + (long long )_on >= 0LL);
#line 737
  assert((-2LL + (long long )_on) + (long long )_trc >= 0LL);
#line 737
  assert((-1LL + (long long )_trc) + (long long )_unitmax >= 0LL);
#line 737
  assert((-1LL + (long long )_on) + (long long )_server >= 0LL);
#line 737
  assert((-1LL + (long long )_on) + (long long )_sid >= 0LL);
#line 737
  assert((-1LL + (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 737
  assert((-1LL + (long long )_on) + (long long )_unitmax >= 0LL);
#line 737
  assert((-1LL + (long long )_server) + (long long )_trc >= 0LL);
#line 737
  assert((-1LL + (long long )_msgs) + (long long )_trc >= 0LL);
#line 737
  assert((-1LL + (long long )_msgs) + (long long )_on >= 0LL);
#line 737
  assert((-1LL + (long long )_sid) + (long long )_trc >= 0LL);
#line 737
  assert((-1LL + (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 737
  assert((-1LL + (long long )_initialised) + (long long )_trc >= 0LL);
#line 737
  assert((-1LL + (long long )_initialised) + (long long )_on >= 0LL);
#line 737
  assert((-1LL - (long long )_server) + (long long )_trc >= 0LL);
#line 737
  assert((-1LL - (long long )_msgs) + (long long )_trc >= 0LL);
#line 737
  assert((-1LL - (long long )_msgs) + (long long )_on >= 0LL);
#line 737
  assert((-1LL - (long long )_sid) + (long long )_trc >= 0LL);
#line 737
  assert((-1LL - (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 737
  assert((0LL - (long long )_on) + (long long )_trc >= 0LL);
#line 737
  assert((0LL - (long long )_server) + (long long )_sid >= 0LL);
#line 737
  assert((0LL - (long long )_server) + (long long )_unitmax >= 0LL);
#line 737
  assert((0LL - (long long )_msgs) + (long long )_server >= 0LL);
#line 737
  assert((0LL - (long long )_msgs) + (long long )_sid >= 0LL);
#line 737
  assert((0LL - (long long )_msgs) + (long long )_serv_sockfd >= 0LL);
#line 737
  assert((0LL - (long long )_msgs) + (long long )_unitmax >= 0LL);
#line 737
  assert((0LL - (long long )_sid) + (long long )_unitmax >= 0LL);
#line 737
  assert((0LL - (long long )_serv_sockfd) + (long long )_server >= 0LL);
#line 737
  assert((0LL - (long long )_serv_sockfd) + (long long )_sid >= 0LL);
#line 737
  assert((0LL - (long long )_serv_sockfd) + (long long )_unitmax >= 0LL);
#line 737
  assert((0LL - (long long )_initialised) + (long long )_trc >= 0LL);
#line 737
  assert((0LL - (long long )_initialised) + (long long )_on >= 0LL);
#line 737
  assert((1LL - (long long )_trc) + (long long )_unitmax >= 0LL);
#line 737
  assert((1LL - (long long )_on) + (long long )_server >= 0LL);
#line 737
  assert((1LL - (long long )_on) + (long long )_sid >= 0LL);
#line 737
  assert((1LL - (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 737
  assert((1LL - (long long )_on) + (long long )_unitmax >= 0LL);
#line 737
  assert((1LL - (long long )_initialised) + (long long )_server >= 0LL);
#line 737
  assert((1LL - (long long )_initialised) + (long long )_msgs >= 0LL);
#line 737
  assert((1LL - (long long )_initialised) + (long long )_sid >= 0LL);
#line 737
  assert((1LL - (long long )_initialised) + (long long )_serv_sockfd >= 0LL);
#line 737
  assert((1LL - (long long )_initialised) + (long long )_unitmax >= 0LL);
#line 737
  assert((long long )_server + (long long )_sid >= 0LL);
#line 737
  assert((long long )_server + (long long )_unitmax >= 0LL);
#line 737
  assert((long long )_msgs + (long long )_server >= 0LL);
#line 737
  assert((long long )_msgs + (long long )_sid >= 0LL);
#line 737
  assert((long long )_msgs + (long long )_serv_sockfd >= 0LL);
#line 737
  assert((long long )_msgs + (long long )_unitmax >= 0LL);
#line 737
  assert((long long )_sid + (long long )_unitmax >= 0LL);
#line 737
  assert((long long )_serv_sockfd + (long long )_server >= 0LL);
#line 737
  assert((long long )_serv_sockfd + (long long )_sid >= 0LL);
#line 737
  assert((long long )_serv_sockfd + (long long )_unitmax >= 0LL);
#line 737
  assert((long long )_initialised + (long long )_server >= 0LL);
#line 737
  assert((long long )_initialised + (long long )_msgs >= 0LL);
#line 737
  assert((long long )_initialised + (long long )_sid >= 0LL);
#line 737
  assert((long long )_initialised + (long long )_serv_sockfd >= 0LL);
#line 737
  assert((long long )_initialised + (long long )_unitmax >= 0LL);
#line 737
  assert(0LL - (long long )_server >= 0LL);
#line 737
  assert(0LL - (long long )_msgs >= 0LL);
#line 737
  assert(0LL - (long long )_sid >= 0LL);
#line 737
  assert(0LL - (long long )_serv_sockfd >= 0LL);
#line 737
  assert(0LL - (long long )_unitmax >= 0LL);
#line 737
  assert(1LL - (long long )_trc >= 0LL);
#line 737
  assert(1LL - (long long )_on >= 0LL);
#line 737
  assert(1LL - (long long )_initialised >= 0LL);
#line 737
  assert((-1LL + (long long )_trc) - (long long )_unitmax >= 0LL);
#line 737
  assert((-1LL + (long long )_on) - (long long )_server >= 0LL);
#line 737
  assert((-1LL + (long long )_on) - (long long )_sid >= 0LL);
#line 737
  assert((-1LL + (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 737
  assert((-1LL + (long long )_on) - (long long )_unitmax >= 0LL);
#line 737
  assert((1LL + (long long )_server) - (long long )_trc >= 0LL);
#line 737
  assert((1LL + (long long )_msgs) - (long long )_trc >= 0LL);
#line 737
  assert((1LL + (long long )_msgs) - (long long )_on >= 0LL);
#line 737
  assert((1LL + (long long )_sid) - (long long )_trc >= 0LL);
#line 737
  assert((1LL + (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 737
  assert((1LL + (long long )_initialised) - (long long )_trc >= 0LL);
#line 737
  assert((1LL + (long long )_initialised) - (long long )_on >= 0LL);
#line 737
  assert((0LL - (long long )_server) - (long long )_sid >= 0LL);
#line 737
  assert((0LL - (long long )_server) - (long long )_unitmax >= 0LL);
#line 737
  assert((0LL - (long long )_msgs) - (long long )_server >= 0LL);
#line 737
  assert((0LL - (long long )_msgs) - (long long )_sid >= 0LL);
#line 737
  assert((0LL - (long long )_msgs) - (long long )_serv_sockfd >= 0LL);
#line 737
  assert((0LL - (long long )_msgs) - (long long )_unitmax >= 0LL);
#line 737
  assert((0LL - (long long )_sid) - (long long )_unitmax >= 0LL);
#line 737
  assert((0LL - (long long )_serv_sockfd) - (long long )_server >= 0LL);
#line 737
  assert((0LL - (long long )_serv_sockfd) - (long long )_sid >= 0LL);
#line 737
  assert((0LL - (long long )_serv_sockfd) - (long long )_unitmax >= 0LL);
#line 737
  assert((1LL - (long long )_trc) - (long long )_unitmax >= 0LL);
#line 737
  assert((1LL - (long long )_on) - (long long )_server >= 0LL);
#line 737
  assert((1LL - (long long )_on) - (long long )_sid >= 0LL);
#line 737
  assert((1LL - (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 737
  assert((1LL - (long long )_on) - (long long )_unitmax >= 0LL);
#line 737
  assert((1LL - (long long )_server) - (long long )_trc >= 0LL);
#line 737
  assert((1LL - (long long )_msgs) - (long long )_trc >= 0LL);
#line 737
  assert((1LL - (long long )_msgs) - (long long )_on >= 0LL);
#line 737
  assert((1LL - (long long )_sid) - (long long )_trc >= 0LL);
#line 737
  assert((1LL - (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 737
  assert((1LL - (long long )_initialised) - (long long )_server >= 0LL);
#line 737
  assert((1LL - (long long )_initialised) - (long long )_msgs >= 0LL);
#line 737
  assert((1LL - (long long )_initialised) - (long long )_sid >= 0LL);
#line 737
  assert((1LL - (long long )_initialised) - (long long )_serv_sockfd >= 0LL);
#line 737
  assert((1LL - (long long )_initialised) - (long long )_unitmax >= 0LL);
#line 737
  assert((2LL - (long long )_on) - (long long )_trc >= 0LL);
#line 737
  assert((2LL - (long long )_initialised) - (long long )_trc >= 0LL);
#line 737
  assert((2LL - (long long )_initialised) - (long long )_on >= 0LL);
#line 737
  assert((long long )_on - (long long )_trc >= 0LL);
#line 737
  assert((long long )_server - (long long )_sid >= 0LL);
#line 737
  assert((long long )_server - (long long )_unitmax >= 0LL);
#line 737
  assert((long long )_msgs - (long long )_server >= 0LL);
#line 737
  assert((long long )_msgs - (long long )_sid >= 0LL);
#line 737
  assert((long long )_msgs - (long long )_serv_sockfd >= 0LL);
#line 737
  assert((long long )_msgs - (long long )_unitmax >= 0LL);
#line 737
  assert((long long )_sid - (long long )_unitmax >= 0LL);
#line 737
  assert((long long )_serv_sockfd - (long long )_server >= 0LL);
#line 737
  assert((long long )_serv_sockfd - (long long )_sid >= 0LL);
#line 737
  assert((long long )_serv_sockfd - (long long )_unitmax >= 0LL);
#line 737
  assert((long long )_initialised - (long long )_server >= 0LL);
#line 737
  assert((long long )_initialised - (long long )_msgs >= 0LL);
#line 737
  assert((long long )_initialised - (long long )_sid >= 0LL);
#line 737
  assert((long long )_initialised - (long long )_serv_sockfd >= 0LL);
#line 737
  assert((long long )_initialised - (long long )_unitmax >= 0LL);
#line 737
  assert((long long )_server >= 0LL);
#line 737
  assert((long long )_msgs >= 0LL);
#line 737
  assert((long long )_sid >= 0LL);
#line 737
  assert((long long )_serv_sockfd >= 0LL);
#line 737
  assert((long long )_initialised >= 0LL);
#line 737
  assert((long long )_unitmax >= 0LL);
#line 737
  __VERIFIER_atomic_end();
#line 737
  _hashreads --;
  }
#line 738
  if (! _hashreads) {
    {
#line 739
    sem_post(& _hashsem);
    }
  }
  {
#line 741
  pthread_mutex_unlock(& _hashmutex);
  }
#line 742
  return (ret);
}
}
#line 745 "ctrace_comb.c"
int trc_turn_thread_off(tid_t id ) 
{ 
  int ret ;
  tthread_t *t ;

  {
  {
#line 750
  ret = 1;
#line 751
  t = (tthread_t *)((void *)0);
  }
#line 752
  if (id == 0UL) {
    {
#line 753
    id = pthread_self();
    }
  }
  {
#line 755
  pthread_mutex_lock(& _hashmutex);
  }
#line 756
  if (! _hashreads) {
    {
#line 757
    sem_wait(& _hashsem);
    }
  }
  {
#line 759
  _hashreads ++;
#line 760
  pthread_mutex_unlock(& _hashmutex);
#line 761
  t = trc_thread(id);
  }
#line 762
  if (t) {
    {
#line 763
    t->on = 0;
#line 764
    ret = 0;
    }
  }
  {
#line 766
  pthread_mutex_lock(& _hashmutex);
#line 767
  _hashreads --;
  }
#line 768
  if (! _hashreads) {
    {
#line 769
    sem_post(& _hashsem);
    }
  }
  {
#line 771
  pthread_mutex_unlock(& _hashmutex);
  }
#line 772
  return (ret);
}
}
#line 775 "ctrace_comb.c"
int trc_turn_unit_on(uint_t i ) 
{ 
  int ret ;

  {
  {
#line 779
  ret = 1;
  }
#line 780
  if (_unitmax == 0U) {
#line 781
    return (ret);
  } else
#line 783
  if (i < 0U) {
#line 784
    return (ret);
  } else
#line 786
  if (i >= _unitmax) {
#line 787
    return (ret);
  }
  {
#line 791
  sem_wait(& _hashsem);
  }
#line 792
  if (i < 1000U) {
    {
#line 793
    (_unit + i)->on = 1;
#line 794
    ret = 0;
    }
  }
  {
#line 796
  sem_post(& _hashsem);
  }
#line 797
  return (ret);
}
}
#line 800 "ctrace_comb.c"
int trc_turn_unit_off(uint_t i ) 
{ 
  int ret ;

  {
  {
#line 804
  ret = 1;
  }
#line 805
  if (_unitmax == 0U) {
#line 806
    return (ret);
  } else
#line 808
  if (i < 0U) {
#line 809
    return (ret);
  } else
#line 811
  if (i >= _unitmax) {
#line 812
    return (ret);
  }
  {
#line 816
  sem_wait(& _hashsem);
  }
#line 817
  if (i < 1000U) {
    {
#line 818
    (_unit + i)->on = 0;
#line 819
    ret = 0;
    }
  }
  {
#line 821
  sem_post(& _hashsem);
  }
#line 822
  return (ret);
}
}
#line 825 "ctrace_comb.c"
int trc_valid_level(tlevel_t tlevel ) 
{ 


  {
#line 829
  return ((tlevel & 4294967168U) == 0U);
}
}
#line 832 "ctrace_comb.c"
int trc_set_level(tlevel_t level ) 
{ 
  uint_t i ;
  tthread_t *t ;
  int tmp ;

  {
  {
#line 838
  t = (tthread_t *)((void *)0);
#line 839
  tmp = trc_valid_level(level);
  }
#line 840
  if (! tmp) {
#line 841
    return (1);
  }
  {
#line 843
  sem_wait(& _hashsem);
#line 844
  _tlevel = level;
#line 845
  i = 0U;
  }
  {
#line 846
  while (1) {
    while_continue: /* CIL Label */ ;
#line 846
    if (! (i < 307U)) {
#line 846
      goto while_break;
    }
    {
#line 847
    t = _thread[i];
    }
    {
#line 848
    while (1) {
      while_continue___0: /* CIL Label */ ;
#line 849
      if (_thread[i]) {
#line 850
        if (! ((unsigned int )t != (unsigned int )((void *)0))) {
#line 851
          goto while_break___0;
        }
      } else {
#line 854
        goto while_break___0;
      }
      {
#line 856
      t->level = level;
#line 857
      t = t->next;
      }
    }
    while_break___0: /* CIL Label */ ;
    }
    {
#line 859
    i ++;
    }
  }
  while_break: /* CIL Label */ ;
  }
  {
#line 861
  sem_post(& _hashsem);
  }
#line 862
  return (0);
}
}
#line 865 "ctrace_comb.c"
int trc_add_level(tlevel_t level ) 
{ 
  uint_t i ;
  tthread_t *t ;
  int tmp ;

  {
  {
#line 871
  t = (tthread_t *)((void *)0);
#line 872
  tmp = trc_valid_level(level);
  }
#line 873
  if (! tmp) {
#line 874
    return (1);
  }
  {
#line 876
  sem_wait(& _hashsem);
#line 877
  _tlevel |= level;
#line 878
  i = 0U;
  }
  {
#line 879
  while (1) {
    while_continue: /* CIL Label */ ;
#line 879
    if (! (i < 307U)) {
#line 879
      goto while_break;
    }
    {
#line 880
    t = _thread[i];
    }
    {
#line 881
    while (1) {
      while_continue___0: /* CIL Label */ ;
#line 882
      if (_thread[i]) {
#line 883
        if (! ((unsigned int )t != (unsigned int )((void *)0))) {
#line 884
          goto while_break___0;
        }
      } else {
#line 887
        goto while_break___0;
      }
      {
#line 889
      t->level |= level;
#line 890
      t = t->next;
      }
    }
    while_break___0: /* CIL Label */ ;
    }
    {
#line 892
    i ++;
    }
  }
  while_break: /* CIL Label */ ;
  }
  {
#line 894
  sem_post(& _hashsem);
  }
#line 895
  return (0);
}
}
#line 898 "ctrace_comb.c"
int trc_remove_level(tlevel_t level ) 
{ 
  uint_t i ;
  tthread_t *t ;
  int tmp ;

  {
  {
#line 904
  t = (tthread_t *)((void *)0);
#line 905
  tmp = trc_valid_level(level);
  }
#line 906
  if (! tmp) {
#line 907
    return (1);
  }
  {
#line 909
  sem_wait(& _hashsem);
#line 910
  _tlevel &= ~ level;
#line 911
  i = 0U;
  }
  {
#line 912
  while (1) {
    while_continue: /* CIL Label */ ;
#line 912
    if (! (i < 307U)) {
#line 912
      goto while_break;
    }
    {
#line 913
    t = _thread[i];
    }
    {
#line 914
    while (1) {
      while_continue___0: /* CIL Label */ ;
#line 915
      if (_thread[i]) {
#line 916
        if (! ((unsigned int )t != (unsigned int )((void *)0))) {
#line 917
          goto while_break___0;
        }
      } else {
#line 920
        goto while_break___0;
      }
      {
#line 922
      t->level &= ~ level;
#line 923
      t = t->next;
      }
    }
    while_break___0: /* CIL Label */ ;
    }
    {
#line 925
    i ++;
    }
  }
  while_break: /* CIL Label */ ;
  }
  {
#line 927
  sem_post(& _hashsem);
  }
#line 928
  return (0);
}
}
#line 931 "ctrace_comb.c"
int trc_set_thread_level(tlevel_t level , tid_t id ) 
{ 
  int ret ;
  tthread_t *t ;
  int tmp ;

  {
  {
#line 937
  ret = 1;
#line 938
  t = (tthread_t *)((void *)0);
  }
#line 939
  if (id == 0UL) {
    {
#line 940
    id = pthread_self();
    }
  }
  {
#line 942
  sem_wait(& _hashsem);
#line 943
  t = trc_thread(id);
  }
#line 944
  if (t) {
    {
#line 945
    tmp = trc_valid_level(level);
    }
#line 946
    if (tmp) {
      {
#line 947
      t->level = level;
#line 948
      ret = 0;
      }
    }
  }
  {
#line 951
  sem_post(& _hashsem);
  }
#line 952
  return (ret);
}
}
#line 955 "ctrace_comb.c"
int trc_add_thread_level(tlevel_t level , tid_t id ) 
{ 
  int ret ;
  tthread_t *t ;
  int tmp ;

  {
  {
#line 961
  ret = 1;
#line 962
  t = (tthread_t *)((void *)0);
  }
#line 963
  if (id == 0UL) {
    {
#line 964
    id = pthread_self();
    }
  }
  {
#line 966
  sem_wait(& _hashsem);
#line 967
  t = trc_thread(id);
  }
#line 968
  if (t) {
    {
#line 969
    tmp = trc_valid_level(level);
    }
#line 970
    if (tmp) {
      {
#line 971
      t->level |= level;
#line 972
      ret = 0;
      }
    }
  }
  {
#line 975
  sem_post(& _hashsem);
  }
#line 976
  return (ret);
}
}
#line 979 "ctrace_comb.c"
int trc_remove_thread_level(tlevel_t level , tid_t id ) 
{ 
  int ret ;
  tthread_t *t ;
  int tmp ;

  {
  {
#line 985
  ret = 1;
#line 986
  t = (tthread_t *)((void *)0);
  }
#line 987
  if (id == 0UL) {
    {
#line 988
    id = pthread_self();
    }
  }
  {
#line 990
  sem_wait(& _hashsem);
#line 991
  t = trc_thread(id);
  }
#line 992
  if (t) {
    {
#line 993
    tmp = trc_valid_level(level);
    }
#line 994
    if (tmp) {
      {
#line 995
      t->level &= ~ level;
#line 996
      ret = 0;
      }
    }
  }
  {
#line 999
  sem_post(& _hashsem);
  }
#line 1000
  return (ret);
}
}
#line 1003 "ctrace_comb.c"
int trc_set_unit_level(uint_t i , tlevel_t level ) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 1008
  ret = 1;
  }
#line 1009
  if (_unitmax == 0U) {
#line 1010
    return (ret);
  } else
#line 1012
  if (i < 0U) {
#line 1013
    return (ret);
  } else
#line 1015
  if (i >= _unitmax) {
#line 1016
    return (ret);
  }
  {
#line 1020
  sem_wait(& _hashsem);
  }
#line 1021
  if (i < 1000U) {
    {
#line 1022
    tmp = trc_valid_level(level);
    }
#line 1023
    if (tmp) {
      {
#line 1024
      (_unit + i)->level = level;
#line 1025
      ret = 0;
      }
    }
  }
  {
#line 1028
  sem_post(& _hashsem);
  }
#line 1029
  return (ret);
}
}
#line 1032 "ctrace_comb.c"
int trc_add_unit_level(uint_t i , tlevel_t level ) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 1037
  ret = 1;
  }
#line 1038
  if (_unitmax == 0U) {
#line 1039
    return (ret);
  } else
#line 1041
  if (i < 0U) {
#line 1042
    return (ret);
  } else
#line 1044
  if (i >= _unitmax) {
#line 1045
    return (ret);
  }
  {
#line 1049
  sem_wait(& _hashsem);
  }
#line 1050
  if (i < 1000U) {
    {
#line 1051
    tmp = trc_valid_level(level);
    }
#line 1052
    if (tmp) {
      {
#line 1053
      (_unit + i)->level |= level;
#line 1054
      ret = 0;
      }
    }
  }
  {
#line 1057
  sem_post(& _hashsem);
  }
#line 1058
  return (ret);
}
}
#line 1061 "ctrace_comb.c"
int trc_remove_unit_level(uint_t i , tlevel_t level ) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 1066
  ret = 1;
  }
#line 1067
  if (_unitmax == 0U) {
#line 1068
    return (ret);
  } else
#line 1070
  if (i < 0U) {
#line 1071
    return (ret);
  } else
#line 1073
  if (i >= _unitmax) {
#line 1074
    return (ret);
  }
  {
#line 1078
  sem_wait(& _hashsem);
  }
#line 1079
  if (i < 1000U) {
    {
#line 1080
    tmp = trc_valid_level(level);
    }
#line 1081
    if (tmp) {
      {
#line 1082
      (_unit + i)->level &= ~ level;
#line 1083
      ret = 0;
      }
    }
  }
  {
#line 1086
  sem_post(& _hashsem);
  }
#line 1087
  return (ret);
}
}
#line 1090 "ctrace_comb.c"
void trc_state(void) 
{ 


  {
  {
#line 1094
  printf((char const   * __restrict  )"_trc: %d\t_level: %d\t_t: %d\t", _trc, _tlevel,
         _server);
  }
#line 1096
  if ((unsigned int )_fp == (unsigned int )stdout) {
    {
#line 1097
    printf((char const   * __restrict  )"_fp: _STDOUT");
    }
  } else
#line 1099
  if (_fp) {
    {
#line 1100
    printf((char const   * __restrict  )"_fp: user file");
    }
  } else {
    {
#line 1102
    printf((char const   * __restrict  )"_fp: NULL");
    }
  }
  {
#line 1105
  printf((char const   * __restrict  )"\n");
  }
#line 1106
  return;
}
}
#line 1109 "ctrace_comb.c"
char *trc_varargs(char const   *fmt  , ...) 
{ 
  va_list args ;
  tthread_t *t ;
  pthread_t tmp ;
  char *tmp___0 ;

  {
  {
#line 1116
  t = (tthread_t *)((void *)0);
#line 1117
  pthread_mutex_lock(& _hashmutex);
#line 1118
  __VERIFIER_atomic_begin();
#line 1118
  assert(-1LL + (long long )_trc >= 0LL);
#line 1118
  assert(-1LL + (long long )_on >= 0LL);
#line 1118
  assert((-2LL + (long long )_on) + (long long )_trc >= 0LL);
#line 1118
  assert((-1LL + (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1118
  assert((-1LL + (long long )_on) + (long long )_server >= 0LL);
#line 1118
  assert((-1LL + (long long )_on) + (long long )_sid >= 0LL);
#line 1118
  assert((-1LL + (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((-1LL + (long long )_on) + (long long )_unitmax >= 0LL);
#line 1118
  assert((-1LL + (long long )_server) + (long long )_trc >= 0LL);
#line 1118
  assert((-1LL + (long long )_msgs) + (long long )_trc >= 0LL);
#line 1118
  assert((-1LL + (long long )_msgs) + (long long )_on >= 0LL);
#line 1118
  assert((-1LL + (long long )_sid) + (long long )_trc >= 0LL);
#line 1118
  assert((-1LL + (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1118
  assert((-1LL + (long long )_initialised) + (long long )_trc >= 0LL);
#line 1118
  assert((-1LL + (long long )_initialised) + (long long )_on >= 0LL);
#line 1118
  assert((-1LL - (long long )_server) + (long long )_trc >= 0LL);
#line 1118
  assert((-1LL - (long long )_msgs) + (long long )_trc >= 0LL);
#line 1118
  assert((-1LL - (long long )_msgs) + (long long )_on >= 0LL);
#line 1118
  assert((-1LL - (long long )_sid) + (long long )_trc >= 0LL);
#line 1118
  assert((-1LL - (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1118
  assert((0LL - (long long )_on) + (long long )_trc >= 0LL);
#line 1118
  assert((0LL - (long long )_server) + (long long )_sid >= 0LL);
#line 1118
  assert((0LL - (long long )_server) + (long long )_unitmax >= 0LL);
#line 1118
  assert((0LL - (long long )_msgs) + (long long )_server >= 0LL);
#line 1118
  assert((0LL - (long long )_msgs) + (long long )_sid >= 0LL);
#line 1118
  assert((0LL - (long long )_msgs) + (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((0LL - (long long )_msgs) + (long long )_unitmax >= 0LL);
#line 1118
  assert((0LL - (long long )_sid) + (long long )_unitmax >= 0LL);
#line 1118
  assert((0LL - (long long )_serv_sockfd) + (long long )_server >= 0LL);
#line 1118
  assert((0LL - (long long )_serv_sockfd) + (long long )_sid >= 0LL);
#line 1118
  assert((0LL - (long long )_serv_sockfd) + (long long )_unitmax >= 0LL);
#line 1118
  assert((0LL - (long long )_initialised) + (long long )_trc >= 0LL);
#line 1118
  assert((0LL - (long long )_initialised) + (long long )_on >= 0LL);
#line 1118
  assert((1LL - (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1118
  assert((1LL - (long long )_on) + (long long )_server >= 0LL);
#line 1118
  assert((1LL - (long long )_on) + (long long )_sid >= 0LL);
#line 1118
  assert((1LL - (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((1LL - (long long )_on) + (long long )_unitmax >= 0LL);
#line 1118
  assert((1LL - (long long )_initialised) + (long long )_server >= 0LL);
#line 1118
  assert((1LL - (long long )_initialised) + (long long )_msgs >= 0LL);
#line 1118
  assert((1LL - (long long )_initialised) + (long long )_sid >= 0LL);
#line 1118
  assert((1LL - (long long )_initialised) + (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((1LL - (long long )_initialised) + (long long )_unitmax >= 0LL);
#line 1118
  assert((long long )_server + (long long )_sid >= 0LL);
#line 1118
  assert((long long )_server + (long long )_unitmax >= 0LL);
#line 1118
  assert((long long )_msgs + (long long )_server >= 0LL);
#line 1118
  assert((long long )_msgs + (long long )_sid >= 0LL);
#line 1118
  assert((long long )_msgs + (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((long long )_msgs + (long long )_unitmax >= 0LL);
#line 1118
  assert((long long )_sid + (long long )_unitmax >= 0LL);
#line 1118
  assert((long long )_serv_sockfd + (long long )_server >= 0LL);
#line 1118
  assert((long long )_serv_sockfd + (long long )_sid >= 0LL);
#line 1118
  assert((long long )_serv_sockfd + (long long )_unitmax >= 0LL);
#line 1118
  assert((long long )_initialised + (long long )_server >= 0LL);
#line 1118
  assert((long long )_initialised + (long long )_msgs >= 0LL);
#line 1118
  assert((long long )_initialised + (long long )_sid >= 0LL);
#line 1118
  assert((long long )_initialised + (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((long long )_initialised + (long long )_unitmax >= 0LL);
#line 1118
  assert(0LL - (long long )_server >= 0LL);
#line 1118
  assert(0LL - (long long )_msgs >= 0LL);
#line 1118
  assert(0LL - (long long )_sid >= 0LL);
#line 1118
  assert(0LL - (long long )_serv_sockfd >= 0LL);
#line 1118
  assert(0LL - (long long )_unitmax >= 0LL);
#line 1118
  assert(1LL - (long long )_trc >= 0LL);
#line 1118
  assert(1LL - (long long )_on >= 0LL);
#line 1118
  assert(1LL - (long long )_initialised >= 0LL);
#line 1118
  assert((-1LL + (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1118
  assert((-1LL + (long long )_on) - (long long )_server >= 0LL);
#line 1118
  assert((-1LL + (long long )_on) - (long long )_sid >= 0LL);
#line 1118
  assert((-1LL + (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((-1LL + (long long )_on) - (long long )_unitmax >= 0LL);
#line 1118
  assert((1LL + (long long )_server) - (long long )_trc >= 0LL);
#line 1118
  assert((1LL + (long long )_msgs) - (long long )_trc >= 0LL);
#line 1118
  assert((1LL + (long long )_msgs) - (long long )_on >= 0LL);
#line 1118
  assert((1LL + (long long )_sid) - (long long )_trc >= 0LL);
#line 1118
  assert((1LL + (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1118
  assert((1LL + (long long )_initialised) - (long long )_trc >= 0LL);
#line 1118
  assert((1LL + (long long )_initialised) - (long long )_on >= 0LL);
#line 1118
  assert((0LL - (long long )_server) - (long long )_sid >= 0LL);
#line 1118
  assert((0LL - (long long )_server) - (long long )_unitmax >= 0LL);
#line 1118
  assert((0LL - (long long )_msgs) - (long long )_server >= 0LL);
#line 1118
  assert((0LL - (long long )_msgs) - (long long )_sid >= 0LL);
#line 1118
  assert((0LL - (long long )_msgs) - (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((0LL - (long long )_msgs) - (long long )_unitmax >= 0LL);
#line 1118
  assert((0LL - (long long )_sid) - (long long )_unitmax >= 0LL);
#line 1118
  assert((0LL - (long long )_serv_sockfd) - (long long )_server >= 0LL);
#line 1118
  assert((0LL - (long long )_serv_sockfd) - (long long )_sid >= 0LL);
#line 1118
  assert((0LL - (long long )_serv_sockfd) - (long long )_unitmax >= 0LL);
#line 1118
  assert((1LL - (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1118
  assert((1LL - (long long )_on) - (long long )_server >= 0LL);
#line 1118
  assert((1LL - (long long )_on) - (long long )_sid >= 0LL);
#line 1118
  assert((1LL - (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((1LL - (long long )_on) - (long long )_unitmax >= 0LL);
#line 1118
  assert((1LL - (long long )_server) - (long long )_trc >= 0LL);
#line 1118
  assert((1LL - (long long )_msgs) - (long long )_trc >= 0LL);
#line 1118
  assert((1LL - (long long )_msgs) - (long long )_on >= 0LL);
#line 1118
  assert((1LL - (long long )_sid) - (long long )_trc >= 0LL);
#line 1118
  assert((1LL - (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1118
  assert((1LL - (long long )_initialised) - (long long )_server >= 0LL);
#line 1118
  assert((1LL - (long long )_initialised) - (long long )_msgs >= 0LL);
#line 1118
  assert((1LL - (long long )_initialised) - (long long )_sid >= 0LL);
#line 1118
  assert((1LL - (long long )_initialised) - (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((1LL - (long long )_initialised) - (long long )_unitmax >= 0LL);
#line 1118
  assert((2LL - (long long )_on) - (long long )_trc >= 0LL);
#line 1118
  assert((2LL - (long long )_initialised) - (long long )_trc >= 0LL);
#line 1118
  assert((2LL - (long long )_initialised) - (long long )_on >= 0LL);
#line 1118
  assert((long long )_on - (long long )_trc >= 0LL);
#line 1118
  assert((long long )_server - (long long )_sid >= 0LL);
#line 1118
  assert((long long )_server - (long long )_unitmax >= 0LL);
#line 1118
  assert((long long )_msgs - (long long )_server >= 0LL);
#line 1118
  assert((long long )_msgs - (long long )_sid >= 0LL);
#line 1118
  assert((long long )_msgs - (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((long long )_msgs - (long long )_unitmax >= 0LL);
#line 1118
  assert((long long )_sid - (long long )_unitmax >= 0LL);
#line 1118
  assert((long long )_serv_sockfd - (long long )_server >= 0LL);
#line 1118
  assert((long long )_serv_sockfd - (long long )_sid >= 0LL);
#line 1118
  assert((long long )_serv_sockfd - (long long )_unitmax >= 0LL);
#line 1118
  assert((long long )_initialised - (long long )_server >= 0LL);
#line 1118
  assert((long long )_initialised - (long long )_msgs >= 0LL);
#line 1118
  assert((long long )_initialised - (long long )_sid >= 0LL);
#line 1118
  assert((long long )_initialised - (long long )_serv_sockfd >= 0LL);
#line 1118
  assert((long long )_initialised - (long long )_unitmax >= 0LL);
#line 1118
  assert((long long )_server >= 0LL);
#line 1118
  assert((long long )_msgs >= 0LL);
#line 1118
  assert((long long )_sid >= 0LL);
#line 1118
  assert((long long )_serv_sockfd >= 0LL);
#line 1118
  assert((long long )_initialised >= 0LL);
#line 1118
  assert((long long )_unitmax >= 0LL);
#line 1118
  __VERIFIER_atomic_end();
  }
#line 1118
  if (! _hashreads) {
    {
#line 1119
    sem_wait(& _hashsem);
    }
  }
  {
#line 1121
  _hashreads ++;
#line 1122
  pthread_mutex_unlock(& _hashmutex);
#line 1123
  tmp = pthread_self();
#line 1124
  t = trc_thread(tmp);
  }
#line 1125
  if (t) {
#line 1126
    if (fmt) {
      {
#line 1127
      __builtin_va_start(args, fmt);
#line 1128
      vsprintf((char * __restrict  )(t->fmt), (char const   * __restrict  )fmt, args);
#line 1129
      __builtin_va_end(args);
      }
    } else {
      {
#line 1131
      t->fmt[0] = (char )((void *)0);
      }
    }
  }
  {
#line 1134
  pthread_mutex_lock(& _hashmutex);
#line 1135
  __VERIFIER_atomic_begin();
#line 1135
  assert(-1LL + (long long )_trc >= 0LL);
#line 1135
  assert(-1LL + (long long )_on >= 0LL);
#line 1135
  assert((-2LL + (long long )_on) + (long long )_trc >= 0LL);
#line 1135
  assert((-1LL + (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1135
  assert((-1LL + (long long )_on) + (long long )_server >= 0LL);
#line 1135
  assert((-1LL + (long long )_on) + (long long )_sid >= 0LL);
#line 1135
  assert((-1LL + (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((-1LL + (long long )_on) + (long long )_unitmax >= 0LL);
#line 1135
  assert((-1LL + (long long )_server) + (long long )_trc >= 0LL);
#line 1135
  assert((-1LL + (long long )_msgs) + (long long )_trc >= 0LL);
#line 1135
  assert((-1LL + (long long )_msgs) + (long long )_on >= 0LL);
#line 1135
  assert((-1LL + (long long )_sid) + (long long )_trc >= 0LL);
#line 1135
  assert((-1LL + (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1135
  assert((-1LL + (long long )_initialised) + (long long )_trc >= 0LL);
#line 1135
  assert((-1LL + (long long )_initialised) + (long long )_on >= 0LL);
#line 1135
  assert((-1LL - (long long )_server) + (long long )_trc >= 0LL);
#line 1135
  assert((-1LL - (long long )_msgs) + (long long )_trc >= 0LL);
#line 1135
  assert((-1LL - (long long )_msgs) + (long long )_on >= 0LL);
#line 1135
  assert((-1LL - (long long )_sid) + (long long )_trc >= 0LL);
#line 1135
  assert((-1LL - (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1135
  assert((0LL - (long long )_on) + (long long )_trc >= 0LL);
#line 1135
  assert((0LL - (long long )_server) + (long long )_sid >= 0LL);
#line 1135
  assert((0LL - (long long )_server) + (long long )_unitmax >= 0LL);
#line 1135
  assert((0LL - (long long )_msgs) + (long long )_server >= 0LL);
#line 1135
  assert((0LL - (long long )_msgs) + (long long )_sid >= 0LL);
#line 1135
  assert((0LL - (long long )_msgs) + (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((0LL - (long long )_msgs) + (long long )_unitmax >= 0LL);
#line 1135
  assert((0LL - (long long )_sid) + (long long )_unitmax >= 0LL);
#line 1135
  assert((0LL - (long long )_serv_sockfd) + (long long )_server >= 0LL);
#line 1135
  assert((0LL - (long long )_serv_sockfd) + (long long )_sid >= 0LL);
#line 1135
  assert((0LL - (long long )_serv_sockfd) + (long long )_unitmax >= 0LL);
#line 1135
  assert((0LL - (long long )_initialised) + (long long )_trc >= 0LL);
#line 1135
  assert((0LL - (long long )_initialised) + (long long )_on >= 0LL);
#line 1135
  assert((1LL - (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1135
  assert((1LL - (long long )_on) + (long long )_server >= 0LL);
#line 1135
  assert((1LL - (long long )_on) + (long long )_sid >= 0LL);
#line 1135
  assert((1LL - (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((1LL - (long long )_on) + (long long )_unitmax >= 0LL);
#line 1135
  assert((1LL - (long long )_initialised) + (long long )_server >= 0LL);
#line 1135
  assert((1LL - (long long )_initialised) + (long long )_msgs >= 0LL);
#line 1135
  assert((1LL - (long long )_initialised) + (long long )_sid >= 0LL);
#line 1135
  assert((1LL - (long long )_initialised) + (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((1LL - (long long )_initialised) + (long long )_unitmax >= 0LL);
#line 1135
  assert((long long )_server + (long long )_sid >= 0LL);
#line 1135
  assert((long long )_server + (long long )_unitmax >= 0LL);
#line 1135
  assert((long long )_msgs + (long long )_server >= 0LL);
#line 1135
  assert((long long )_msgs + (long long )_sid >= 0LL);
#line 1135
  assert((long long )_msgs + (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((long long )_msgs + (long long )_unitmax >= 0LL);
#line 1135
  assert((long long )_sid + (long long )_unitmax >= 0LL);
#line 1135
  assert((long long )_serv_sockfd + (long long )_server >= 0LL);
#line 1135
  assert((long long )_serv_sockfd + (long long )_sid >= 0LL);
#line 1135
  assert((long long )_serv_sockfd + (long long )_unitmax >= 0LL);
#line 1135
  assert((long long )_initialised + (long long )_server >= 0LL);
#line 1135
  assert((long long )_initialised + (long long )_msgs >= 0LL);
#line 1135
  assert((long long )_initialised + (long long )_sid >= 0LL);
#line 1135
  assert((long long )_initialised + (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((long long )_initialised + (long long )_unitmax >= 0LL);
#line 1135
  assert(0LL - (long long )_server >= 0LL);
#line 1135
  assert(0LL - (long long )_msgs >= 0LL);
#line 1135
  assert(0LL - (long long )_sid >= 0LL);
#line 1135
  assert(0LL - (long long )_serv_sockfd >= 0LL);
#line 1135
  assert(0LL - (long long )_unitmax >= 0LL);
#line 1135
  assert(1LL - (long long )_trc >= 0LL);
#line 1135
  assert(1LL - (long long )_on >= 0LL);
#line 1135
  assert(1LL - (long long )_initialised >= 0LL);
#line 1135
  assert((-1LL + (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1135
  assert((-1LL + (long long )_on) - (long long )_server >= 0LL);
#line 1135
  assert((-1LL + (long long )_on) - (long long )_sid >= 0LL);
#line 1135
  assert((-1LL + (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((-1LL + (long long )_on) - (long long )_unitmax >= 0LL);
#line 1135
  assert((1LL + (long long )_server) - (long long )_trc >= 0LL);
#line 1135
  assert((1LL + (long long )_msgs) - (long long )_trc >= 0LL);
#line 1135
  assert((1LL + (long long )_msgs) - (long long )_on >= 0LL);
#line 1135
  assert((1LL + (long long )_sid) - (long long )_trc >= 0LL);
#line 1135
  assert((1LL + (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1135
  assert((1LL + (long long )_initialised) - (long long )_trc >= 0LL);
#line 1135
  assert((1LL + (long long )_initialised) - (long long )_on >= 0LL);
#line 1135
  assert((0LL - (long long )_server) - (long long )_sid >= 0LL);
#line 1135
  assert((0LL - (long long )_server) - (long long )_unitmax >= 0LL);
#line 1135
  assert((0LL - (long long )_msgs) - (long long )_server >= 0LL);
#line 1135
  assert((0LL - (long long )_msgs) - (long long )_sid >= 0LL);
#line 1135
  assert((0LL - (long long )_msgs) - (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((0LL - (long long )_msgs) - (long long )_unitmax >= 0LL);
#line 1135
  assert((0LL - (long long )_sid) - (long long )_unitmax >= 0LL);
#line 1135
  assert((0LL - (long long )_serv_sockfd) - (long long )_server >= 0LL);
#line 1135
  assert((0LL - (long long )_serv_sockfd) - (long long )_sid >= 0LL);
#line 1135
  assert((0LL - (long long )_serv_sockfd) - (long long )_unitmax >= 0LL);
#line 1135
  assert((1LL - (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1135
  assert((1LL - (long long )_on) - (long long )_server >= 0LL);
#line 1135
  assert((1LL - (long long )_on) - (long long )_sid >= 0LL);
#line 1135
  assert((1LL - (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((1LL - (long long )_on) - (long long )_unitmax >= 0LL);
#line 1135
  assert((1LL - (long long )_server) - (long long )_trc >= 0LL);
#line 1135
  assert((1LL - (long long )_msgs) - (long long )_trc >= 0LL);
#line 1135
  assert((1LL - (long long )_msgs) - (long long )_on >= 0LL);
#line 1135
  assert((1LL - (long long )_sid) - (long long )_trc >= 0LL);
#line 1135
  assert((1LL - (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1135
  assert((1LL - (long long )_initialised) - (long long )_server >= 0LL);
#line 1135
  assert((1LL - (long long )_initialised) - (long long )_msgs >= 0LL);
#line 1135
  assert((1LL - (long long )_initialised) - (long long )_sid >= 0LL);
#line 1135
  assert((1LL - (long long )_initialised) - (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((1LL - (long long )_initialised) - (long long )_unitmax >= 0LL);
#line 1135
  assert((2LL - (long long )_on) - (long long )_trc >= 0LL);
#line 1135
  assert((2LL - (long long )_initialised) - (long long )_trc >= 0LL);
#line 1135
  assert((2LL - (long long )_initialised) - (long long )_on >= 0LL);
#line 1135
  assert((long long )_on - (long long )_trc >= 0LL);
#line 1135
  assert((long long )_server - (long long )_sid >= 0LL);
#line 1135
  assert((long long )_server - (long long )_unitmax >= 0LL);
#line 1135
  assert((long long )_msgs - (long long )_server >= 0LL);
#line 1135
  assert((long long )_msgs - (long long )_sid >= 0LL);
#line 1135
  assert((long long )_msgs - (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((long long )_msgs - (long long )_unitmax >= 0LL);
#line 1135
  assert((long long )_sid - (long long )_unitmax >= 0LL);
#line 1135
  assert((long long )_serv_sockfd - (long long )_server >= 0LL);
#line 1135
  assert((long long )_serv_sockfd - (long long )_sid >= 0LL);
#line 1135
  assert((long long )_serv_sockfd - (long long )_unitmax >= 0LL);
#line 1135
  assert((long long )_initialised - (long long )_server >= 0LL);
#line 1135
  assert((long long )_initialised - (long long )_msgs >= 0LL);
#line 1135
  assert((long long )_initialised - (long long )_sid >= 0LL);
#line 1135
  assert((long long )_initialised - (long long )_serv_sockfd >= 0LL);
#line 1135
  assert((long long )_initialised - (long long )_unitmax >= 0LL);
#line 1135
  assert((long long )_server >= 0LL);
#line 1135
  assert((long long )_msgs >= 0LL);
#line 1135
  assert((long long )_sid >= 0LL);
#line 1135
  assert((long long )_serv_sockfd >= 0LL);
#line 1135
  assert((long long )_initialised >= 0LL);
#line 1135
  assert((long long )_unitmax >= 0LL);
#line 1135
  __VERIFIER_atomic_end();
#line 1135
  _hashreads --;
  }
#line 1136
  if (! _hashreads) {
    {
#line 1137
    sem_post(& _hashsem);
    }
  }
  {
#line 1139
  pthread_mutex_unlock(& _hashmutex);
  }
#line 1140
  if (t) {
    {
#line 1141
    tmp___0 = t->fmt;
    }
  } else {
    {
#line 1143
    tmp___0 = (char *)((void *)0);
    }
  }
#line 1145
  return (tmp___0);
}
}
#line 1148
extern int write() ;
#line 1149 "ctrace_comb.c"
void trc_trace(taction_t a , uint_t i , tlevel_t level , cchar_t *file , uint_t line ,
               cchar_t *fn , cchar_t *kword , cchar_t *s ) 
{ 
  int n ;
  tthread_t *t ;
  int num ;
  int bytesWritten ;
  int unit ;
  int thread ;
  time_t tim ;
  struct tm *timeptr ;
  char buf[64] ;
  pthread_t tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
  {
#line 1165
  pthread_mutex_lock(& _hashmutex);
#line 1166
  __VERIFIER_atomic_begin();
#line 1166
  assert(-1LL + (long long )_trc >= 0LL);
#line 1166
  assert(-1LL + (long long )_on >= 0LL);
#line 1166
  assert((-2LL + (long long )_on) + (long long )_trc >= 0LL);
#line 1166
  assert((-1LL + (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1166
  assert((-1LL + (long long )_on) + (long long )_server >= 0LL);
#line 1166
  assert((-1LL + (long long )_on) + (long long )_sid >= 0LL);
#line 1166
  assert((-1LL + (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((-1LL + (long long )_on) + (long long )_unitmax >= 0LL);
#line 1166
  assert((-1LL + (long long )_server) + (long long )_trc >= 0LL);
#line 1166
  assert((-1LL + (long long )_msgs) + (long long )_trc >= 0LL);
#line 1166
  assert((-1LL + (long long )_msgs) + (long long )_on >= 0LL);
#line 1166
  assert((-1LL + (long long )_sid) + (long long )_trc >= 0LL);
#line 1166
  assert((-1LL + (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1166
  assert((-1LL + (long long )_initialised) + (long long )_trc >= 0LL);
#line 1166
  assert((-1LL + (long long )_initialised) + (long long )_on >= 0LL);
#line 1166
  assert((-1LL - (long long )_server) + (long long )_trc >= 0LL);
#line 1166
  assert((-1LL - (long long )_msgs) + (long long )_trc >= 0LL);
#line 1166
  assert((-1LL - (long long )_msgs) + (long long )_on >= 0LL);
#line 1166
  assert((-1LL - (long long )_sid) + (long long )_trc >= 0LL);
#line 1166
  assert((-1LL - (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1166
  assert((0LL - (long long )_on) + (long long )_trc >= 0LL);
#line 1166
  assert((0LL - (long long )_server) + (long long )_sid >= 0LL);
#line 1166
  assert((0LL - (long long )_server) + (long long )_unitmax >= 0LL);
#line 1166
  assert((0LL - (long long )_msgs) + (long long )_server >= 0LL);
#line 1166
  assert((0LL - (long long )_msgs) + (long long )_sid >= 0LL);
#line 1166
  assert((0LL - (long long )_msgs) + (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((0LL - (long long )_msgs) + (long long )_unitmax >= 0LL);
#line 1166
  assert((0LL - (long long )_sid) + (long long )_unitmax >= 0LL);
#line 1166
  assert((0LL - (long long )_serv_sockfd) + (long long )_server >= 0LL);
#line 1166
  assert((0LL - (long long )_serv_sockfd) + (long long )_sid >= 0LL);
#line 1166
  assert((0LL - (long long )_serv_sockfd) + (long long )_unitmax >= 0LL);
#line 1166
  assert((0LL - (long long )_initialised) + (long long )_trc >= 0LL);
#line 1166
  assert((0LL - (long long )_initialised) + (long long )_on >= 0LL);
#line 1166
  assert((1LL - (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1166
  assert((1LL - (long long )_on) + (long long )_server >= 0LL);
#line 1166
  assert((1LL - (long long )_on) + (long long )_sid >= 0LL);
#line 1166
  assert((1LL - (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((1LL - (long long )_on) + (long long )_unitmax >= 0LL);
#line 1166
  assert((1LL - (long long )_initialised) + (long long )_server >= 0LL);
#line 1166
  assert((1LL - (long long )_initialised) + (long long )_msgs >= 0LL);
#line 1166
  assert((1LL - (long long )_initialised) + (long long )_sid >= 0LL);
#line 1166
  assert((1LL - (long long )_initialised) + (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((1LL - (long long )_initialised) + (long long )_unitmax >= 0LL);
#line 1166
  assert((long long )_server + (long long )_sid >= 0LL);
#line 1166
  assert((long long )_server + (long long )_unitmax >= 0LL);
#line 1166
  assert((long long )_msgs + (long long )_server >= 0LL);
#line 1166
  assert((long long )_msgs + (long long )_sid >= 0LL);
#line 1166
  assert((long long )_msgs + (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((long long )_msgs + (long long )_unitmax >= 0LL);
#line 1166
  assert((long long )_sid + (long long )_unitmax >= 0LL);
#line 1166
  assert((long long )_serv_sockfd + (long long )_server >= 0LL);
#line 1166
  assert((long long )_serv_sockfd + (long long )_sid >= 0LL);
#line 1166
  assert((long long )_serv_sockfd + (long long )_unitmax >= 0LL);
#line 1166
  assert((long long )_initialised + (long long )_server >= 0LL);
#line 1166
  assert((long long )_initialised + (long long )_msgs >= 0LL);
#line 1166
  assert((long long )_initialised + (long long )_sid >= 0LL);
#line 1166
  assert((long long )_initialised + (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((long long )_initialised + (long long )_unitmax >= 0LL);
#line 1166
  assert(0LL - (long long )_server >= 0LL);
#line 1166
  assert(0LL - (long long )_msgs >= 0LL);
#line 1166
  assert(0LL - (long long )_sid >= 0LL);
#line 1166
  assert(0LL - (long long )_serv_sockfd >= 0LL);
#line 1166
  assert(0LL - (long long )_unitmax >= 0LL);
#line 1166
  assert(1LL - (long long )_trc >= 0LL);
#line 1166
  assert(1LL - (long long )_on >= 0LL);
#line 1166
  assert(1LL - (long long )_initialised >= 0LL);
#line 1166
  assert((-1LL + (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1166
  assert((-1LL + (long long )_on) - (long long )_server >= 0LL);
#line 1166
  assert((-1LL + (long long )_on) - (long long )_sid >= 0LL);
#line 1166
  assert((-1LL + (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((-1LL + (long long )_on) - (long long )_unitmax >= 0LL);
#line 1166
  assert((1LL + (long long )_server) - (long long )_trc >= 0LL);
#line 1166
  assert((1LL + (long long )_msgs) - (long long )_trc >= 0LL);
#line 1166
  assert((1LL + (long long )_msgs) - (long long )_on >= 0LL);
#line 1166
  assert((1LL + (long long )_sid) - (long long )_trc >= 0LL);
#line 1166
  assert((1LL + (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1166
  assert((1LL + (long long )_initialised) - (long long )_trc >= 0LL);
#line 1166
  assert((1LL + (long long )_initialised) - (long long )_on >= 0LL);
#line 1166
  assert((0LL - (long long )_server) - (long long )_sid >= 0LL);
#line 1166
  assert((0LL - (long long )_server) - (long long )_unitmax >= 0LL);
#line 1166
  assert((0LL - (long long )_msgs) - (long long )_server >= 0LL);
#line 1166
  assert((0LL - (long long )_msgs) - (long long )_sid >= 0LL);
#line 1166
  assert((0LL - (long long )_msgs) - (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((0LL - (long long )_msgs) - (long long )_unitmax >= 0LL);
#line 1166
  assert((0LL - (long long )_sid) - (long long )_unitmax >= 0LL);
#line 1166
  assert((0LL - (long long )_serv_sockfd) - (long long )_server >= 0LL);
#line 1166
  assert((0LL - (long long )_serv_sockfd) - (long long )_sid >= 0LL);
#line 1166
  assert((0LL - (long long )_serv_sockfd) - (long long )_unitmax >= 0LL);
#line 1166
  assert((1LL - (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1166
  assert((1LL - (long long )_on) - (long long )_server >= 0LL);
#line 1166
  assert((1LL - (long long )_on) - (long long )_sid >= 0LL);
#line 1166
  assert((1LL - (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((1LL - (long long )_on) - (long long )_unitmax >= 0LL);
#line 1166
  assert((1LL - (long long )_server) - (long long )_trc >= 0LL);
#line 1166
  assert((1LL - (long long )_msgs) - (long long )_trc >= 0LL);
#line 1166
  assert((1LL - (long long )_msgs) - (long long )_on >= 0LL);
#line 1166
  assert((1LL - (long long )_sid) - (long long )_trc >= 0LL);
#line 1166
  assert((1LL - (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1166
  assert((1LL - (long long )_initialised) - (long long )_server >= 0LL);
#line 1166
  assert((1LL - (long long )_initialised) - (long long )_msgs >= 0LL);
#line 1166
  assert((1LL - (long long )_initialised) - (long long )_sid >= 0LL);
#line 1166
  assert((1LL - (long long )_initialised) - (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((1LL - (long long )_initialised) - (long long )_unitmax >= 0LL);
#line 1166
  assert((2LL - (long long )_on) - (long long )_trc >= 0LL);
#line 1166
  assert((2LL - (long long )_initialised) - (long long )_trc >= 0LL);
#line 1166
  assert((2LL - (long long )_initialised) - (long long )_on >= 0LL);
#line 1166
  assert((long long )_on - (long long )_trc >= 0LL);
#line 1166
  assert((long long )_server - (long long )_sid >= 0LL);
#line 1166
  assert((long long )_server - (long long )_unitmax >= 0LL);
#line 1166
  assert((long long )_msgs - (long long )_server >= 0LL);
#line 1166
  assert((long long )_msgs - (long long )_sid >= 0LL);
#line 1166
  assert((long long )_msgs - (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((long long )_msgs - (long long )_unitmax >= 0LL);
#line 1166
  assert((long long )_sid - (long long )_unitmax >= 0LL);
#line 1166
  assert((long long )_serv_sockfd - (long long )_server >= 0LL);
#line 1166
  assert((long long )_serv_sockfd - (long long )_sid >= 0LL);
#line 1166
  assert((long long )_serv_sockfd - (long long )_unitmax >= 0LL);
#line 1166
  assert((long long )_initialised - (long long )_server >= 0LL);
#line 1166
  assert((long long )_initialised - (long long )_msgs >= 0LL);
#line 1166
  assert((long long )_initialised - (long long )_sid >= 0LL);
#line 1166
  assert((long long )_initialised - (long long )_serv_sockfd >= 0LL);
#line 1166
  assert((long long )_initialised - (long long )_unitmax >= 0LL);
#line 1166
  assert((long long )_server >= 0LL);
#line 1166
  assert((long long )_msgs >= 0LL);
#line 1166
  assert((long long )_sid >= 0LL);
#line 1166
  assert((long long )_serv_sockfd >= 0LL);
#line 1166
  assert((long long )_initialised >= 0LL);
#line 1166
  assert((long long )_unitmax >= 0LL);
#line 1166
  __VERIFIER_atomic_end();
  }
#line 1166
  if (! _hashreads) {
    {
#line 1167
    sem_wait(& _hashsem);
    }
  }
  {
#line 1169
  _hashreads ++;
#line 1170
  pthread_mutex_unlock(& _hashmutex);
  }
#line 1171
  if (! _fp) {
#line 1172
    goto _L;
  } else {
    {
#line 1174
    tmp = pthread_self();
#line 1175
    t = trc_thread(tmp);
    }
#line 1176
    if (! t) {
      _L: 
      {
#line 1178
      pthread_mutex_lock(& _hashmutex);
#line 1179
      __VERIFIER_atomic_begin();
#line 1179
      assert(-1LL + (long long )_trc >= 0LL);
#line 1179
      assert(-1LL + (long long )_on >= 0LL);
#line 1179
      assert((-2LL + (long long )_on) + (long long )_trc >= 0LL);
#line 1179
      assert((-1LL + (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1179
      assert((-1LL + (long long )_on) + (long long )_server >= 0LL);
#line 1179
      assert((-1LL + (long long )_on) + (long long )_sid >= 0LL);
#line 1179
      assert((-1LL + (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((-1LL + (long long )_on) + (long long )_unitmax >= 0LL);
#line 1179
      assert((-1LL + (long long )_server) + (long long )_trc >= 0LL);
#line 1179
      assert((-1LL + (long long )_msgs) + (long long )_trc >= 0LL);
#line 1179
      assert((-1LL + (long long )_msgs) + (long long )_on >= 0LL);
#line 1179
      assert((-1LL + (long long )_sid) + (long long )_trc >= 0LL);
#line 1179
      assert((-1LL + (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1179
      assert((-1LL + (long long )_initialised) + (long long )_trc >= 0LL);
#line 1179
      assert((-1LL + (long long )_initialised) + (long long )_on >= 0LL);
#line 1179
      assert((-1LL - (long long )_server) + (long long )_trc >= 0LL);
#line 1179
      assert((-1LL - (long long )_msgs) + (long long )_trc >= 0LL);
#line 1179
      assert((-1LL - (long long )_msgs) + (long long )_on >= 0LL);
#line 1179
      assert((-1LL - (long long )_sid) + (long long )_trc >= 0LL);
#line 1179
      assert((-1LL - (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1179
      assert((0LL - (long long )_on) + (long long )_trc >= 0LL);
#line 1179
      assert((0LL - (long long )_server) + (long long )_sid >= 0LL);
#line 1179
      assert((0LL - (long long )_server) + (long long )_unitmax >= 0LL);
#line 1179
      assert((0LL - (long long )_msgs) + (long long )_server >= 0LL);
#line 1179
      assert((0LL - (long long )_msgs) + (long long )_sid >= 0LL);
#line 1179
      assert((0LL - (long long )_msgs) + (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((0LL - (long long )_msgs) + (long long )_unitmax >= 0LL);
#line 1179
      assert((0LL - (long long )_sid) + (long long )_unitmax >= 0LL);
#line 1179
      assert((0LL - (long long )_serv_sockfd) + (long long )_server >= 0LL);
#line 1179
      assert((0LL - (long long )_serv_sockfd) + (long long )_sid >= 0LL);
#line 1179
      assert((0LL - (long long )_serv_sockfd) + (long long )_unitmax >= 0LL);
#line 1179
      assert((0LL - (long long )_initialised) + (long long )_trc >= 0LL);
#line 1179
      assert((0LL - (long long )_initialised) + (long long )_on >= 0LL);
#line 1179
      assert((1LL - (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1179
      assert((1LL - (long long )_on) + (long long )_server >= 0LL);
#line 1179
      assert((1LL - (long long )_on) + (long long )_sid >= 0LL);
#line 1179
      assert((1LL - (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((1LL - (long long )_on) + (long long )_unitmax >= 0LL);
#line 1179
      assert((1LL - (long long )_initialised) + (long long )_server >= 0LL);
#line 1179
      assert((1LL - (long long )_initialised) + (long long )_msgs >= 0LL);
#line 1179
      assert((1LL - (long long )_initialised) + (long long )_sid >= 0LL);
#line 1179
      assert((1LL - (long long )_initialised) + (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((1LL - (long long )_initialised) + (long long )_unitmax >= 0LL);
#line 1179
      assert((long long )_server + (long long )_sid >= 0LL);
#line 1179
      assert((long long )_server + (long long )_unitmax >= 0LL);
#line 1179
      assert((long long )_msgs + (long long )_server >= 0LL);
#line 1179
      assert((long long )_msgs + (long long )_sid >= 0LL);
#line 1179
      assert((long long )_msgs + (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((long long )_msgs + (long long )_unitmax >= 0LL);
#line 1179
      assert((long long )_sid + (long long )_unitmax >= 0LL);
#line 1179
      assert((long long )_serv_sockfd + (long long )_server >= 0LL);
#line 1179
      assert((long long )_serv_sockfd + (long long )_sid >= 0LL);
#line 1179
      assert((long long )_serv_sockfd + (long long )_unitmax >= 0LL);
#line 1179
      assert((long long )_initialised + (long long )_server >= 0LL);
#line 1179
      assert((long long )_initialised + (long long )_msgs >= 0LL);
#line 1179
      assert((long long )_initialised + (long long )_sid >= 0LL);
#line 1179
      assert((long long )_initialised + (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((long long )_initialised + (long long )_unitmax >= 0LL);
#line 1179
      assert(0LL - (long long )_server >= 0LL);
#line 1179
      assert(0LL - (long long )_msgs >= 0LL);
#line 1179
      assert(0LL - (long long )_sid >= 0LL);
#line 1179
      assert(0LL - (long long )_serv_sockfd >= 0LL);
#line 1179
      assert(0LL - (long long )_unitmax >= 0LL);
#line 1179
      assert(1LL - (long long )_trc >= 0LL);
#line 1179
      assert(1LL - (long long )_on >= 0LL);
#line 1179
      assert(1LL - (long long )_initialised >= 0LL);
#line 1179
      assert((-1LL + (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1179
      assert((-1LL + (long long )_on) - (long long )_server >= 0LL);
#line 1179
      assert((-1LL + (long long )_on) - (long long )_sid >= 0LL);
#line 1179
      assert((-1LL + (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((-1LL + (long long )_on) - (long long )_unitmax >= 0LL);
#line 1179
      assert((1LL + (long long )_server) - (long long )_trc >= 0LL);
#line 1179
      assert((1LL + (long long )_msgs) - (long long )_trc >= 0LL);
#line 1179
      assert((1LL + (long long )_msgs) - (long long )_on >= 0LL);
#line 1179
      assert((1LL + (long long )_sid) - (long long )_trc >= 0LL);
#line 1179
      assert((1LL + (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1179
      assert((1LL + (long long )_initialised) - (long long )_trc >= 0LL);
#line 1179
      assert((1LL + (long long )_initialised) - (long long )_on >= 0LL);
#line 1179
      assert((0LL - (long long )_server) - (long long )_sid >= 0LL);
#line 1179
      assert((0LL - (long long )_server) - (long long )_unitmax >= 0LL);
#line 1179
      assert((0LL - (long long )_msgs) - (long long )_server >= 0LL);
#line 1179
      assert((0LL - (long long )_msgs) - (long long )_sid >= 0LL);
#line 1179
      assert((0LL - (long long )_msgs) - (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((0LL - (long long )_msgs) - (long long )_unitmax >= 0LL);
#line 1179
      assert((0LL - (long long )_sid) - (long long )_unitmax >= 0LL);
#line 1179
      assert((0LL - (long long )_serv_sockfd) - (long long )_server >= 0LL);
#line 1179
      assert((0LL - (long long )_serv_sockfd) - (long long )_sid >= 0LL);
#line 1179
      assert((0LL - (long long )_serv_sockfd) - (long long )_unitmax >= 0LL);
#line 1179
      assert((1LL - (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1179
      assert((1LL - (long long )_on) - (long long )_server >= 0LL);
#line 1179
      assert((1LL - (long long )_on) - (long long )_sid >= 0LL);
#line 1179
      assert((1LL - (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((1LL - (long long )_on) - (long long )_unitmax >= 0LL);
#line 1179
      assert((1LL - (long long )_server) - (long long )_trc >= 0LL);
#line 1179
      assert((1LL - (long long )_msgs) - (long long )_trc >= 0LL);
#line 1179
      assert((1LL - (long long )_msgs) - (long long )_on >= 0LL);
#line 1179
      assert((1LL - (long long )_sid) - (long long )_trc >= 0LL);
#line 1179
      assert((1LL - (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1179
      assert((1LL - (long long )_initialised) - (long long )_server >= 0LL);
#line 1179
      assert((1LL - (long long )_initialised) - (long long )_msgs >= 0LL);
#line 1179
      assert((1LL - (long long )_initialised) - (long long )_sid >= 0LL);
#line 1179
      assert((1LL - (long long )_initialised) - (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((1LL - (long long )_initialised) - (long long )_unitmax >= 0LL);
#line 1179
      assert((2LL - (long long )_on) - (long long )_trc >= 0LL);
#line 1179
      assert((2LL - (long long )_initialised) - (long long )_trc >= 0LL);
#line 1179
      assert((2LL - (long long )_initialised) - (long long )_on >= 0LL);
#line 1179
      assert((long long )_on - (long long )_trc >= 0LL);
#line 1179
      assert((long long )_server - (long long )_sid >= 0LL);
#line 1179
      assert((long long )_server - (long long )_unitmax >= 0LL);
#line 1179
      assert((long long )_msgs - (long long )_server >= 0LL);
#line 1179
      assert((long long )_msgs - (long long )_sid >= 0LL);
#line 1179
      assert((long long )_msgs - (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((long long )_msgs - (long long )_unitmax >= 0LL);
#line 1179
      assert((long long )_sid - (long long )_unitmax >= 0LL);
#line 1179
      assert((long long )_serv_sockfd - (long long )_server >= 0LL);
#line 1179
      assert((long long )_serv_sockfd - (long long )_sid >= 0LL);
#line 1179
      assert((long long )_serv_sockfd - (long long )_unitmax >= 0LL);
#line 1179
      assert((long long )_initialised - (long long )_server >= 0LL);
#line 1179
      assert((long long )_initialised - (long long )_msgs >= 0LL);
#line 1179
      assert((long long )_initialised - (long long )_sid >= 0LL);
#line 1179
      assert((long long )_initialised - (long long )_serv_sockfd >= 0LL);
#line 1179
      assert((long long )_initialised - (long long )_unitmax >= 0LL);
#line 1179
      assert((long long )_server >= 0LL);
#line 1179
      assert((long long )_msgs >= 0LL);
#line 1179
      assert((long long )_sid >= 0LL);
#line 1179
      assert((long long )_serv_sockfd >= 0LL);
#line 1179
      assert((long long )_initialised >= 0LL);
#line 1179
      assert((long long )_unitmax >= 0LL);
#line 1179
      __VERIFIER_atomic_end();
#line 1179
      _hashreads --;
      }
#line 1180
      if (! _hashreads) {
        {
#line 1181
        sem_post(& _hashsem);
        }
      }
      {
#line 1183
      pthread_mutex_unlock(& _hashmutex);
      }
#line 1184
      return;
    }
  }
#line 1187
  if (_unitmax > 0U) {
#line 1188
    if (i >= 0U) {
#line 1189
      if (i < _unitmax) {
#line 1190
        if ((_unit + i)->on) {
#line 1191
          if (((_unit + i)->level & level) != 0U) {
            {
#line 1192
            tmp___0 = 1;
            }
          } else {
            {
#line 1194
            tmp___0 = 0;
            }
          }
        } else {
          {
#line 1197
          tmp___0 = 0;
          }
        }
      } else {
        {
#line 1200
        tmp___0 = 0;
        }
      }
    } else {
      {
#line 1203
      tmp___0 = 0;
      }
    }
  } else {
    {
#line 1206
    tmp___0 = 0;
    }
  }
  {
#line 1208
  unit = tmp___0;
  }
#line 1209
  if (t->on) {
#line 1210
    if ((t->level & level) != 0U) {
      {
#line 1211
      tmp___1 = 1;
      }
    } else {
      {
#line 1213
      tmp___1 = 0;
      }
    }
  } else {
    {
#line 1216
    tmp___1 = 0;
    }
  }
  {
#line 1218
  thread = tmp___1;
  }
#line 1219
  if (! unit) {
#line 1220
    if (! thread) {
      {
#line 1221
      pthread_mutex_lock(& _hashmutex);
#line 1222
      __VERIFIER_atomic_begin();
#line 1222
      assert(-1LL + (long long )_trc >= 0LL);
#line 1222
      assert(-1LL + (long long )_on >= 0LL);
#line 1222
      assert((-2LL + (long long )_on) + (long long )_trc >= 0LL);
#line 1222
      assert((-1LL + (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1222
      assert((-1LL + (long long )_on) + (long long )_server >= 0LL);
#line 1222
      assert((-1LL + (long long )_on) + (long long )_sid >= 0LL);
#line 1222
      assert((-1LL + (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((-1LL + (long long )_on) + (long long )_unitmax >= 0LL);
#line 1222
      assert((-1LL + (long long )_server) + (long long )_trc >= 0LL);
#line 1222
      assert((-1LL + (long long )_msgs) + (long long )_trc >= 0LL);
#line 1222
      assert((-1LL + (long long )_msgs) + (long long )_on >= 0LL);
#line 1222
      assert((-1LL + (long long )_sid) + (long long )_trc >= 0LL);
#line 1222
      assert((-1LL + (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1222
      assert((-1LL + (long long )_initialised) + (long long )_trc >= 0LL);
#line 1222
      assert((-1LL + (long long )_initialised) + (long long )_on >= 0LL);
#line 1222
      assert((-1LL - (long long )_server) + (long long )_trc >= 0LL);
#line 1222
      assert((-1LL - (long long )_msgs) + (long long )_trc >= 0LL);
#line 1222
      assert((-1LL - (long long )_msgs) + (long long )_on >= 0LL);
#line 1222
      assert((-1LL - (long long )_sid) + (long long )_trc >= 0LL);
#line 1222
      assert((-1LL - (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1222
      assert((0LL - (long long )_on) + (long long )_trc >= 0LL);
#line 1222
      assert((0LL - (long long )_server) + (long long )_sid >= 0LL);
#line 1222
      assert((0LL - (long long )_server) + (long long )_unitmax >= 0LL);
#line 1222
      assert((0LL - (long long )_msgs) + (long long )_server >= 0LL);
#line 1222
      assert((0LL - (long long )_msgs) + (long long )_sid >= 0LL);
#line 1222
      assert((0LL - (long long )_msgs) + (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((0LL - (long long )_msgs) + (long long )_unitmax >= 0LL);
#line 1222
      assert((0LL - (long long )_sid) + (long long )_unitmax >= 0LL);
#line 1222
      assert((0LL - (long long )_serv_sockfd) + (long long )_server >= 0LL);
#line 1222
      assert((0LL - (long long )_serv_sockfd) + (long long )_sid >= 0LL);
#line 1222
      assert((0LL - (long long )_serv_sockfd) + (long long )_unitmax >= 0LL);
#line 1222
      assert((0LL - (long long )_initialised) + (long long )_trc >= 0LL);
#line 1222
      assert((0LL - (long long )_initialised) + (long long )_on >= 0LL);
#line 1222
      assert((1LL - (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1222
      assert((1LL - (long long )_on) + (long long )_server >= 0LL);
#line 1222
      assert((1LL - (long long )_on) + (long long )_sid >= 0LL);
#line 1222
      assert((1LL - (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((1LL - (long long )_on) + (long long )_unitmax >= 0LL);
#line 1222
      assert((1LL - (long long )_initialised) + (long long )_server >= 0LL);
#line 1222
      assert((1LL - (long long )_initialised) + (long long )_msgs >= 0LL);
#line 1222
      assert((1LL - (long long )_initialised) + (long long )_sid >= 0LL);
#line 1222
      assert((1LL - (long long )_initialised) + (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((1LL - (long long )_initialised) + (long long )_unitmax >= 0LL);
#line 1222
      assert((long long )_server + (long long )_sid >= 0LL);
#line 1222
      assert((long long )_server + (long long )_unitmax >= 0LL);
#line 1222
      assert((long long )_msgs + (long long )_server >= 0LL);
#line 1222
      assert((long long )_msgs + (long long )_sid >= 0LL);
#line 1222
      assert((long long )_msgs + (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((long long )_msgs + (long long )_unitmax >= 0LL);
#line 1222
      assert((long long )_sid + (long long )_unitmax >= 0LL);
#line 1222
      assert((long long )_serv_sockfd + (long long )_server >= 0LL);
#line 1222
      assert((long long )_serv_sockfd + (long long )_sid >= 0LL);
#line 1222
      assert((long long )_serv_sockfd + (long long )_unitmax >= 0LL);
#line 1222
      assert((long long )_initialised + (long long )_server >= 0LL);
#line 1222
      assert((long long )_initialised + (long long )_msgs >= 0LL);
#line 1222
      assert((long long )_initialised + (long long )_sid >= 0LL);
#line 1222
      assert((long long )_initialised + (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((long long )_initialised + (long long )_unitmax >= 0LL);
#line 1222
      assert(0LL - (long long )_server >= 0LL);
#line 1222
      assert(0LL - (long long )_msgs >= 0LL);
#line 1222
      assert(0LL - (long long )_sid >= 0LL);
#line 1222
      assert(0LL - (long long )_serv_sockfd >= 0LL);
#line 1222
      assert(0LL - (long long )_unitmax >= 0LL);
#line 1222
      assert(1LL - (long long )_trc >= 0LL);
#line 1222
      assert(1LL - (long long )_on >= 0LL);
#line 1222
      assert(1LL - (long long )_initialised >= 0LL);
#line 1222
      assert((-1LL + (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1222
      assert((-1LL + (long long )_on) - (long long )_server >= 0LL);
#line 1222
      assert((-1LL + (long long )_on) - (long long )_sid >= 0LL);
#line 1222
      assert((-1LL + (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((-1LL + (long long )_on) - (long long )_unitmax >= 0LL);
#line 1222
      assert((1LL + (long long )_server) - (long long )_trc >= 0LL);
#line 1222
      assert((1LL + (long long )_msgs) - (long long )_trc >= 0LL);
#line 1222
      assert((1LL + (long long )_msgs) - (long long )_on >= 0LL);
#line 1222
      assert((1LL + (long long )_sid) - (long long )_trc >= 0LL);
#line 1222
      assert((1LL + (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1222
      assert((1LL + (long long )_initialised) - (long long )_trc >= 0LL);
#line 1222
      assert((1LL + (long long )_initialised) - (long long )_on >= 0LL);
#line 1222
      assert((0LL - (long long )_server) - (long long )_sid >= 0LL);
#line 1222
      assert((0LL - (long long )_server) - (long long )_unitmax >= 0LL);
#line 1222
      assert((0LL - (long long )_msgs) - (long long )_server >= 0LL);
#line 1222
      assert((0LL - (long long )_msgs) - (long long )_sid >= 0LL);
#line 1222
      assert((0LL - (long long )_msgs) - (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((0LL - (long long )_msgs) - (long long )_unitmax >= 0LL);
#line 1222
      assert((0LL - (long long )_sid) - (long long )_unitmax >= 0LL);
#line 1222
      assert((0LL - (long long )_serv_sockfd) - (long long )_server >= 0LL);
#line 1222
      assert((0LL - (long long )_serv_sockfd) - (long long )_sid >= 0LL);
#line 1222
      assert((0LL - (long long )_serv_sockfd) - (long long )_unitmax >= 0LL);
#line 1222
      assert((1LL - (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1222
      assert((1LL - (long long )_on) - (long long )_server >= 0LL);
#line 1222
      assert((1LL - (long long )_on) - (long long )_sid >= 0LL);
#line 1222
      assert((1LL - (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((1LL - (long long )_on) - (long long )_unitmax >= 0LL);
#line 1222
      assert((1LL - (long long )_server) - (long long )_trc >= 0LL);
#line 1222
      assert((1LL - (long long )_msgs) - (long long )_trc >= 0LL);
#line 1222
      assert((1LL - (long long )_msgs) - (long long )_on >= 0LL);
#line 1222
      assert((1LL - (long long )_sid) - (long long )_trc >= 0LL);
#line 1222
      assert((1LL - (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1222
      assert((1LL - (long long )_initialised) - (long long )_server >= 0LL);
#line 1222
      assert((1LL - (long long )_initialised) - (long long )_msgs >= 0LL);
#line 1222
      assert((1LL - (long long )_initialised) - (long long )_sid >= 0LL);
#line 1222
      assert((1LL - (long long )_initialised) - (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((1LL - (long long )_initialised) - (long long )_unitmax >= 0LL);
#line 1222
      assert((2LL - (long long )_on) - (long long )_trc >= 0LL);
#line 1222
      assert((2LL - (long long )_initialised) - (long long )_trc >= 0LL);
#line 1222
      assert((2LL - (long long )_initialised) - (long long )_on >= 0LL);
#line 1222
      assert((long long )_on - (long long )_trc >= 0LL);
#line 1222
      assert((long long )_server - (long long )_sid >= 0LL);
#line 1222
      assert((long long )_server - (long long )_unitmax >= 0LL);
#line 1222
      assert((long long )_msgs - (long long )_server >= 0LL);
#line 1222
      assert((long long )_msgs - (long long )_sid >= 0LL);
#line 1222
      assert((long long )_msgs - (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((long long )_msgs - (long long )_unitmax >= 0LL);
#line 1222
      assert((long long )_sid - (long long )_unitmax >= 0LL);
#line 1222
      assert((long long )_serv_sockfd - (long long )_server >= 0LL);
#line 1222
      assert((long long )_serv_sockfd - (long long )_sid >= 0LL);
#line 1222
      assert((long long )_serv_sockfd - (long long )_unitmax >= 0LL);
#line 1222
      assert((long long )_initialised - (long long )_server >= 0LL);
#line 1222
      assert((long long )_initialised - (long long )_msgs >= 0LL);
#line 1222
      assert((long long )_initialised - (long long )_sid >= 0LL);
#line 1222
      assert((long long )_initialised - (long long )_serv_sockfd >= 0LL);
#line 1222
      assert((long long )_initialised - (long long )_unitmax >= 0LL);
#line 1222
      assert((long long )_server >= 0LL);
#line 1222
      assert((long long )_msgs >= 0LL);
#line 1222
      assert((long long )_sid >= 0LL);
#line 1222
      assert((long long )_serv_sockfd >= 0LL);
#line 1222
      assert((long long )_initialised >= 0LL);
#line 1222
      assert((long long )_unitmax >= 0LL);
#line 1222
      __VERIFIER_atomic_end();
#line 1222
      _hashreads --;
      }
#line 1223
      if (! _hashreads) {
        {
#line 1224
        sem_post(& _hashsem);
        }
      }
      {
#line 1226
      pthread_mutex_unlock(& _hashmutex);
      }
#line 1227
      return;
    }
  }
  {
#line 1230
  time(& tim);
#line 1231
  timeptr = localtime((time_t const   *)(& tim));
#line 1232
  strftime((char * __restrict  )(buf), 64U, (char const   * __restrict  )"%D-%T",
           (struct tm  const  * __restrict  )timeptr);
#line 1234
  sprintf((char * __restrict  )(t->trace), (char const   * __restrict  )"%s:%s:%d:%s:%n",
          buf, file, line, t->name, & n);
#line 1236
  t->wspace[44 - n] = (char )'\000';
  }
  {
#line 1238
  if ((int )a == 0) {
#line 1238
    goto case_0;
  }
#line 1242
  if ((int )a == 1) {
#line 1242
    goto case_1;
  }
#line 1246
  if ((int )a == 2) {
#line 1246
    goto case_2;
  }
#line 1250
  if ((int )a == 3) {
#line 1250
    goto case_3;
  }
#line 1254
  if ((int )a == 4) {
#line 1254
    goto case_4;
  }
#line 1237
  goto switch_break;
  case_0: /* CIL Label */ 
  {
#line 1239
  sprintf((char * __restrict  )(t->trace + n), (char const   * __restrict  )"%senter %s(%s)\n",
          t->wspace, fn, s);
  }
#line 1241
  goto switch_break;
  case_1: /* CIL Label */ 
  {
#line 1243
  sprintf((char * __restrict  )(t->trace + n), (char const   * __restrict  )"%sreturn %s(%s)\n",
          t->wspace, fn, s);
  }
#line 1245
  goto switch_break;
  case_2: /* CIL Label */ 
  {
#line 1247
  sprintf((char * __restrict  )(t->trace + n), (char const   * __restrict  )"%s%s: return\n",
          t->wspace, fn);
  }
#line 1249
  goto switch_break;
  case_3: /* CIL Label */ 
  {
#line 1251
  sprintf((char * __restrict  )(t->trace + n), (char const   * __restrict  )"%s%s\n",
          t->wspace, s);
  }
#line 1253
  goto switch_break;
  case_4: /* CIL Label */ 
  {
#line 1255
  sprintf((char * __restrict  )(t->trace + n), (char const   * __restrict  )"%sERROR in fn %s: %s\n",
          t->wspace, fn, s);
  }
#line 1257
  goto switch_break;
  switch_break: /* CIL Label */ ;
  }
  {
#line 1259
  t->wspace[44 - n] = (char )' ';
  }
#line 1260
  if (_server) {
    {
#line 1261
    num = 0;
#line 1262
    bytesWritten = 0;
    }
    {
#line 1263
    while (1) {
      while_continue: /* CIL Label */ ;
#line 1263
      if (! (bytesWritten < 1098)) {
#line 1263
        goto while_break;
      }
      {
#line 1264
      num = write(_serv_sockfd, (void *)(t->trace + bytesWritten), 1098 - bytesWritten);
#line 1265
      bytesWritten += num;
      }
    }
    while_break: /* CIL Label */ ;
    }
#line 1267
    if (bytesWritten == 1098) {
      {
#line 1268
      _msgs ++;
      }
    }
  } else {
    {
#line 1271
    fprintf((FILE * __restrict  )_fp, (char const   * __restrict  )"%s", t->trace);
    }
  }
  {
#line 1273
  pthread_mutex_lock(& _hashmutex);
#line 1274
  __VERIFIER_atomic_begin();
#line 1274
  assert(-1LL + (long long )_trc >= 0LL);
#line 1274
  assert(-1LL + (long long )_on >= 0LL);
#line 1274
  assert((-2LL + (long long )_on) + (long long )_trc >= 0LL);
#line 1274
  assert((-1LL + (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1274
  assert((-1LL + (long long )_on) + (long long )_server >= 0LL);
#line 1274
  assert((-1LL + (long long )_on) + (long long )_sid >= 0LL);
#line 1274
  assert((-1LL + (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((-1LL + (long long )_on) + (long long )_unitmax >= 0LL);
#line 1274
  assert((-1LL + (long long )_server) + (long long )_trc >= 0LL);
#line 1274
  assert((-1LL + (long long )_msgs) + (long long )_trc >= 0LL);
#line 1274
  assert((-1LL + (long long )_msgs) + (long long )_on >= 0LL);
#line 1274
  assert((-1LL + (long long )_sid) + (long long )_trc >= 0LL);
#line 1274
  assert((-1LL + (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1274
  assert((-1LL + (long long )_initialised) + (long long )_trc >= 0LL);
#line 1274
  assert((-1LL + (long long )_initialised) + (long long )_on >= 0LL);
#line 1274
  assert((-1LL - (long long )_server) + (long long )_trc >= 0LL);
#line 1274
  assert((-1LL - (long long )_msgs) + (long long )_trc >= 0LL);
#line 1274
  assert((-1LL - (long long )_msgs) + (long long )_on >= 0LL);
#line 1274
  assert((-1LL - (long long )_sid) + (long long )_trc >= 0LL);
#line 1274
  assert((-1LL - (long long )_serv_sockfd) + (long long )_trc >= 0LL);
#line 1274
  assert((0LL - (long long )_on) + (long long )_trc >= 0LL);
#line 1274
  assert((0LL - (long long )_server) + (long long )_sid >= 0LL);
#line 1274
  assert((0LL - (long long )_server) + (long long )_unitmax >= 0LL);
#line 1274
  assert((0LL - (long long )_msgs) + (long long )_server >= 0LL);
#line 1274
  assert((0LL - (long long )_msgs) + (long long )_sid >= 0LL);
#line 1274
  assert((0LL - (long long )_msgs) + (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((0LL - (long long )_msgs) + (long long )_unitmax >= 0LL);
#line 1274
  assert((0LL - (long long )_sid) + (long long )_unitmax >= 0LL);
#line 1274
  assert((0LL - (long long )_serv_sockfd) + (long long )_server >= 0LL);
#line 1274
  assert((0LL - (long long )_serv_sockfd) + (long long )_sid >= 0LL);
#line 1274
  assert((0LL - (long long )_serv_sockfd) + (long long )_unitmax >= 0LL);
#line 1274
  assert((0LL - (long long )_initialised) + (long long )_trc >= 0LL);
#line 1274
  assert((0LL - (long long )_initialised) + (long long )_on >= 0LL);
#line 1274
  assert((1LL - (long long )_trc) + (long long )_unitmax >= 0LL);
#line 1274
  assert((1LL - (long long )_on) + (long long )_server >= 0LL);
#line 1274
  assert((1LL - (long long )_on) + (long long )_sid >= 0LL);
#line 1274
  assert((1LL - (long long )_on) + (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((1LL - (long long )_on) + (long long )_unitmax >= 0LL);
#line 1274
  assert((1LL - (long long )_initialised) + (long long )_server >= 0LL);
#line 1274
  assert((1LL - (long long )_initialised) + (long long )_msgs >= 0LL);
#line 1274
  assert((1LL - (long long )_initialised) + (long long )_sid >= 0LL);
#line 1274
  assert((1LL - (long long )_initialised) + (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((1LL - (long long )_initialised) + (long long )_unitmax >= 0LL);
#line 1274
  assert((long long )_server + (long long )_sid >= 0LL);
#line 1274
  assert((long long )_server + (long long )_unitmax >= 0LL);
#line 1274
  assert((long long )_msgs + (long long )_server >= 0LL);
#line 1274
  assert((long long )_msgs + (long long )_sid >= 0LL);
#line 1274
  assert((long long )_msgs + (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((long long )_msgs + (long long )_unitmax >= 0LL);
#line 1274
  assert((long long )_sid + (long long )_unitmax >= 0LL);
#line 1274
  assert((long long )_serv_sockfd + (long long )_server >= 0LL);
#line 1274
  assert((long long )_serv_sockfd + (long long )_sid >= 0LL);
#line 1274
  assert((long long )_serv_sockfd + (long long )_unitmax >= 0LL);
#line 1274
  assert((long long )_initialised + (long long )_server >= 0LL);
#line 1274
  assert((long long )_initialised + (long long )_msgs >= 0LL);
#line 1274
  assert((long long )_initialised + (long long )_sid >= 0LL);
#line 1274
  assert((long long )_initialised + (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((long long )_initialised + (long long )_unitmax >= 0LL);
#line 1274
  assert(0LL - (long long )_server >= 0LL);
#line 1274
  assert(0LL - (long long )_msgs >= 0LL);
#line 1274
  assert(0LL - (long long )_sid >= 0LL);
#line 1274
  assert(0LL - (long long )_serv_sockfd >= 0LL);
#line 1274
  assert(0LL - (long long )_unitmax >= 0LL);
#line 1274
  assert(1LL - (long long )_trc >= 0LL);
#line 1274
  assert(1LL - (long long )_on >= 0LL);
#line 1274
  assert(1LL - (long long )_initialised >= 0LL);
#line 1274
  assert((-1LL + (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1274
  assert((-1LL + (long long )_on) - (long long )_server >= 0LL);
#line 1274
  assert((-1LL + (long long )_on) - (long long )_sid >= 0LL);
#line 1274
  assert((-1LL + (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((-1LL + (long long )_on) - (long long )_unitmax >= 0LL);
#line 1274
  assert((1LL + (long long )_server) - (long long )_trc >= 0LL);
#line 1274
  assert((1LL + (long long )_msgs) - (long long )_trc >= 0LL);
#line 1274
  assert((1LL + (long long )_msgs) - (long long )_on >= 0LL);
#line 1274
  assert((1LL + (long long )_sid) - (long long )_trc >= 0LL);
#line 1274
  assert((1LL + (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1274
  assert((1LL + (long long )_initialised) - (long long )_trc >= 0LL);
#line 1274
  assert((1LL + (long long )_initialised) - (long long )_on >= 0LL);
#line 1274
  assert((0LL - (long long )_server) - (long long )_sid >= 0LL);
#line 1274
  assert((0LL - (long long )_server) - (long long )_unitmax >= 0LL);
#line 1274
  assert((0LL - (long long )_msgs) - (long long )_server >= 0LL);
#line 1274
  assert((0LL - (long long )_msgs) - (long long )_sid >= 0LL);
#line 1274
  assert((0LL - (long long )_msgs) - (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((0LL - (long long )_msgs) - (long long )_unitmax >= 0LL);
#line 1274
  assert((0LL - (long long )_sid) - (long long )_unitmax >= 0LL);
#line 1274
  assert((0LL - (long long )_serv_sockfd) - (long long )_server >= 0LL);
#line 1274
  assert((0LL - (long long )_serv_sockfd) - (long long )_sid >= 0LL);
#line 1274
  assert((0LL - (long long )_serv_sockfd) - (long long )_unitmax >= 0LL);
#line 1274
  assert((1LL - (long long )_trc) - (long long )_unitmax >= 0LL);
#line 1274
  assert((1LL - (long long )_on) - (long long )_server >= 0LL);
#line 1274
  assert((1LL - (long long )_on) - (long long )_sid >= 0LL);
#line 1274
  assert((1LL - (long long )_on) - (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((1LL - (long long )_on) - (long long )_unitmax >= 0LL);
#line 1274
  assert((1LL - (long long )_server) - (long long )_trc >= 0LL);
#line 1274
  assert((1LL - (long long )_msgs) - (long long )_trc >= 0LL);
#line 1274
  assert((1LL - (long long )_msgs) - (long long )_on >= 0LL);
#line 1274
  assert((1LL - (long long )_sid) - (long long )_trc >= 0LL);
#line 1274
  assert((1LL - (long long )_serv_sockfd) - (long long )_trc >= 0LL);
#line 1274
  assert((1LL - (long long )_initialised) - (long long )_server >= 0LL);
#line 1274
  assert((1LL - (long long )_initialised) - (long long )_msgs >= 0LL);
#line 1274
  assert((1LL - (long long )_initialised) - (long long )_sid >= 0LL);
#line 1274
  assert((1LL - (long long )_initialised) - (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((1LL - (long long )_initialised) - (long long )_unitmax >= 0LL);
#line 1274
  assert((2LL - (long long )_on) - (long long )_trc >= 0LL);
#line 1274
  assert((2LL - (long long )_initialised) - (long long )_trc >= 0LL);
#line 1274
  assert((2LL - (long long )_initialised) - (long long )_on >= 0LL);
#line 1274
  assert((long long )_on - (long long )_trc >= 0LL);
#line 1274
  assert((long long )_server - (long long )_sid >= 0LL);
#line 1274
  assert((long long )_server - (long long )_unitmax >= 0LL);
#line 1274
  assert((long long )_msgs - (long long )_server >= 0LL);
#line 1274
  assert((long long )_msgs - (long long )_sid >= 0LL);
#line 1274
  assert((long long )_msgs - (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((long long )_msgs - (long long )_unitmax >= 0LL);
#line 1274
  assert((long long )_sid - (long long )_unitmax >= 0LL);
#line 1274
  assert((long long )_serv_sockfd - (long long )_server >= 0LL);
#line 1274
  assert((long long )_serv_sockfd - (long long )_sid >= 0LL);
#line 1274
  assert((long long )_serv_sockfd - (long long )_unitmax >= 0LL);
#line 1274
  assert((long long )_initialised - (long long )_server >= 0LL);
#line 1274
  assert((long long )_initialised - (long long )_msgs >= 0LL);
#line 1274
  assert((long long )_initialised - (long long )_sid >= 0LL);
#line 1274
  assert((long long )_initialised - (long long )_serv_sockfd >= 0LL);
#line 1274
  assert((long long )_initialised - (long long )_unitmax >= 0LL);
#line 1274
  assert((long long )_server >= 0LL);
#line 1274
  assert((long long )_msgs >= 0LL);
#line 1274
  assert((long long )_sid >= 0LL);
#line 1274
  assert((long long )_serv_sockfd >= 0LL);
#line 1274
  assert((long long )_initialised >= 0LL);
#line 1274
  assert((long long )_unitmax >= 0LL);
#line 1274
  __VERIFIER_atomic_end();
#line 1274
  _hashreads --;
  }
#line 1275
  if (! _hashreads) {
    {
#line 1276
    sem_post(& _hashsem);
    }
  }
  {
#line 1278
  pthread_mutex_unlock(& _hashmutex);
  }
#line 1279
  return;
}
}
#line 1282
extern int gethostname() ;
#line 1283
extern int memcpy() ;
#line 1284 "ctrace_comb.c"
int trc_start_client(void) 
{ 
  struct sockaddr_in serv_addr ;
  char name[1024] ;
  struct hostent *hostptr ;
  int tmp ;

  {
  {
#line 1291
  serv_addr.sin_family = (sa_family_t )0;
#line 1292
  serv_addr.sin_port = (unsigned short)0;
#line 1293
  serv_addr.sin_addr.s_addr = 0U;
#line 1294
  serv_addr.sin_zero[0] = (unsigned char)0;
#line 1295
  serv_addr.sin_zero[1] = (unsigned char)0;
#line 1296
  serv_addr.sin_zero[2] = (unsigned char)0;
#line 1297
  serv_addr.sin_zero[3] = (unsigned char)0;
#line 1298
  serv_addr.sin_zero[4] = (unsigned char)0;
#line 1299
  serv_addr.sin_zero[5] = (unsigned char)0;
#line 1300
  serv_addr.sin_zero[6] = (unsigned char)0;
#line 1301
  serv_addr.sin_zero[7] = (unsigned char)0;
#line 1302
  hostptr = (struct hostent *)((void *)0);
#line 1303
  sem_wait(& _startclient);
#line 1304
  _serv_sockfd = socket(2, 1, 0);
  }
#line 1305
  if (_serv_sockfd < 0) {
    {
#line 1306
    perror((char const   *)((void *)0));
    }
#line 1307
    return (1);
  }
  {
#line 1309
  gethostname(name, 1024);
#line 1310
  hostptr = gethostbyname((char const   *)(name));
#line 1311
  memset(& serv_addr, 0, sizeof(serv_addr));
#line 1312
  memcpy(& serv_addr.sin_addr, *(hostptr->h_addr_list + 0), hostptr->h_length);
#line 1313
  serv_addr.sin_family = (unsigned short)2;
#line 1314
  serv_addr.sin_port = htons((unsigned short)2013);
#line 1315
  tmp = connect(_serv_sockfd, (struct sockaddr  const  *)((struct sockaddr *)(& serv_addr)),
                (socklen_t )sizeof(serv_addr));
  }
#line 1317
  if (tmp < 0) {
    {
#line 1318
    printf((char const   * __restrict  )"connect error\n");
#line 1319
    perror((char const   *)((void *)0));
    }
#line 1320
    return (1);
  }
#line 1322
  return (0);
}
}
#line 1325
extern int close() ;
#line 1326 "ctrace_comb.c"
int trc_stop_client(void) 
{ 


  {
  {
#line 1330
  close(_serv_sockfd);
  }
#line 1331
  return (0);
}
}
#line 1334
extern int read() ;
#line 1335 "ctrace_comb.c"
void *trc_start_server(void) 
{ 
  char buf[1098] ;
  int sockfd ;
  int client_sockfd ;
  int status ;
  int on ;
  int nread ;
  int len ;
  struct sockaddr_in serv_addr ;
  struct sockaddr_in client_addr ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 1349
  status = 0;
#line 1350
  on = 1;
#line 1351
  sockfd = socket(2, 1, 0);
  }
#line 1352
  if (sockfd < 0) {
    {
#line 1353
    perror((char const   *)((void *)0));
    }
#line 1354
    return ((void *)0);
  }
  {
#line 1356
  status = setsockopt(sockfd, 1, 2, (void const   *)((char const   *)(& on)), (socklen_t )sizeof(on));
  }
#line 1357
  if (status == -1) {
    {
#line 1358
    perror((char const   *)"setsockopt(..., SO_REUSEADDR,...)");
    }
#line 1359
    return ((void *)0);
  }
  {
#line 1361
  serv_addr.sin_family = (unsigned short)2;
#line 1362
  serv_addr.sin_addr.s_addr = htonl(0U);
#line 1363
  serv_addr.sin_port = htons((unsigned short)2013);
#line 1364
  tmp = bind(sockfd, (struct sockaddr  const  *)(& serv_addr), (socklen_t )sizeof(serv_addr));
  }
#line 1365
  if (tmp < 0) {
    {
#line 1366
    perror((char const   *)((void *)0));
    }
#line 1367
    return ((void *)0);
  }
  {
#line 1369
  listen(sockfd, 1);
#line 1370
  sem_post(& _startclient);
#line 1371
  len = (int )sizeof(client_addr);
#line 1372
  client_sockfd = accept(sockfd, (struct sockaddr * __restrict  )(& client_addr),
                         (socklen_t * __restrict  )(& len));
  }
  {
#line 1374
  while (1) {
    while_continue: /* CIL Label */ ;
#line 1375
    if (_server) {
#line 1376
      if (! (client_sockfd != -1)) {
#line 1377
        goto _L;
      }
    } else
    _L: 
#line 1381
    if (! _msgs) {
#line 1382
      goto while_break;
    }
    {
#line 1385
    nread = 0;
    }
    {
#line 1386
    while (1) {
      while_continue___0: /* CIL Label */ ;
      {
#line 1387
      tmp___0 = read(client_sockfd, buf, 1098);
#line 1388
      nread += tmp___0;
      }
#line 1389
      if (! (nread < 1098)) {
#line 1390
        goto while_break___0;
      }
    }
    while_break___0: /* CIL Label */ ;
    }
    {
#line 1393
    _msgs --;
#line 1394
    fprintf((FILE * __restrict  )_fp, (char const   * __restrict  )"%s", buf);
    }
  }
  while_break: /* CIL Label */ ;
  }
  {
#line 1396
  close(client_sockfd);
  }
#line 1397
  return ((void *)0);
}
}
#line 1400 "ctrace_comb.c"
int trc_stop_server(void) 
{ 


  {
  {
#line 1404
  _server = 0U;
  }
#line 1405
  return ((int )_server);
}
}
