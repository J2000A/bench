/* Generated by CIL v. 1.8.2 */
/* print_CIL_Input is true */

#line 1 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned long pthread_t;
#line 2 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_pthread_attr_t_145707745 {
   char __size[56] ;
   long __align ;
};
#line 2 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef union __anonunion_pthread_attr_t_145707745 pthread_attr_t;
#line 7 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __pthread_internal_list {
   struct __pthread_internal_list *__prev ;
   struct __pthread_internal_list *__next ;
};
#line 7 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __pthread_internal_list __pthread_list_t;
#line 12 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __pthread_mutex_s {
   int __lock ;
   unsigned int __count ;
   int __owner ;
   unsigned int __nusers ;
   int __kind ;
   int __spins ;
   __pthread_list_t __list ;
};
#line 12 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_pthread_mutex_t_708823589 {
   struct __pthread_mutex_s __data ;
   char __size[40] ;
   long __align ;
};
#line 12 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef union __anonunion_pthread_mutex_t_708823589 pthread_mutex_t;
#line 27 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_pthread_mutexattr_t_488594144 {
   char __size[4] ;
   int __align ;
};
#line 27 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef union __anonunion_pthread_mutexattr_t_488594144 pthread_mutexattr_t;
#line 49
struct device ;
#line 50 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef signed char __s8;
#line 51 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned char __u8;
#line 52 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef short __s16;
#line 53 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned short __u16;
#line 54 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef int __s32;
#line 55 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned int __u32;
#line 56 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned long long __u64;
#line 57 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned char u8;
#line 58 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef short s16;
#line 59 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned short u16;
#line 60 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef int s32;
#line 61 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned int u32;
#line 62 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef long long s64;
#line 63 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned long long u64;
#line 64 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef long __kernel_long_t;
#line 65 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned long __kernel_ulong_t;
#line 66 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef int __kernel_pid_t;
#line 67 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned int __kernel_uid32_t;
#line 68 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned int __kernel_gid32_t;
#line 69 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_ulong_t __kernel_size_t;
#line 70 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_long_t __kernel_ssize_t;
#line 71 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef long long __kernel_loff_t;
#line 72 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_long_t __kernel_time_t;
#line 73 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_long_t __kernel_clock_t;
#line 74 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef int __kernel_timer_t;
#line 75 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef int __kernel_clockid_t;
#line 76 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __u16 __le16;
#line 77 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __u32 __le32;
#line 78 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __u32 __kernel_dev_t;
#line 79 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_dev_t dev_t;
#line 80 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned short umode_t;
#line 81 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_pid_t pid_t;
#line 82 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_clockid_t clockid_t;
#line 83 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef _Bool bool;
#line 84 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_uid32_t uid_t;
#line 85 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_gid32_t gid_t;
#line 86 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_loff_t loff_t;
#line 87 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned int size_t;
#line 88 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_ssize_t ssize_t;
#line 89 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_time_t time_t;
#line 90 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __s32 int32_t;
#line 91 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __u32 uint32_t;
#line 92 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned long sector_t;
#line 93 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned long blkcnt_t;
#line 94 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef u64 dma_addr_t;
#line 95 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned int gfp_t;
#line 96 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned int fmode_t;
#line 97 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned int oom_flags_t;
#line 98 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 101 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 102 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 105 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 106 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 110
struct hlist_node ;
#line 111 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct hlist_head {
   struct hlist_node *first ;
};
#line 114 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 118 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head * ) ;
};
#line 122
struct mutex ;
#line 123 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef u16 __ticket_t;
#line 124 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef u32 __ticketpair_t;
#line 125 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __raw_tickets {
   __ticket_t head ;
   __ticket_t tail ;
};
#line 129 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_8 {
   __ticketpair_t head_tail ;
   struct __raw_tickets tickets ;
};
#line 133 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct arch_spinlock {
   union __anonunion____missing_field_name_8 __annonCompField4 ;
};
#line 136 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct arch_spinlock arch_spinlock_t;
#line 137 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_10 {
   u32 read ;
   s32 write ;
};
#line 141 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_arch_rwlock_t_9 {
   s64 lock ;
   struct __anonstruct____missing_field_name_10 __annonCompField5 ;
};
#line 145 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef union __anonunion_arch_rwlock_t_9 arch_rwlock_t;
#line 146
struct task_struct ;
#line 147
struct lockdep_map ;
#line 148 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 152
struct module ;
#line 153 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 176 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_12 {
   unsigned int a ;
   unsigned int b ;
};
#line 180 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_13 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int base1 : 8 ;
   unsigned int type : 4 ;
   unsigned int s : 1 ;
   unsigned int dpl : 2 ;
   unsigned int p : 1 ;
   unsigned int limit : 4 ;
   unsigned int avl : 1 ;
   unsigned int l : 1 ;
   unsigned int d : 1 ;
   unsigned int g : 1 ;
   unsigned int base2 : 8 ;
};
#line 195 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_11 {
   struct __anonstruct____missing_field_name_12 __annonCompField6 ;
   struct __anonstruct____missing_field_name_13 __annonCompField7 ;
};
#line 199 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct desc_struct {
   union __anonunion____missing_field_name_11 __annonCompField8 ;
};
#line 202 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned long pgdval_t;
#line 203 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned long pgprotval_t;
#line 204 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 207 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct pgprot pgprot_t;
#line 208 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_pgd_t_15 {
   pgdval_t pgd ;
};
#line 211 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_pgd_t_15 pgd_t;
#line 212
struct page ;
#line 213 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct page *pgtable_t;
#line 214
struct file ;
#line 215
struct seq_file ;
#line 216
struct thread_struct ;
#line 217
struct mm_struct ;
#line 218
struct cpumask ;
#line 219 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef void (*ctor_fn_t)(void);
#line 220 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct _ddebug {
   char const   *modname ;
   char const   *function ;
   char const   *filename ;
   char const   *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
};
#line 228
struct file_operations ;
#line 229
struct completion ;
#line 230
struct pid ;
#line 231 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};
#line 242 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_18 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};
#line 246 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion____missing_field_name_18 __annonCompField9 ;
};
#line 250 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 256 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 259 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct cpumask cpumask_t;
#line 260 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct cpumask *cpumask_var_t;
#line 261
struct static_key ;
#line 262
struct exec_domain ;
#line 263
struct map_segment ;
#line 264 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct exec_domain {
   char const   *name ;
   void (*handler)(int  , struct pt_regs * ) ;
   unsigned char pers_low ;
   unsigned char pers_high ;
   unsigned long *signal_map ;
   unsigned long *signal_invmap ;
   struct map_segment *err_map ;
   struct map_segment *socktype_map ;
   struct map_segment *sockopt_map ;
   struct map_segment *af_map ;
   struct module *module ;
   struct exec_domain *next ;
};
#line 278
struct seq_operations ;
#line 279 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct i387_fsave_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 290 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_23 {
   u64 rip ;
   u64 rdp ;
};
#line 294 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_24 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 300 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_22 {
   struct __anonstruct____missing_field_name_23 __annonCompField13 ;
   struct __anonstruct____missing_field_name_24 __annonCompField14 ;
};
#line 304 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_25 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 308 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct i387_fxsave_struct {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion____missing_field_name_22 __annonCompField15 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion____missing_field_name_25 __annonCompField16 ;
};
#line 321 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct i387_soft_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 339 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct ymmh_struct {
   u32 ymmh_space[64U] ;
};
#line 342 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct lwp_struct {
   u8 reserved[128U] ;
};
#line 345 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct bndregs_struct {
   u64 bndregs[8U] ;
};
#line 348 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct bndcsr_struct {
   u64 cfg_reg_u ;
   u64 status_reg ;
};
#line 352 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct xsave_hdr_struct {
   u64 xstate_bv ;
   u64 reserved1[2U] ;
   u64 reserved2[5U] ;
};
#line 357 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct xsave_struct {
   struct i387_fxsave_struct i387 ;
   struct xsave_hdr_struct xsave_hdr ;
   struct ymmh_struct ymmh ;
   struct lwp_struct lwp ;
   struct bndregs_struct bndregs ;
   struct bndcsr_struct bndcsr ;
};
#line 365 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union thread_xstate {
   struct i387_fsave_struct fsave ;
   struct i387_fxsave_struct fxsave ;
   struct i387_soft_struct soft ;
   struct xsave_struct xsave ;
};
#line 371 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct fpu {
   unsigned int last_cpu ;
   unsigned int has_fpu ;
   union thread_xstate *state ;
};
#line 376
struct kmem_cache ;
#line 377
struct perf_event ;
#line 378 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned long usersp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct fpu fpu ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   unsigned char fpu_counter ;
};
#line 401 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_mm_segment_t_27 {
   unsigned long seg ;
};
#line 404 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_mm_segment_t_27 mm_segment_t;
#line 405 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef atomic64_t atomic_long_t;
#line 406 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 412 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 415 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 418 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 435 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 442 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 2 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 11 ;
};
#line 457 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 464 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct raw_spinlock raw_spinlock_t;
#line 465 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_29 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 469 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_28 {
   struct raw_spinlock rlock ;
   struct __anonstruct____missing_field_name_29 __annonCompField18 ;
};
#line 473 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct spinlock {
   union __anonunion____missing_field_name_28 __annonCompField19 ;
};
#line 476 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct spinlock spinlock_t;
#line 477 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_rwlock_t_30 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 484 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_rwlock_t_30 rwlock_t;
#line 485 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 494 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};
#line 499
struct timespec ;
#line 500
struct compat_timespec ;
#line 501 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_futex_32 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 509 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_nanosleep_33 {
   clockid_t clockid ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};
#line 515
struct pollfd ;
#line 516 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_poll_34 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 523 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_31 {
   struct __anonstruct_futex_32 futex ;
   struct __anonstruct_nanosleep_33 nanosleep ;
   struct __anonstruct_poll_34 poll ;
};
#line 528 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct restart_block {
   long (*fn)(struct restart_block * ) ;
   union __anonunion____missing_field_name_31 __annonCompField20 ;
};
#line 532 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct thread_info {
   struct task_struct *task ;
   struct exec_domain *exec_domain ;
   __u32 flags ;
   __u32 status ;
   __u32 cpu ;
   int saved_preempt_count ;
   mm_segment_t addr_limit ;
   struct restart_block restart_block ;
   void *sysenter_return ;
   unsigned int sig_on_uaccess_error : 1 ;
   unsigned int uaccess_err : 1 ;
};
#line 545
struct jump_entry ;
#line 546
struct static_key_mod ;
#line 547 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct static_key {
   atomic_t enabled ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 552 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef u64 jump_label_t;
#line 553 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};
#line 558 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 562 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct seqcount seqcount_t;
#line 563
struct __wait_queue ;
#line 564 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __wait_queue wait_queue_t;
#line 565 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t * , unsigned int  , int  , void * ) ;
   struct list_head task_list ;
};
#line 571 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 575 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __wait_queue_head wait_queue_head_t;
#line 576 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 580 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct idr_layer {
   int prefix ;
   unsigned long bitmap[4U] ;
   struct idr_layer *ary[256U] ;
   int count ;
   int layer ;
   struct callback_head callback_head ;
};
#line 588 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   struct idr_layer *id_free ;
   int layers ;
   int id_free_cnt ;
   int cur ;
   spinlock_t lock ;
};
#line 597 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};
#line 601 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};
#line 605 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 610 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 613
struct dentry ;
#line 614
struct iattr ;
#line 615
struct vm_area_struct ;
#line 616
struct super_block ;
#line 617
struct file_system_type ;
#line 618
struct kernfs_open_node ;
#line 619
struct kernfs_iattrs ;
#line 620
struct kernfs_root ;
#line 621 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 626
struct kernfs_node ;
#line 627 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 630
struct kernfs_ops ;
#line 631 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernfs_elem_attr {
   struct kernfs_ops  const  *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
};
#line 636 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_u_36 {
   struct completion *completion ;
   struct kernfs_node *removed_list ;
};
#line 640 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_37 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 645 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const   *name ;
   struct rb_node rb ;
   union __anonunion_u_36 u ;
   void const   *ns ;
   unsigned int hash ;
   union __anonunion____missing_field_name_37 __annonCompField21 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};
#line 662 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernfs_dir_ops {
   int (*mkdir)(struct kernfs_node * , char const   * , umode_t  ) ;
   int (*rmdir)(struct kernfs_node * ) ;
   int (*rename)(struct kernfs_node * , struct kernfs_node * , char const   * ) ;
};
#line 667 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernfs_root {
   struct kernfs_node *kn ;
   struct ida ino_ida ;
   struct kernfs_dir_ops *dir_ops ;
};
#line 672
struct vm_operations_struct ;
#line 673 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   bool mmapped ;
   struct vm_operations_struct  const  *vm_ops ;
};
#line 682 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernfs_ops {
   int (*seq_show)(struct seq_file * , void * ) ;
   void *(*seq_start)(struct seq_file * , loff_t * ) ;
   void *(*seq_next)(struct seq_file * , void * , loff_t * ) ;
   void (*seq_stop)(struct seq_file * , void * ) ;
   ssize_t (*read)(struct kernfs_open_file * , char * , size_t  , loff_t  ) ;
   ssize_t (*write)(struct kernfs_open_file * , char * , size_t  , loff_t  ) ;
   int (*mmap)(struct kernfs_open_file * , struct vm_area_struct * ) ;
   struct lock_class_key lockdep_key ;
};
#line 692
struct sock ;
#line 693
struct kobject ;
#line 694
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 699 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
   void (*drop_ns)(void * ) ;
};
#line 707 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 711
struct user_namespace ;
#line 712 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_kuid_t_38 {
   uid_t val ;
};
#line 715 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_kuid_t_38 kuid_t;
#line 716 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_kgid_t_39 {
   gid_t val ;
};
#line 719 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_kgid_t_39 kgid_t;
#line 720 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};
#line 735
struct bin_attribute ;
#line 736 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct attribute {
   char const   *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 743 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct attribute_group {
   char const   *name ;
   umode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 749 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                   loff_t  , size_t  ) ;
   ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                    loff_t  , size_t  ) ;
   int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
};
#line 759 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
};
#line 763 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kref {
   atomic_t refcount ;
};
#line 766 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union ktime {
   s64 tv64 ;
};
#line 769 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef union ktime ktime_t;
#line 770
struct tvec_base ;
#line 771 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   struct tvec_base *base ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};
#line 783
struct hrtimer ;
#line 784
enum hrtimer_restart ;
#line 785
struct workqueue_struct ;
#line 786
struct work_struct ;
#line 787 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 793 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 799
struct kset ;
#line 800
struct kobj_type ;
#line 801 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 816 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 823 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kobj_uevent_env {
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 829 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kset_uevent_ops {
   int (*filter)(struct kset * , struct kobject * ) ;
   char const   *(*name)(struct kset * , struct kobject * ) ;
   int (*uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 834 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 840
struct inode ;
#line 841 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations  const  *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
};
#line 849
struct backing_dev_info ;
#line 850 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned long kernel_ulong_t;
#line 851 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_device_id {
   __u16 match_flags ;
   __u16 idVendor ;
   __u16 idProduct ;
   __u16 bcdDevice_lo ;
   __u16 bcdDevice_hi ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 bInterfaceNumber ;
   kernel_ulong_t driver_info ;
};
#line 866 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
};
#line 870 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const   *data ;
};
#line 876 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
};
#line 892 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
};
#line 902 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
};
#line 913 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
};
#line 923 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_ss_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bMaxBurst ;
   __u8 bmAttributes ;
   __le16 wBytesPerInterval ;
};
#line 930 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
};
#line 940 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_bos_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumDeviceCaps ;
};
#line 946 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_ext_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __le32 bmAttributes ;
};
#line 952 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_ss_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bmAttributes ;
   __le16 wSpeedSupported ;
   __u8 bFunctionalitySupport ;
   __u8 bU1devExitLat ;
   __le16 bU2DevExitLat ;
};
#line 962 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_ss_container_id_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __u8 ContainerID[16U] ;
};
#line 969
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_WIRELESS = 4,
    USB_SPEED_SUPER = 5
} ;
#line 977
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
} ;
#line 988
struct llist_node ;
#line 989 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct llist_node {
   struct llist_node *next ;
};
#line 992 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct pm_message {
   int event ;
};
#line 995 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct pm_message pm_message_t;
#line 996 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_late)(struct device * ) ;
   int (*resume_early)(struct device * ) ;
   int (*freeze_late)(struct device * ) ;
   int (*thaw_early)(struct device * ) ;
   int (*poweroff_late)(struct device * ) ;
   int (*restore_early)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 1021
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 1027
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
} ;
#line 1034
struct wakeup_source ;
#line 1035 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};
#line 1040
struct dev_pm_qos ;
#line 1041 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool ignore_children : 1 ;
   bool early_init : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int run_wake : 1 ;
   unsigned int runtime_auto : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   struct dev_pm_qos *qos ;
};
#line 1083 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
};
#line 1086 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_nodemask_t_108 {
   unsigned long bits[16U] ;
};
#line 1089 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_nodemask_t_108 nodemask_t;
#line 1090 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_mm_context_t_109 {
   void *ldt ;
   int size ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
};
#line 1097 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_mm_context_t_109 mm_context_t;
#line 1098
struct device_node ;
#line 1099
struct rw_semaphore ;
#line 1100 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct rw_semaphore {
   long count ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct lockdep_map dep_map ;
};
#line 1106 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct exception_table_entry {
   int insn ;
   int fixup ;
};
#line 1110 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 1114 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};
#line 1118
struct hrtimer_clock_base ;
#line 1119
struct hrtimer_cpu_base ;
#line 1120
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
} ;
#line 1124 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer * ) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};
#line 1134 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t resolution ;
   ktime_t (*get_time)(void) ;
   ktime_t softirq_time ;
   ktime_t offset ;
};
#line 1144 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int active_bases ;
   unsigned int clock_was_set ;
   ktime_t expires_next ;
   int hres_active ;
   int hang_detected ;
   unsigned long nr_events ;
   unsigned long nr_retries ;
   unsigned long nr_hangs ;
   ktime_t max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};
#line 1157
struct klist_node ;
#line 1158 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 1163
struct path ;
#line 1164 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations  const  *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};
#line 1179 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct seq_operations {
   void *(*start)(struct seq_file * , loff_t * ) ;
   void (*stop)(struct seq_file * , void * ) ;
   void *(*next)(struct seq_file * , void * , loff_t * ) ;
   int (*show)(struct seq_file * , void * ) ;
};
#line 1185
struct pinctrl ;
#line 1186
struct pinctrl_state ;
#line 1187 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};
#line 1193
struct dma_map_ops ;
#line 1194 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 1198
struct device_private ;
#line 1199
struct device_driver ;
#line 1200
struct driver_private ;
#line 1201
struct class ;
#line 1202
struct subsys_private ;
#line 1203
struct bus_type ;
#line 1204
struct iommu_ops ;
#line 1205
struct iommu_group ;
#line 1206
struct device_attribute ;
#line 1207 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct bus_type {
   char const   *name ;
   char const   *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group  const  **bus_groups ;
   struct attribute_group  const  **dev_groups ;
   struct attribute_group  const  **drv_groups ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*online)(struct device * ) ;
   int (*offline)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};
#line 1229
struct device_type ;
#line 1230 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   struct of_device_id  const  *of_match_table ;
   struct acpi_device_id  const  *acpi_match_table ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 1247
struct class_attribute ;
#line 1248 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group  const  **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct subsys_private *p ;
};
#line 1265 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
};
#line 1270 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * , kuid_t * , kgid_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 1278 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 1284 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 1288
struct acpi_device ;
#line 1289 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct acpi_dev_node {
   struct acpi_device *companion ;
};
#line 1292
struct dma_coherent_mem ;
#line 1293 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type  const  *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct acpi_dev_node acpi_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
   struct iommu_group *iommu_group ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
};
#line 1327 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct wakeup_source {
   char const   *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 1346
struct hlist_bl_node ;
#line 1347 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 1350 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 1354 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_139 {
   spinlock_t lock ;
   unsigned int count ;
};
#line 1358 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_138 {
   struct __anonstruct____missing_field_name_139 __annonCompField34 ;
};
#line 1361 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct lockref {
   union __anonunion____missing_field_name_138 __annonCompField35 ;
};
#line 1364
struct nameidata ;
#line 1365
struct vfsmount ;
#line 1366 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_141 {
   u32 hash ;
   u32 len ;
};
#line 1370 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_140 {
   struct __anonstruct____missing_field_name_141 __annonCompField36 ;
   u64 hash_len ;
};
#line 1374 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct qstr {
   union __anonunion____missing_field_name_140 __annonCompField37 ;
   unsigned char const   *name ;
};
#line 1378
struct dentry_operations ;
#line 1379 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_d_u_142 {
   struct list_head d_child ;
   struct callback_head d_rcu ;
};
#line 1383 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   union __anonunion_d_u_142 d_u ;
   struct list_head d_subdirs ;
   struct hlist_node d_alias ;
};
#line 1401 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_weak_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_hash)(struct dentry  const  * , struct qstr * ) ;
   int (*d_compare)(struct dentry  const  * , struct dentry  const  * , unsigned int  ,
                    char const   * , struct qstr  const  * ) ;
   int (*d_delete)(struct dentry  const  * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_prune)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
   struct vfsmount *(*d_automount)(struct path * ) ;
   int (*d_manage)(struct dentry * , bool  ) ;
};
#line 1415 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 1419 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct list_lru_node {
   spinlock_t lock ;
   struct list_head list ;
   long nr_items ;
};
#line 1424 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct list_lru {
   struct list_lru_node *node ;
   nodemask_t active_nodes ;
};
#line 1428
struct radix_tree_node ;
#line 1429 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 1434
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 1440
struct pid_namespace ;
#line 1441 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 1446 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 1453 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};
#line 1457 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 1460 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct kernel_cap_struct kernel_cap_t;
#line 1461 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 1469 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   nodemask_t nodes_to_scan ;
   int nid ;
};
#line 1475 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker * , struct shrink_control * ) ;
   unsigned long (*scan_objects)(struct shrinker * , struct shrink_control * ) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};
#line 1484
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
} ;
#line 1489
struct block_device ;
#line 1490
struct io_context ;
#line 1491
struct export_operations ;
#line 1492
struct iovec ;
#line 1493
struct kiocb ;
#line 1494
struct pipe_inode_info ;
#line 1495
struct poll_table_struct ;
#line 1496
struct kstatfs ;
#line 1497
struct cred ;
#line 1498
struct swap_info_struct ;
#line 1499 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 1510 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 1516 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct fs_disk_quota {
   __s8 d_version ;
   __s8 d_flags ;
   __u16 d_fieldmask ;
   __u32 d_id ;
   __u64 d_blk_hardlimit ;
   __u64 d_blk_softlimit ;
   __u64 d_ino_hardlimit ;
   __u64 d_ino_softlimit ;
   __u64 d_bcount ;
   __u64 d_icount ;
   __s32 d_itimer ;
   __s32 d_btimer ;
   __u16 d_iwarns ;
   __u16 d_bwarns ;
   __s32 d_padding2 ;
   __u64 d_rtb_hardlimit ;
   __u64 d_rtb_softlimit ;
   __u64 d_rtbcount ;
   __s32 d_rtbtimer ;
   __u16 d_rtbwarns ;
   __s16 d_padding3 ;
   char d_padding4[8U] ;
};
#line 1540 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct fs_qfilestat {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
};
#line 1545 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct fs_qfilestat fs_qfilestat_t;
#line 1546 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct fs_quota_stat {
   __s8 qs_version ;
   __u16 qs_flags ;
   __s8 qs_pad ;
   fs_qfilestat_t qs_uquota ;
   fs_qfilestat_t qs_gquota ;
   __u32 qs_incoredqs ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
};
#line 1559 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct fs_qfilestatv {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
   __u32 qfs_pad ;
};
#line 1565 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct fs_quota_statv {
   __s8 qs_version ;
   __u8 qs_pad1 ;
   __u16 qs_flags ;
   __u32 qs_incoredqs ;
   struct fs_qfilestatv qs_uquota ;
   struct fs_qfilestatv qs_gquota ;
   struct fs_qfilestatv qs_pquota ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
   __u64 qs_pad2[8U] ;
};
#line 1580
struct dquot ;
#line 1581 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __kernel_uid32_t projid_t;
#line 1582 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_kprojid_t_144 {
   projid_t val ;
};
#line 1585 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_kprojid_t_144 kprojid_t;
#line 1586 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct if_dqinfo {
   __u64 dqi_bgrace ;
   __u64 dqi_igrace ;
   __u32 dqi_flags ;
   __u32 dqi_valid ;
};
#line 1592
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
} ;
#line 1597 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef long long qsize_t;
#line 1598 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_145 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 1603 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kqid {
   union __anonunion____missing_field_name_145 __annonCompField38 ;
   enum quota_type type ;
};
#line 1607 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};
#line 1618
struct quota_format_type ;
#line 1619 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_maxblimit ;
   qsize_t dqi_maxilimit ;
   void *dqi_priv ;
};
#line 1630 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 1644 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block * , int  ) ;
   int (*read_file_info)(struct super_block * , int  ) ;
   int (*write_file_info)(struct super_block * , int  ) ;
   int (*free_file_info)(struct super_block * , int  ) ;
   int (*read_dqblk)(struct dquot * ) ;
   int (*commit_dqblk)(struct dquot * ) ;
   int (*release_dqblk)(struct dquot * ) ;
};
#line 1653 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct dquot_operations {
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   qsize_t *(*get_reserved_space)(struct inode * ) ;
};
#line 1663 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , struct path * ) ;
   int (*quota_on_meta)(struct super_block * , int  , int  ) ;
   int (*quota_off)(struct super_block * , int  ) ;
   int (*quota_sync)(struct super_block * , int  ) ;
   int (*get_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*set_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*get_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*set_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*get_xstate)(struct super_block * , struct fs_quota_stat * ) ;
   int (*set_xstate)(struct super_block * , unsigned int  , int  ) ;
   int (*get_xstatev)(struct super_block * , struct fs_quota_statv * ) ;
};
#line 1676 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops  const  *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 1682 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct rw_semaphore dqptr_sem ;
   struct inode *files[2U] ;
   struct mem_dqinfo info[2U] ;
   struct quota_format_ops  const  *ops[2U] ;
};
#line 1691
struct address_space ;
#line 1692
struct writeback_control ;
#line 1693 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_arg_147 {
   char *buf ;
   void *data ;
};
#line 1697 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_read_descriptor_t_146 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_147 arg ;
   int error ;
};
#line 1703 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_read_descriptor_t_146 read_descriptor_t;
#line 1704 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct address_space_operations {
   int (*writepage)(struct page * , struct writeback_control * ) ;
   int (*readpage)(struct file * , struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page * ) ;
   int (*readpages)(struct file * , struct address_space * , struct list_head * ,
                    unsigned int  ) ;
   int (*write_begin)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                      unsigned int  , struct page ** , void ** ) ;
   int (*write_end)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                    unsigned int  , struct page * , void * ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned int  , unsigned int  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   void (*freepage)(struct page * ) ;
   ssize_t (*direct_IO)(int  , struct kiocb * , struct iovec  const  * , loff_t  ,
                        unsigned long  ) ;
   int (*get_xip_mem)(struct address_space * , unsigned long  , int  , void ** , unsigned long * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * , enum migrate_mode  ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , read_descriptor_t * , unsigned long  ) ;
   void (*is_dirty_writeback)(struct page * , bool * , bool * ) ;
   int (*error_remove_page)(struct address_space * , struct page * ) ;
   int (*swap_activate)(struct swap_info_struct * , struct file * , sector_t * ) ;
   void (*swap_deactivate)(struct file * ) ;
};
#line 1730 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   unsigned int i_mmap_writable ;
   struct rb_root i_mmap ;
   struct list_head i_mmap_nonlinear ;
   struct mutex i_mmap_mutex ;
   unsigned long nrpages ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   struct backing_dev_info *backing_dev_info ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};
#line 1747
struct request_queue ;
#line 1748
struct hd_struct ;
#line 1749
struct gendisk ;
#line 1750 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 1774
struct posix_acl ;
#line 1775
struct inode_operations ;
#line 1776 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_148 {
   unsigned int const   i_nlink ;
   unsigned int __i_nlink ;
};
#line 1780 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_149 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 1784
struct file_lock ;
#line 1785 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_150 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
};
#line 1790 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations  const  *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion____missing_field_name_148 __annonCompField39 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion____missing_field_name_149 __annonCompField40 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   struct file_operations  const  *i_fop ;
   struct file_lock *i_flock ;
   struct address_space i_data ;
   struct dquot *i_dquot[2U] ;
   struct list_head i_devices ;
   union __anonunion____missing_field_name_150 __annonCompField41 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   atomic_t i_readcount ;
   void *i_private ;
};
#line 1837 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 1845 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 1853 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_f_u_151 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 1857 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct file {
   union __anonunion_f_u_151 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   unsigned long f_mnt_write_state ;
};
#line 1879
struct files_struct ;
#line 1880 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct files_struct *fl_owner_t;
#line 1881 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 1885 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock * , struct file_lock * ) ;
   unsigned long (*lm_owner_key)(struct file_lock * ) ;
   void (*lm_notify)(struct file_lock * ) ;
   int (*lm_grant)(struct file_lock * , struct file_lock * , int  ) ;
   void (*lm_break)(struct file_lock * ) ;
   int (*lm_change)(struct file_lock ** , int  ) ;
};
#line 1893
struct nlm_lockowner ;
#line 1894 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 1899
struct nfs4_lock_state ;
#line 1900 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1903
struct fasync_struct ;
#line 1904 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_afs_153 {
   struct list_head link ;
   int state ;
};
#line 1908 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_fl_u_152 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_153 afs ;
};
#line 1913 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct file_lock {
   struct file_lock *fl_next ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations  const  *fl_ops ;
   struct lock_manager_operations  const  *fl_lmops ;
   union __anonunion_fl_u_152 fl_u ;
};
#line 1934 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1942 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};
#line 1949
struct super_operations ;
#line 1950
struct xattr_handler ;
#line 1951
struct mtd_info ;
#line 1952 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations  const  *dq_op ;
   struct quotactl_ops  const  *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler  const  **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations  const  *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
};
#line 1999 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 2005 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct dir_context {
   int (*actor)(void * , char const   * , int  , loff_t  , u64  , unsigned int  ) ;
   loff_t pos ;
};
#line 2009 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*aio_read)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                       loff_t  ) ;
   ssize_t (*aio_write)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                        loff_t  ) ;
   int (*iterate)(struct file * , struct dir_context * ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t  ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , loff_t  , loff_t  , int  ) ;
   int (*aio_fsync)(struct kiocb * , int  ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** ) ;
   long (*fallocate)(struct file * , int  , loff_t  , loff_t  ) ;
   int (*show_fdinfo)(struct seq_file * , struct file * ) ;
};
#line 2044 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct inode_operations {
   struct dentry *(*lookup)(struct inode * , struct dentry * , unsigned int  ) ;
   void *(*follow_link)(struct dentry * , struct nameidata * ) ;
   int (*permission)(struct inode * , int  ) ;
   struct posix_acl *(*get_acl)(struct inode * , int  ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
   int (*create)(struct inode * , struct dentry * , umode_t  , bool  ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , umode_t  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , umode_t  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct vfsmount * , struct dentry * , struct kstat * ) ;
   int (*setxattr)(struct dentry * , char const   * , void const   * , size_t  , int  ) ;
   ssize_t (*getxattr)(struct dentry * , char const   * , void * , size_t  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*removexattr)(struct dentry * , char const   * ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64  , u64  ) ;
   int (*update_time)(struct inode * , struct timespec * , int  ) ;
   int (*atomic_open)(struct inode * , struct dentry * , struct file * , unsigned int  ,
                      umode_t  , int * ) ;
   int (*tmpfile)(struct inode * , struct dentry * , umode_t  ) ;
   int (*set_acl)(struct inode * , struct posix_acl * , int  ) ;
};
#line 2072 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block * ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * , int  ) ;
   int (*write_inode)(struct inode * , struct writeback_control * ) ;
   int (*drop_inode)(struct inode * ) ;
   void (*evict_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block * , int  ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct dentry * ) ;
   int (*show_devname)(struct seq_file * , struct dentry * ) ;
   int (*show_path)(struct seq_file * , struct dentry * ) ;
   int (*show_stats)(struct seq_file * , struct dentry * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
   long (*nr_cached_objects)(struct super_block * , int  ) ;
   long (*free_cached_objects)(struct super_block * , long  , int  ) ;
};
#line 2097 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type * , int  , char const   * , void * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 2113 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 2118 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 2123
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
} ;
#line 2129 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_156 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 2133 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_157 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 2137 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_155 {
   struct __anonstruct____missing_field_name_156 __annonCompField43 ;
   struct __anonstruct____missing_field_name_157 __annonCompField44 ;
};
#line 2141
struct uprobe ;
#line 2142
struct return_instance ;
#line 2143 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion____missing_field_name_155 __annonCompField45 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 2151
struct xol_area ;
#line 2152 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 2155 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_158 {
   struct address_space *mapping ;
   void *s_mem ;
};
#line 2159 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_160 {
   unsigned long index ;
   void *freelist ;
   bool pfmemalloc ;
};
#line 2164 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_164 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 2169 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_163 {
   atomic_t _mapcount ;
   struct __anonstruct____missing_field_name_164 __annonCompField48 ;
   int units ;
};
#line 2174 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_162 {
   union __anonunion____missing_field_name_163 __annonCompField49 ;
   atomic_t _count ;
};
#line 2178 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_161 {
   unsigned long counters ;
   struct __anonstruct____missing_field_name_162 __annonCompField50 ;
   unsigned int active ;
};
#line 2183 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_159 {
   union __anonunion____missing_field_name_160 __annonCompField47 ;
   union __anonunion____missing_field_name_161 __annonCompField51 ;
};
#line 2187 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_166 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 2192
struct slab ;
#line 2193 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_165 {
   struct list_head lru ;
   struct __anonstruct____missing_field_name_166 __annonCompField53 ;
   struct list_head list ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   pgtable_t pmd_huge_pte ;
};
#line 2201 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_167 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};
#line 2207 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct page {
   unsigned long flags ;
   union __anonunion____missing_field_name_158 __annonCompField46 ;
   struct __anonstruct____missing_field_name_159 __annonCompField52 ;
   union __anonunion____missing_field_name_165 __annonCompField54 ;
   union __anonunion____missing_field_name_167 __annonCompField55 ;
   unsigned long debug_flags ;
};
#line 2215 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 2220 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_linear_169 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 2224 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_shared_168 {
   struct __anonstruct_linear_169 linear ;
   struct list_head nonlinear ;
};
#line 2228
struct anon_vma ;
#line 2229
struct mempolicy ;
#line 2230 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   union __anonunion_shared_168 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct  const  *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};
#line 2249 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 2253 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 2258 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};
#line 2262 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};
#line 2265
struct kioctx_table ;
#line 2266
struct linux_binfmt ;
#line 2267
struct mmu_notifier_mm ;
#line 2268 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   struct vm_area_struct *mmap_cache ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
};
#line 2325 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef unsigned long cputime_t;
#line 2326
struct sem_undo_list ;
#line 2327 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 2330 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct_sigset_t_170 {
   unsigned long sig[1U] ;
};
#line 2333 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct __anonstruct_sigset_t_170 sigset_t;
#line 2334
struct siginfo ;
#line 2335 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef void __signalfn_t(int  );
#line 2336 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __signalfn_t *__sighandler_t;
#line 2337 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef void __restorefn_t(void);
#line 2338 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __restorefn_t *__sigrestore_t;
#line 2339 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 2343 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef union sigval sigval_t;
#line 2344 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct__kill_172 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 2348 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct__timer_173 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 2355 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct__rt_174 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 2360 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct__sigchld_175 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 2367 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct__sigfault_176 {
   void *_addr ;
   short _addr_lsb ;
};
#line 2371 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct__sigpoll_177 {
   long _band ;
   int _fd ;
};
#line 2375 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct__sigsys_178 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 2380 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion__sifields_171 {
   int _pad[28U] ;
   struct __anonstruct__kill_172 _kill ;
   struct __anonstruct__timer_173 _timer ;
   struct __anonstruct__rt_174 _rt ;
   struct __anonstruct__sigchld_175 _sigchld ;
   struct __anonstruct__sigfault_176 _sigfault ;
   struct __anonstruct__sigpoll_177 _sigpoll ;
   struct __anonstruct__sigsys_178 _sigsys ;
};
#line 2390 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_171 _sifields ;
};
#line 2396 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct siginfo siginfo_t;
#line 2397
struct user_struct ;
#line 2398 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 2402 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 2408 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct k_sigaction {
   struct sigaction sa ;
};
#line 2411
struct seccomp_filter ;
#line 2412 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 2416
struct rt_mutex_waiter ;
#line 2417 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 2421 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 2430 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 2436
struct nsproxy ;
#line 2437
struct assoc_array_ptr ;
#line 2438 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 2442 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef int32_t key_serial_t;
#line 2443 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef uint32_t key_perm_t;
#line 2444
struct key ;
#line 2445
struct signal_struct ;
#line 2446
struct key_type ;
#line 2447 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct keyring_index_key {
   struct key_type *type ;
   char const   *description ;
   size_t desc_len ;
};
#line 2452 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_183 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 2456
struct key_user ;
#line 2457 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_184 {
   time_t expiry ;
   time_t revoked_at ;
};
#line 2461 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_186 {
   struct key_type *type ;
   char *description ;
};
#line 2465 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_185 {
   struct keyring_index_key index_key ;
   struct __anonstruct____missing_field_name_186 __annonCompField60 ;
};
#line 2469 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_type_data_187 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};
#line 2475 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion_payload_189 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};
#line 2481 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_188 {
   union __anonunion_payload_189 payload ;
   struct assoc_array keys ;
};
#line 2485 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion____missing_field_name_183 __annonCompField58 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion____missing_field_name_184 __annonCompField59 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion____missing_field_name_185 __annonCompField61 ;
   union __anonunion_type_data_187 type_data ;
   union __anonunion____missing_field_name_188 __annonCompField62 ;
};
#line 2504
struct audit_context ;
#line 2505 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};
#line 2512 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};
#line 2541
struct futex_pi_state ;
#line 2542
struct robust_list_head ;
#line 2543
struct bio_list ;
#line 2544
struct fs_struct ;
#line 2545
struct perf_event_context ;
#line 2546
struct blk_plug ;
#line 2547
struct cfs_rq ;
#line 2548
struct task_group ;
#line 2549 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};
#line 2555 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 2564 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};
#line 2570 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};
#line 2574 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};
#line 2579 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct thread_group_cputimer {
   struct task_cputime cputime ;
   int running ;
   raw_spinlock_t lock ;
};
#line 2584
struct autogroup ;
#line 2585
struct tty_struct ;
#line 2586
struct taskstats ;
#line 2587
struct tty_audit_buf ;
#line 2588 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};
#line 2651 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t files ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};
#line 2668
struct reclaim_state ;
#line 2669 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 2675 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   struct timespec blkio_start ;
   struct timespec blkio_end ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   struct timespec freepages_start ;
   struct timespec freepages_end ;
   u64 freepages_delay ;
   u32 freepages_count ;
};
#line 2689 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 2693 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sched_avg {
   u32 runnable_avg_sum ;
   u32 runnable_avg_period ;
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
};
#line 2700 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 2729 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 2745
struct rt_rq ;
#line 2746 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};
#line 2756 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   struct hrtimer dl_timer ;
};
#line 2770
struct mem_cgroup ;
#line 2771 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct memcg_batch_info {
   int do_batch ;
   struct mem_cgroup *memcg ;
   unsigned long nr_pages ;
   unsigned long memsw_nr_pages ;
};
#line 2777 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int may_oom : 1 ;
};
#line 2783
struct sched_class ;
#line 2784
struct css_set ;
#line 2785
struct compat_robust_list_head ;
#line 2786
struct numa_group ;
#line 2787
struct ftrace_ret_stack ;
#line 2788 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct task_struct {
   long volatile   state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class  const  *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   unsigned int brk_randomized : 1 ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned int jobctl ;
   unsigned int personality ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int no_new_privs : 1 ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   struct timespec start_time ;
   struct timespec real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred  const  *real_cred ;
   struct cred  const  *cred ;
   char comm[16U] ;
   int link_count ;
   int total_link_count ;
   struct sysv_sem sysvsem ;
   unsigned long last_switch_count ;
   struct thread_struct thread ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void * ) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct task_struct *pi_top_task ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   int numa_migrate_deferred ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults ;
   unsigned long total_numa_faults ;
   unsigned long *numa_faults_buffer ;
   unsigned long numa_faults_locality[2U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_batch_info memcg_batch ;
   unsigned int memcg_kmem_skip_account ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
};
#line 2986
struct usb_device ;
#line 2987
struct usb_driver ;
#line 2988
struct wusb_dev ;
#line 2989
struct ep_device ;
#line 2990 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct usb_ss_ep_comp_descriptor ss_ep_comp ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
};
#line 3000 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   int extralen ;
   unsigned char *extra ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
};
#line 3007
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
} ;
#line 3013 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned int sysfs_files_created : 1 ;
   unsigned int ep_devs_created : 1 ;
   unsigned int unregistering : 1 ;
   unsigned int needs_remote_wakeup : 1 ;
   unsigned int needs_altsetting0 : 1 ;
   unsigned int needs_binding : 1 ;
   unsigned int reset_running : 1 ;
   unsigned int resetting_device : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   atomic_t pm_usage_cnt ;
   struct work_struct reset_ws ;
};
#line 3033 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0U] ;
};
#line 3038 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[16U] ;
   struct usb_interface *interface[32U] ;
   struct usb_interface_cache *intf_cache[32U] ;
   unsigned char *extra ;
   int extralen ;
};
#line 3047 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_host_bos {
   struct usb_bos_descriptor *desc ;
   struct usb_ext_cap_descriptor *ext_cap ;
   struct usb_ss_cap_descriptor *ss_cap ;
   struct usb_ss_container_id_descriptor *ss_id ;
};
#line 3053 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_devmap {
   unsigned long devicemap[2U] ;
};
#line 3056
struct mon_bus ;
#line 3057 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_bus {
   struct device *controller ;
   int busnum ;
   char const   *bus_name ;
   u8 uses_dma ;
   u8 uses_pio_for_control ;
   u8 otg_port ;
   unsigned int is_b_host : 1 ;
   unsigned int b_hnp_enable : 1 ;
   unsigned int no_stop_on_short : 1 ;
   unsigned int no_sg_constraint : 1 ;
   unsigned int sg_tablesize ;
   int devnum_next ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct usb_bus *hs_companion ;
   struct list_head bus_list ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   unsigned int resuming_ports ;
   struct mon_bus *mon_bus ;
   int monitored ;
};
#line 3081
struct usb_tt ;
#line 3082
enum usb_device_removable {
    USB_DEVICE_REMOVABLE_UNKNOWN = 0,
    USB_DEVICE_REMOVABLE = 1,
    USB_DEVICE_FIXED = 2
} ;
#line 3087 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb2_lpm_parameters {
   unsigned int besl ;
   int timeout ;
};
#line 3091 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb3_lpm_parameters {
   unsigned int mel ;
   unsigned int pel ;
   unsigned int sel ;
   int timeout ;
};
#line 3097 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_device {
   int devnum ;
   char devpath[16U] ;
   u32 route ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2U] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_bos *bos ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16U] ;
   struct usb_host_endpoint *ep_out[16U] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   unsigned int can_submit : 1 ;
   unsigned int persist_enabled : 1 ;
   unsigned int have_langid : 1 ;
   unsigned int authorized : 1 ;
   unsigned int authenticated : 1 ;
   unsigned int wusb : 1 ;
   unsigned int lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_besl_capable : 1 ;
   unsigned int usb2_hw_lpm_enabled : 1 ;
   unsigned int usb2_hw_lpm_allowed : 1 ;
   unsigned int usb3_lpm_enabled : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   int maxchild ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   unsigned long connect_time ;
   unsigned int do_remote_wakeup : 1 ;
   unsigned int reset_resume : 1 ;
   unsigned int port_is_suspended : 1 ;
   struct wusb_dev *wusb_dev ;
   int slot_id ;
   enum usb_device_removable removable ;
   struct usb2_lpm_parameters l1_params ;
   struct usb3_lpm_parameters u1_params ;
   struct usb3_lpm_parameters u2_params ;
   unsigned int lpm_disable_count ;
};
#line 3153 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 3157 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usbdrv_wrap {
   struct device_driver driver ;
   int for_devices ;
};
#line 3161 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_driver {
   char const   *name ;
   int (*probe)(struct usb_interface * , struct usb_device_id  const  * ) ;
   void (*disconnect)(struct usb_interface * ) ;
   int (*unlocked_ioctl)(struct usb_interface * , unsigned int  , void * ) ;
   int (*suspend)(struct usb_interface * , pm_message_t  ) ;
   int (*resume)(struct usb_interface * ) ;
   int (*reset_resume)(struct usb_interface * ) ;
   int (*pre_reset)(struct usb_interface * ) ;
   int (*post_reset)(struct usb_interface * ) ;
   struct usb_device_id  const  *id_table ;
   struct usb_dynids dynids ;
   struct usbdrv_wrap drvwrap ;
   unsigned int no_dynamic_id : 1 ;
   unsigned int supports_autosuspend : 1 ;
   unsigned int disable_hub_initiated_lpm : 1 ;
   unsigned int soft_unbind : 1 ;
};
#line 3179 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_class_driver {
   char *name ;
   char *(*devnode)(struct device * , umode_t * ) ;
   struct file_operations  const  *fops ;
   int minor_base ;
};
#line 3185 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_iso_packet_descriptor {
   unsigned int offset ;
   unsigned int length ;
   unsigned int actual_length ;
   int status ;
};
#line 3191
struct urb ;
#line 3192 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_anchor {
   struct list_head urb_list ;
   wait_queue_head_t wait ;
   spinlock_t lock ;
   atomic_t suspend_wakeups ;
   unsigned int poisoned : 1 ;
};
#line 3199
struct scatterlist ;
#line 3200 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct urb {
   struct kref kref ;
   void *hcpriv ;
   atomic_t use_count ;
   atomic_t reject ;
   int unlinked ;
   struct list_head urb_list ;
   struct list_head anchor_list ;
   struct usb_anchor *anchor ;
   struct usb_device *dev ;
   struct usb_host_endpoint *ep ;
   unsigned int pipe ;
   unsigned int stream_id ;
   int status ;
   unsigned int transfer_flags ;
   void *transfer_buffer ;
   dma_addr_t transfer_dma ;
   struct scatterlist *sg ;
   int num_mapped_sgs ;
   int num_sgs ;
   u32 transfer_buffer_length ;
   u32 actual_length ;
   unsigned char *setup_packet ;
   dma_addr_t setup_dma ;
   int start_frame ;
   int number_of_packets ;
   int interval ;
   int error_count ;
   void *context ;
   void (*complete)(struct urb * ) ;
   struct usb_iso_packet_descriptor iso_frame_desc[0U] ;
};
#line 3232 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *page ;
};
#line 3238 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct * ) ;
   void (*close)(struct vm_area_struct * ) ;
   int (*fault)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*page_mkwrite)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*access)(struct vm_area_struct * , unsigned long  , void * , int  , int  ) ;
   int (*set_policy)(struct vm_area_struct * , struct mempolicy * ) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct * , unsigned long  ) ;
   int (*migrate)(struct vm_area_struct * , nodemask_t const   * , nodemask_t const   * ,
                  unsigned long  ) ;
   int (*remap_pages)(struct vm_area_struct * , unsigned long  , unsigned long  ,
                      unsigned long  ) ;
};
#line 3251 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 3256 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct poll_table_struct {
   void (*_qproc)(struct file * , wait_queue_head_t * , struct poll_table_struct * ) ;
   unsigned long _key ;
};
#line 3260 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kmem_cache_cpu {
   void **freelist ;
   unsigned long tid ;
   struct page *page ;
   struct page *partial ;
   unsigned int stat[26U] ;
};
#line 3267 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 3270
struct memcg_cache_params ;
#line 3271
struct kmem_cache_node ;
#line 3272 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kmem_cache {
   struct kmem_cache_cpu *cpu_slab ;
   unsigned long flags ;
   unsigned long min_partial ;
   int size ;
   int object_size ;
   int offset ;
   int cpu_partial ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   int reserved ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   struct memcg_cache_params *memcg_params ;
   int max_attr_size ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1024U] ;
};
#line 3297 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_193 {
   struct callback_head callback_head ;
   struct kmem_cache *memcg_caches[0U] ;
};
#line 3301 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct __anonstruct____missing_field_name_194 {
   struct mem_cgroup *memcg ;
   struct list_head list ;
   struct kmem_cache *root_cache ;
   bool dead ;
   atomic_t nr_pages ;
   struct work_struct destroy ;
};
#line 3309 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_192 {
   struct __anonstruct____missing_field_name_193 __annonCompField64 ;
   struct __anonstruct____missing_field_name_194 __annonCompField65 ;
};
#line 3313 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct memcg_cache_params {
   bool is_root_cache ;
   union __anonunion____missing_field_name_192 __annonCompField66 ;
};
#line 3317 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __u64 Elf64_Addr;
#line 3318 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __u16 Elf64_Half;
#line 3319 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __u32 Elf64_Word;
#line 3320 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef __u64 Elf64_Xword;
#line 3321 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 3329 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
typedef struct elf64_sym Elf64_Sym;
#line 3330
struct kernel_param ;
#line 3331 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 3337
struct kparam_string ;
#line 3338
struct kparam_array ;
#line 3339 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
union __anonunion____missing_field_name_199 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 3344 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kernel_param {
   char const   *name ;
   struct kernel_param_ops  const  *ops ;
   u16 perm ;
   s16 level ;
   union __anonunion____missing_field_name_199 __annonCompField67 ;
};
#line 3351 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 3355 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   void *elem ;
};
#line 3362
struct tracepoint ;
#line 3363 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct tracepoint_func {
   void *func ;
   void *data ;
};
#line 3367 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct tracepoint {
   char const   *name ;
   struct static_key key ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 3374 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct mod_arch_specific {

};
#line 3376
struct module_param_attrs ;
#line 3377 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};
#line 3384 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 3393
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
} ;
#line 3399 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct module_ref {
   unsigned long incs ;
   unsigned long decs ;
};
#line 3403
struct module_sect_attrs ;
#line 3404
struct module_notes_attrs ;
#line 3405
struct ftrace_event_call ;
#line 3406 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   bool sig_ok ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint **tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const   **trace_bprintk_fmt_start ;
   struct ftrace_event_call **trace_events ;
   unsigned int num_trace_events ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 3477 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct adu_device {
   struct mutex mtx ;
   struct usb_device *udev ;
   struct usb_interface *interface ;
   unsigned int minor ;
   char serial_number[8U] ;
   int open_count ;
   char *read_buffer_primary ;
   int read_buffer_length ;
   char *read_buffer_secondary ;
   int secondary_head ;
   int secondary_tail ;
   spinlock_t buflock ;
   wait_queue_head_t read_wait ;
   wait_queue_head_t write_wait ;
   char *interrupt_in_buffer ;
   struct usb_endpoint_descriptor *interrupt_in_endpoint ;
   struct urb *interrupt_in_urb ;
   int read_urb_finished ;
   char *interrupt_out_buffer ;
   struct usb_endpoint_descriptor *interrupt_out_endpoint ;
   struct urb *interrupt_out_urb ;
   int out_urb_finished ;
};
#line 3501 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct ldv_struct_insmod_4 {
   int signal_pending ;
};
#line 3504 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct ldv_struct_usb_scenario_3 {
   struct usb_driver *arg0 ;
   int signal_pending ;
};
#line 3508 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct device_private {
   void *driver_data ;
};
#line 3512
struct kthread_work ;
#line 3513 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 3519 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work * ) ;
   wait_queue_head_t done ;
   struct kthread_worker *worker ;
};
#line 3525
struct spi_master ;
#line 3526 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};
#line 3539
struct spi_message ;
#line 3540
struct spi_transfer ;
#line 3541 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device * ) ;
   int (*transfer)(struct spi_device * , struct spi_message * ) ;
   void (*cleanup)(struct spi_device * ) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   struct completion xfer_completion ;
   int (*prepare_transfer_hardware)(struct spi_master * ) ;
   int (*transfer_one_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_transfer_hardware)(struct spi_master * ) ;
   int (*prepare_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_message)(struct spi_master * , struct spi_message * ) ;
   void (*set_cs)(struct spi_device * , bool  ) ;
   int (*transfer_one)(struct spi_master * , struct spi_device * , struct spi_transfer * ) ;
   int *cs_gpios ;
};
#line 3580 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct spi_transfer {
   void const   *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};
#line 3594 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void * ) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};
/* compiler builtin: 
   void __builtin_va_copy(__builtin_va_list  , __builtin_va_list  ) ;  */
/* compiler builtin: 
   void *__builtin_frob_return_address(void * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_and_and_fetch(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_or(...) ;  */
/* compiler builtin: 
   int __builtin_popcountll(unsigned long long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch(...) ;  */
/* compiler builtin: 
   float __builtin_atanf(float  ) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_addps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   unsigned long __builtin_strcspn(char const   * , char const   * ) ;  */
/* compiler builtin: 
   float __builtin_asinf(float  ) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_maxps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_unpckhps(float __attribute__((____vector_size____(16)))   ,
                                                                           float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   double __builtin_acos(double  ) ;  */
/* compiler builtin: 
   int __builtin___sprintf_chk(char * , int  , unsigned long  , char const   *  , ...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch_16(...) ;  */
/* compiler builtin: 
   double __builtin_cosh(double  ) ;  */
/* compiler builtin: 
   float __builtin_tanhf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand_16(...) ;  */
/* compiler builtin: 
   void *__builtin_mempcpy(void * , void const   * , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch_1(...) ;  */
/* compiler builtin: 
   long double __builtin_sqrtl(long double  ) ;  */
/* compiler builtin: 
   int __builtin_parity(unsigned int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or(...) ;  */
/* compiler builtin: 
   long double __builtin_coshl(long double  ) ;  */
/* compiler builtin: 
   long double __builtin_cosl(long double  ) ;  */
/* compiler builtin: 
   float __builtin_cosf(float  ) ;  */
/* compiler builtin: 
   void __sync_synchronize(...) ;  */
/* compiler builtin: 
   long double __builtin_acosl(long double  ) ;  */
/* compiler builtin: 
   void *__builtin___mempcpy_chk(void * , void const   * , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_or_and_fetch(...) ;  */
/* compiler builtin: 
   int __builtin_clz(unsigned int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch_4(...) ;  */
/* compiler builtin: 
   double __builtin_log10(double  ) ;  */
/* compiler builtin: 
   char *__builtin___strcat_chk(char * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   float __builtin_modff(float  , float * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch_4(...) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_n(...) ;  */
/* compiler builtin: 
   double __builtin_sin(double  ) ;  */
/* compiler builtin: 
   double __builtin_frexp(double  , int * ) ;  */
/* compiler builtin: 
   float __builtin_acosf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_add_and_fetch(...) ;  */
/* compiler builtin: 
   long double __builtin_sinhl(long double  ) ;  */
/* compiler builtin: 
   char *__builtin___stpcpy_chk(char * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   void __atomic_signal_fence(int  ) ;  */
/* compiler builtin: 
   double __builtin_fabs(double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch_16(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_nand(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch_2(...) ;  */
/* compiler builtin: 
   void __atomic_thread_fence(int  ) ;  */
/* compiler builtin: 
   void __atomic_store_16(...) ;  */
/* compiler builtin: 
   void __builtin_va_start(__builtin_va_list  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and_8(...) ;  */
/* compiler builtin: 
   short __builtin_bswap16(short  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch_2(...) ;  */
/* compiler builtin: 
   _Bool __atomic_test_and_set(void * , int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add_8(...) ;  */
/* compiler builtin: 
   int __builtin_ctz(unsigned int  ) ;  */
/* compiler builtin: 
   char *__builtin_strpbrk(char const   * , char const   * ) ;  */
/* compiler builtin: 
   char *__builtin_strcpy(char * , char const   * ) ;  */
/* compiler builtin: 
   double __builtin_sqrt(double  ) ;  */
/* compiler builtin: 
   __builtin_va_list __builtin_next_arg(void) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_16(...) ;  */
/* compiler builtin: 
   void __atomic_clear(_Bool * , int  ) ;  */
/* compiler builtin: 
   void __atomic_store(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch_2(...) ;  */
/* compiler builtin: 
   float __builtin_log10f(float  ) ;  */
/* compiler builtin: 
   long double __builtin_fabsl(long double  ) ;  */
/* compiler builtin: 
   long double __builtin_floorl(long double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch(...) ;  */
/* compiler builtin: 
   float __builtin_floorf(float  ) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_4(...) ;  */
/* compiler builtin: 
   void *__builtin_memcpy(void * , void const   * , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_sub_and_fetch(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_nand_and_fetch(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_16(...) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_subps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   int __builtin_parityll(unsigned long long  ) ;  */
/* compiler builtin: 
   void __builtin_va_end(__builtin_va_list  ) ;  */
/* compiler builtin: 
   void __builtin_bzero(void * , unsigned long  ) ;  */
/* compiler builtin: 
   _Bool __atomic_always_lock_free(unsigned long  , void * ) ;  */
/* compiler builtin: 
   int __builtin_strncmp(char const   * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch_16(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_xor_and_fetch(...) ;  */
/* compiler builtin: 
   int __builtin___vsprintf_chk(char * , int  , unsigned long  , char const   * ,
                                __builtin_va_list  ) ;  */
/* compiler builtin: 
   float __builtin_sqrtf(float  ) ;  */
/* compiler builtin: 
   double __builtin_nans(char const   * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor_8(...) ;  */
/* compiler builtin: 
   double __builtin_exp(double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_1(...) ;  */
/* compiler builtin: 
   int __builtin_strcmp(char const   * , char const   * ) ;  */
/* compiler builtin: 
   float __builtin_ldexpf(float  , int  ) ;  */
/* compiler builtin: 
   float __builtin_powif(float  , int  ) ;  */
/* compiler builtin: 
   long double __builtin_log10l(long double  ) ;  */
/* compiler builtin: 
   void *__builtin___memmove_chk(void * , void const   * , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_and(...) ;  */
/* compiler builtin: 
   void *__builtin_return_address(unsigned int  ) ;  */
/* compiler builtin: 
   void __atomic_feraiseexcept(int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch_4(...) ;  */
/* compiler builtin: 
   float __builtin_fabsf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch_1(...) ;  */
/* compiler builtin: 
   unsigned long __builtin_object_size(void * , int  ) ;  */
/* compiler builtin: 
   void *__builtin_alloca(unsigned long  ) ;  */
/* compiler builtin: 
   int __builtin_va_arg_pack_len(void) ;  */
/* compiler builtin: 
   long double __builtin_tanl(long double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and_2(...) ;  */
/* compiler builtin: 
   void __sync_lock_release(...) ;  */
/* compiler builtin: 
   long double __builtin_modfl(long double  , long double * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand_8(...) ;  */
/* compiler builtin: 
   char *__builtin_stpcpy(char * , char const   * ) ;  */
/* compiler builtin: 
   long double __builtin_sinl(long double  ) ;  */
/* compiler builtin: 
   double __builtin_asin(double  ) ;  */
/* compiler builtin: 
   float __builtin_sinhf(float  ) ;  */
/* compiler builtin: 
   int __builtin_ctzl(unsigned long  ) ;  */
/* compiler builtin: 
   long double __builtin_tanhl(long double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add(...) ;  */
/* compiler builtin: 
   long __builtin_bswap64(long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand_2(...) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_mulps(float __attribute__((____vector_size____(16)))   ,
                                                                        float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   double __builtin_tan(double  ) ;  */
/* compiler builtin: 
   char *__builtin_strncpy(char * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   float __builtin_inff(void) ;  */
/* compiler builtin: 
   void *__builtin___memset_chk(void * , int  , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_n(...) ;  */
/* compiler builtin: 
   double __builtin_huge_val(void) ;  */
/* compiler builtin: 
   int __builtin_clzl(unsigned long  ) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_16(...) ;  */
/* compiler builtin: 
   float __builtin_frexpf(float  , int * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_n(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or_1(...) ;  */
/* compiler builtin: 
   long double __builtin_fmodl(long double  ) ;  */
/* compiler builtin: 
   double __builtin_atan(double  ) ;  */
/* compiler builtin: 
   int __builtin___fprintf_chk(void * , int  , char const   *  , ...) ;  */
/* compiler builtin: 
   float __builtin_ceilf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add_1(...) ;  */
/* compiler builtin: 
   void __builtin_return(void const   * ) ;  */
/* compiler builtin: 
   long double __builtin_asinl(long double  ) ;  */
/* compiler builtin: 
   int __builtin_ffsll(unsigned long long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub_1(...) ;  */
/* compiler builtin: 
   int __builtin_va_arg_pack(void) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or_4(...) ;  */
/* compiler builtin: 
   char *__builtin___strncpy_chk(char * , char const   * , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   double __builtin_powi(double  , int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_2(...) ;  */
/* compiler builtin: 
   char *__builtin_strchr(char * , int  ) ;  */
/* compiler builtin: 
   char *__builtin___strncat_chk(char * , char const   * , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   void __atomic_store_2(...) ;  */
/* compiler builtin: 
   long double __builtin_huge_vall(void) ;  */
/* compiler builtin: 
   int __builtin_ffsl(unsigned long  ) ;  */
/* compiler builtin: 
   int __builtin___vprintf_chk(int  , char const   * , __builtin_va_list  ) ;  */
/* compiler builtin: 
   float __attribute__((____vector_size____(16)))  __builtin_ia32_unpcklps(float __attribute__((____vector_size____(16)))   ,
                                                                           float __attribute__((____vector_size____(16)))   ) ;  */
/* compiler builtin: 
   char *__builtin_strncat(char * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   int __builtin_ctzll(unsigned long long  ) ;  */
/* compiler builtin: 
   void __builtin_stdarg_start(__builtin_va_list  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_xor(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and_4(...) ;  */
/* compiler builtin: 
   long double __builtin_frexpl(long double  , int * ) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange(...) ;  */
/* compiler builtin: 
   float __builtin_tanf(float  ) ;  */
/* compiler builtin: 
   long double __builtin_logl(long double  ) ;  */
/* compiler builtin: 
   void __builtin_va_arg(__builtin_va_list  , unsigned long  , void * ) ;  */
/* compiler builtin: 
   long __builtin_expect(long  , long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_1(...) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_1(...) ;  */
/* compiler builtin: 
   int __builtin___printf_chk(int  , char const   *  , ...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor_2(...) ;  */
/* compiler builtin: 
   int __builtin___vfprintf_chk(void * , int  , char const   * , __builtin_va_list  ) ;  */
/* compiler builtin: 
   void __builtin_prefetch(void const   *  , ...) ;  */
/* compiler builtin: 
   long double __builtin_nansl(char const   * ) ;  */
/* compiler builtin: 
   double __builtin_fmod(double  ) ;  */
/* compiler builtin: 
   void __atomic_load(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch_16(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch_16(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_val_compare_and_swap(...) ;  */
/* compiler builtin: 
   void __atomic_store_4(...) ;  */
/* compiler builtin: 
   double __builtin_tanh(double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_nand_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add_16(...) ;  */
/* compiler builtin: 
   void __builtin_unreachable(void) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_2(...) ;  */
/* compiler builtin: 
   long double __builtin_ldexpl(long double  , int  ) ;  */
/* compiler builtin: 
   void *__builtin_apply(void (*)() , void * , unsigned long  ) ;  */
/* compiler builtin: 
   float __builtin_sinf(float  ) ;  */
/* compiler builtin: 
   double __builtin_ceil(double  ) ;  */
/* compiler builtin: 
   void __atomic_exchange(...) ;  */
/* compiler builtin: 
   long double __builtin_powil(long double  , int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch_8(...) ;  */
/* compiler builtin: 
   long double __builtin_expl(long double  ) ;  */
/* compiler builtin: 
   int __builtin_constant_p(int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub_16(...) ;  */
/* compiler builtin: 
   double __builtin_log(double  ) ;  */
/* compiler builtin: 
   float __builtin_expf(float  ) ;  */
/* compiler builtin: 
   int __builtin_types_compatible_p(unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   long double __builtin_atan2l(long double  , long double  ) ;  */
/* compiler builtin: 
   void *__builtin_apply_args(void) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_exchange_2(...) ;  */
/* compiler builtin: 
   float __builtin_logf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch_2(...) ;  */
/* compiler builtin: 
   unsigned long __builtin_strlen(char const   * ) ;  */
/* compiler builtin: 
   int __builtin_ffs(unsigned int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor_16(...) ;  */
/* compiler builtin: 
   double __builtin_inf(void) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or_16(...) ;  */
/* compiler builtin: 
   void *__builtin___memcpy_chk(void * , void const   * , unsigned long  , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_4(...) ;  */
/* compiler builtin: 
   void __atomic_store_n(...) ;  */
/* compiler builtin: 
   void __builtin_trap(void) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add_4(...) ;  */
/* compiler builtin: 
   int __builtin_parityl(unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch_2(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_lock_test_and_set(...) ;  */
/* compiler builtin: 
   unsigned long __builtin_strspn(char const   * , char const   * ) ;  */
/* compiler builtin: 
   void __builtin_varargs_start(__builtin_va_list  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_and_16(...) ;  */
/* compiler builtin: 
   _Bool __atomic_compare_exchange_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_nand_fetch(...) ;  */
/* compiler builtin: 
   double __builtin_nan(char const   * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_load_8(...) ;  */
/* compiler builtin: 
   int __builtin___snprintf_chk(char * , unsigned long  , int  , unsigned long  ,
                                char const   *  , ...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub_2(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch(...) ;  */
/* compiler builtin: 
   long double __builtin_atanl(long double  ) ;  */
/* compiler builtin: 
   int __builtin_clzll(unsigned long long  ) ;  */
/* compiler builtin: 
   float __builtin_huge_valf(void) ;  */
/* compiler builtin: 
   float __builtin_coshf(float  ) ;  */
/* compiler builtin: 
   float __builtin_nansf(char const   * ) ;  */
/* compiler builtin: 
   void __atomic_store_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_add(...) ;  */
/* compiler builtin: 
   int __builtin___vsnprintf_chk(char * , unsigned long  , int  , unsigned long  ,
                                 char const   * , __builtin_va_list  ) ;  */
/* compiler builtin: 
   float __builtin_nanf(char const   * ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_or_fetch_2(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_xor_4(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub_8(...) ;  */
/* compiler builtin: 
   _Bool __sync_bool_compare_and_swap(...) ;  */
/* compiler builtin: 
   double __builtin_atan2(double  , double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __builtin_tgmath(...) ;  */
/* compiler builtin: 
   int __builtin_popcountl(unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch_1(...) ;  */
/* compiler builtin: 
   long double __builtin_ceill(long double  ) ;  */
/* compiler builtin: 
   void __atomic_store_1(...) ;  */
/* compiler builtin: 
   char *__builtin___strcpy_chk(char * , char const   * , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_xor_fetch_1(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_or_2(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_sub_fetch_16(...) ;  */
/* compiler builtin: 
   double __builtin_floor(double  ) ;  */
/* compiler builtin: 
   double __builtin_cos(double  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __sync_fetch_and_sub(...) ;  */
/* compiler builtin: 
   void *__builtin_memset(void * , int  , int  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_add_2(...) ;  */
/* compiler builtin: 
   long double __builtin_nanl(char const   * ) ;  */
/* compiler builtin: 
   float __builtin_atan2f(float  , float  ) ;  */
/* compiler builtin: 
   _Bool __atomic_is_lock_free(unsigned long  , void * ) ;  */
/* compiler builtin: 
   int __builtin_popcount(unsigned int  ) ;  */
/* compiler builtin: 
   double __builtin_sinh(double  ) ;  */
/* compiler builtin: 
   void __builtin_bcopy(void const   * , void * , unsigned long  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_and_fetch_8(...) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_fetch_sub(...) ;  */
/* compiler builtin: 
   void *__builtin_extract_return_addr(void * ) ;  */
/* compiler builtin: 
   int __builtin_bswap32(int  ) ;  */
/* compiler builtin: 
   double __builtin_ldexp(double  , int  ) ;  */
/* compiler builtin: 
   long double __builtin_infl(void) ;  */
/* compiler builtin: 
   float __builtin_fmodf(float  ) ;  */
/* compiler builtin: 
   void __attribute__((__overloaded__))  __atomic_add_fetch_4(...) ;  */
/* compiler builtin: 
   void *__builtin_frame_address(unsigned int  ) ;  */
#line 2 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
extern void abort(void) ;
#line 2 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
void __VERIFIER_error(void) 
{ 


  {
  {
#line 2
  abort();
  }
#line 2
  return;
}
}
#line 9 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
void __VERIFIER_assume(int expression ) 
{ 


  {
#line 9
  if (! expression) {
    LOOP: 
#line 9
    goto LOOP;
  }
#line 9
  return;
}
}
#line 15 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
_Bool __VERIFIER_nondet_bool(void) 
{ 
  _Bool val ;

  {
#line 15
  return (val);
}
}
#line 16 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
char __VERIFIER_nondet_char(void) 
{ 
  char val ;

  {
#line 16
  return (val);
}
}
#line 18 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
int __VERIFIER_nondet_int(void) 
{ 
  int val ;

  {
#line 18
  return (val);
}
}
#line 19 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
float __VERIFIER_nondet_float(void) 
{ 
  float val ;

  {
#line 19
  return (val);
}
}
#line 20 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
double __VERIFIER_nondet_double(void) 
{ 
  double val ;

  {
#line 20
  return (val);
}
}
#line 22 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
long __VERIFIER_nondet_long(void) 
{ 
  long val ;

  {
#line 22
  return (val);
}
}
#line 23 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
char *__VERIFIER_nondet_pchar(void) 
{ 
  char *val ;

  {
#line 23
  return (val);
}
}
#line 26 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
short __VERIFIER_nondet_short(void) 
{ 
  short val ;

  {
#line 26
  return (val);
}
}
#line 29 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
unsigned char __VERIFIER_nondet_uchar(void) 
{ 
  unsigned char val ;

  {
#line 29
  return (val);
}
}
#line 30 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
unsigned int __VERIFIER_nondet_uint(void) 
{ 
  unsigned int val ;

  {
#line 30
  return (val);
}
}
#line 31 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
unsigned long __VERIFIER_nondet_ulong(void) 
{ 
  unsigned long val ;

  {
#line 31
  return (val);
}
}
#line 32 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
unsigned int __VERIFIER_nondet_unsigned(void) 
{ 
  unsigned int val ;

  {
#line 32
  return (val);
}
}
#line 33 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
unsigned short __VERIFIER_nondet_ushort(void) 
{ 
  unsigned short val ;

  {
#line 33
  return (val);
}
}
#line 35 "/home/simmo/dev/goblint/sv-comp/goblint/includes/sv-comp.c"
void *__VERIFIER_nondet_pointer(void) 
{ 
  void *val ;

  {
#line 35
  return (val);
}
}
#line 32 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
extern int ( __attribute__((__nonnull__(1,3))) pthread_create)(pthread_t * __restrict  __newthread ,
                                                               pthread_attr_t const   * __restrict  __attr ,
                                                               void *(*__start_routine)(void * ) ,
                                                               void * __restrict  __arg )  __attribute__((__nothrow__)) ;
#line 36
extern void pthread_exit(void *__retval )  __attribute__((__noreturn__)) ;
#line 37
extern int pthread_join(pthread_t __th , void **__thread_return ) ;
#line 38
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutex_init)(pthread_mutex_t *__mutex ,
                                                                           pthread_mutexattr_t const   *__mutexattr )  __attribute__((__nothrow__)) ;
#line 41
extern int ( __attribute__((__nonnull__(1), __leaf__)) pthread_mutex_destroy)(pthread_mutex_t *__mutex )  __attribute__((__nothrow__)) ;
#line 43
extern int ( __attribute__((__nonnull__(1))) pthread_mutex_trylock)(pthread_mutex_t *__mutex )  __attribute__((__nothrow__)) ;
#line 45
extern int ( __attribute__((__nonnull__(1))) pthread_mutex_lock)(pthread_mutex_t *__mutex )  __attribute__((__nothrow__)) ;
#line 47
extern int ( __attribute__((__nonnull__(1))) pthread_mutex_unlock)(pthread_mutex_t *__mutex )  __attribute__((__nothrow__)) ;
#line 3606
long ldv__builtin_expect(long exp , long c ) ;
#line 3607
void *ldv_dev_get_drvdata(struct device  const  *dev ) ;
#line 3608
int ldv_dev_set_drvdata(struct device *dev , void *data ) ;
#line 3609
void *ldv_kzalloc(size_t size , gfp_t flags ) ;
#line 3610
static void ldv_mutex_lock_61(struct mutex *ldv_func_arg1 ) ;
#line 3611
static void ldv_mutex_lock_83(struct mutex *ldv_func_arg1 ) ;
#line 3612
static void ldv_mutex_lock_85(struct mutex *ldv_func_arg1 ) ;
#line 3613
static int ldv_mutex_lock_interruptible_59(struct mutex *ldv_func_arg1 ) ;
#line 3614
static int ldv_mutex_lock_interruptible_63(struct mutex *ldv_func_arg1 ) ;
#line 3615
static int ldv_mutex_lock_interruptible_75(struct mutex *ldv_func_arg1 ) ;
#line 3616
static int ldv_mutex_lock_interruptible_79(struct mutex *ldv_func_arg1 ) ;
#line 3617
int ldv_mutex_lock_interruptible_or_killable_adutux_mutex(struct mutex *lock ) ;
#line 3618
void ldv_mutex_lock_adutux_mutex(struct mutex *lock ) ;
#line 3619
void ldv_mutex_unlock_adutux_mutex(struct mutex *lock ) ;
#line 3620
int ldv_mutex_lock_interruptible_or_killable_mtx_of_adu_device(struct mutex *lock ) ;
#line 3621
void ldv_mutex_lock_mtx_of_adu_device(struct mutex *lock ) ;
#line 3622
void ldv_mutex_unlock_mtx_of_adu_device(struct mutex *lock ) ;
#line 3623
extern struct module __this_module ;
#line 3624 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static int variable_test_bit(long nr , unsigned long const volatile   *addr ) 
{ 
  int oldbit ;

  {
  {
#line 3628
  __asm__  volatile   ("bt %2,%1\n\tsbb %0,%0": "=r" (oldbit): "m" (*((unsigned long *)addr)),
                       "Ir" (nr));
  }
#line 3630
  return (oldbit);
}
}
#line 3633
int printk(char const   *arg0  , ...) ;
#line 3634
int __dynamic_dev_dbg(struct _ddebug *arg0 , struct device  const  *arg1 , char const   *arg2 
                      , ...) ;
#line 3636
void might_fault(void) ;
#line 3637
extern void __bad_percpu_size(void) ;
#line 3638
extern struct task_struct *current_task ;
#line 3639 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static struct task_struct *get_current(void) 
{ 
  struct task_struct *pfo_ret__ ;

  {
#line 3657
  goto case_8;
#line 3660
  goto switch_default;
  case_1: 
  {
#line 3662
  __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  }
#line 3663
  goto ldv_3038;
  case_2: 
  {
#line 3665
  __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  }
#line 3666
  goto ldv_3038;
  case_4: 
  {
#line 3668
  __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  }
#line 3669
  goto ldv_3038;
  case_8: 
  {
#line 3671
  __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  }
#line 3672
  goto ldv_3038;
  switch_default: 
  {
#line 3675
  __bad_percpu_size();
  }
  switch_break: 
  {

  }
  ldv_3038: 
  {

  }
#line 3680
  return (pfo_ret__);
}
}
#line 3683
void *memcpy(void *arg0 , void const   *arg1 , size_t arg2 ) ;
#line 3684
extern void *memset(void * , int  , size_t  ) ;
#line 3685
extern void __xchg_wrong_size(void) ;
#line 3686
void __ldv_spin_lock(spinlock_t *arg0 ) ;
#line 3687
static void ldv___ldv_spin_lock_49(spinlock_t *ldv_func_arg1 ) ;
#line 3688
static void ldv___ldv_spin_lock_52(spinlock_t *ldv_func_arg1 ) ;
#line 3689
static void ldv___ldv_spin_lock_64(spinlock_t *ldv_func_arg1 ) ;
#line 3690
static void ldv___ldv_spin_lock_68(spinlock_t *ldv_func_arg1 ) ;
#line 3691
static void ldv___ldv_spin_lock_71(spinlock_t *ldv_func_arg1 ) ;
#line 3692
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1 ) ;
#line 3693
void ldv_spin_lock_buflock_of_adu_device(void) ;
#line 3694
void ldv_spin_unlock_buflock_of_adu_device(void) ;
#line 3695
void ldv_initialize(void) ;
#line 3696
int ldv_post_init(int init_ret_val ) ;
#line 3697
void ldv_pre_probe(void) ;
#line 3698
int ldv_post_probe(int probe_ret_val ) ;
#line 3699
int ldv_filter_err_code(int ret_val ) ;
#line 3700
int ldv_failed_usb_register_driver(void) ;
#line 3701
void ldv_check_final_state(void) ;
#line 3703 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void assume_abort_if_not(int cond ) 
{ 


  {
#line 3704
  if (! cond) {
    {
#line 3704
    abort();
    }
  }
#line 3705
  return;
}
}
#line 3706
int ldv_undef_int(void) ;
#line 3707
int ldv_undef_int_negative(void) ;
#line 3708
void ldv_free(void *s ) ;
#line 3709
void *ldv_xmalloc(size_t size ) ;
#line 3710
void __mutex_init(struct mutex *arg0 , char const   *arg1 , struct lock_class_key *arg2 ) ;
#line 3711
static void ldv_mutex_unlock_60(struct mutex *ldv_func_arg1 ) ;
#line 3712
static void ldv_mutex_unlock_62(struct mutex *ldv_func_arg1 ) ;
#line 3713
static void ldv_mutex_unlock_74(struct mutex *ldv_func_arg1 ) ;
#line 3714
static void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1 ) ;
#line 3715
static void ldv_mutex_unlock_81(struct mutex *ldv_func_arg1 ) ;
#line 3716
static void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1 ) ;
#line 3717
static void ldv_mutex_unlock_84(struct mutex *ldv_func_arg1 ) ;
#line 3718
static void ldv_mutex_unlock_86(struct mutex *ldv_func_arg1 ) ;
#line 3719 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static int test_ti_thread_flag(struct thread_info *ti , int flag ) 
{ 
  int tmp___0 ;

  {
  {
#line 3724
  tmp___0 = variable_test_bit((long )flag, (unsigned long const volatile   *)(& ti->flags));
  }
#line 3726
  return (tmp___0);
}
}
#line 3729
void __raw_spin_lock_init(raw_spinlock_t *arg0 , char const   *arg1 , struct lock_class_key *arg2 ) ;
#line 3730
void _raw_spin_lock(raw_spinlock_t *arg0 ) ;
#line 3731
void _raw_spin_unlock(raw_spinlock_t *arg0 ) ;
#line 3732
void _raw_spin_unlock_irqrestore(raw_spinlock_t *arg0 , unsigned long arg1 ) ;
#line 3733 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock ) 
{ 


  {
#line 3736
  return (& lock->__annonCompField19.rlock);
}
}
#line 3739 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void spin_lock(spinlock_t *lock ) 
{ 


  {
  {
#line 3743
  _raw_spin_lock(& lock->__annonCompField19.rlock);
  }
#line 3745
  return;
}
}
#line 3748
__inline static void ldv_spin_lock_55(spinlock_t *lock ) ;
#line 3750 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void spin_unlock(spinlock_t *lock ) 
{ 


  {
  {
#line 3754
  _raw_spin_unlock(& lock->__annonCompField19.rlock);
  }
#line 3756
  return;
}
}
#line 3759
__inline static void ldv_spin_unlock_56(spinlock_t *lock ) ;
#line 3761 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void spin_unlock_irqrestore(spinlock_t *lock , unsigned long flags ) 
{ 


  {
  {
#line 3765
  _raw_spin_unlock_irqrestore(& lock->__annonCompField19.rlock, flags);
  }
#line 3767
  return;
}
}
#line 3770
__inline static void ldv_spin_unlock_irqrestore_50(spinlock_t *lock , unsigned long flags ) ;
#line 3783
extern int default_wake_function(wait_queue_t * , unsigned int  , int  , void * ) ;
#line 3784
void __init_waitqueue_head(wait_queue_head_t *arg0 , char const   *arg1 , struct lock_class_key *arg2 ) ;
#line 3785
void add_wait_queue(wait_queue_head_t *arg0 , wait_queue_t *arg1 ) ;
#line 3786
void remove_wait_queue(wait_queue_head_t *arg0 , wait_queue_t *arg1 ) ;
#line 3787
void __wake_up(wait_queue_head_t *arg0 , unsigned int arg1 , int arg2 , void *arg3 ) ;
#line 3788 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static int usb_endpoint_dir_in(struct usb_endpoint_descriptor  const  *epd ) 
{ 


  {
#line 3791
  return ((int )((signed char )epd->bEndpointAddress) < 0);
}
}
#line 3794 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static int usb_endpoint_dir_out(struct usb_endpoint_descriptor  const  *epd ) 
{ 


  {
#line 3797
  return ((int )((signed char )epd->bEndpointAddress) >= 0);
}
}
#line 3800 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static int usb_endpoint_xfer_int(struct usb_endpoint_descriptor  const  *epd ) 
{ 


  {
#line 3803
  return (((int )epd->bmAttributes & 3) == 3);
}
}
#line 3806 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static int usb_endpoint_is_int_in(struct usb_endpoint_descriptor  const  *epd ) 
{ 
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
  {
#line 3813
  tmp = usb_endpoint_xfer_int(epd);
  }
#line 3815
  if (tmp != 0) {
    {
#line 3817
    tmp___0 = usb_endpoint_dir_in(epd);
    }
#line 3819
    if (tmp___0 != 0) {
      {
#line 3820
      tmp___1 = 1;
      }
    } else {
      {
#line 3822
      tmp___1 = 0;
      }
    }
  } else {
    {
#line 3825
    tmp___1 = 0;
    }
  }
#line 3827
  return (tmp___1);
}
}
#line 3830 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static int usb_endpoint_is_int_out(struct usb_endpoint_descriptor  const  *epd ) 
{ 
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
  {
#line 3837
  tmp = usb_endpoint_xfer_int(epd);
  }
#line 3839
  if (tmp != 0) {
    {
#line 3841
    tmp___0 = usb_endpoint_dir_out(epd);
    }
#line 3843
    if (tmp___0 != 0) {
      {
#line 3844
      tmp___1 = 1;
      }
    } else {
      {
#line 3846
      tmp___1 = 0;
      }
    }
  } else {
    {
#line 3849
    tmp___1 = 0;
    }
  }
#line 3851
  return (tmp___1);
}
}
#line 3854 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static int usb_endpoint_maxp(struct usb_endpoint_descriptor  const  *epd ) 
{ 


  {
#line 3857
  return ((int )epd->wMaxPacketSize);
}
}
#line 3860
unsigned long _copy_from_user(void *arg0 , void const   *arg1 , unsigned int arg2 ) ;
#line 3861
unsigned long _copy_to_user(void *arg0 , void const   *arg1 , unsigned int arg2 ) ;
#line 3862
void __copy_from_user_overflow(void) ;
#line 3863
void __copy_to_user_overflow(void) ;
#line 3864
void ldv_assert(char const   *desc , int expr ) ;
#line 3865 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static unsigned long copy_from_user(void *to , void const   *from , unsigned long n ) 
{ 
  int sz ;
  long tmp ;
  long tmp___0 ;

  {
  {
#line 3872
  sz = -1;
#line 3873
  might_fault();
#line 3874
  tmp = ldv__builtin_expect((long )(sz < 0), 1L);
  }
#line 3876
  if (tmp != 0L) {
    {
#line 3878
    n = _copy_from_user(to, from, (unsigned int )n);
    }
  } else {
    {
#line 3882
    tmp___0 = ldv__builtin_expect((long )((unsigned long )sz >= n), 1L);
    }
#line 3884
    if (tmp___0 != 0L) {
      {
#line 3886
      n = _copy_from_user(to, from, (unsigned int )n);
      }
    } else {
      {
#line 3890
      __copy_from_user_overflow();
      }
    }
  }
#line 3894
  return (n);
}
}
#line 3897 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static unsigned long copy_to_user(void *to , void const   *from , unsigned long n ) 
{ 
  int sz ;
  long tmp ;
  long tmp___0 ;

  {
  {
#line 3904
  sz = -1;
#line 3905
  might_fault();
#line 3906
  tmp = ldv__builtin_expect((long )(sz < 0), 1L);
  }
#line 3908
  if (tmp != 0L) {
    {
#line 3910
    n = _copy_to_user(to, from, (unsigned int )n);
    }
  } else {
    {
#line 3914
    tmp___0 = ldv__builtin_expect((long )((unsigned long )sz >= n), 1L);
    }
#line 3916
    if (tmp___0 != 0L) {
      {
#line 3918
      n = _copy_to_user(to, from, (unsigned int )n);
      }
    } else {
      {
#line 3922
      __copy_to_user_overflow();
      }
    }
  }
#line 3926
  return (n);
}
}
#line 3929
static void *ldv_dev_get_drvdata_45(struct device  const  *dev ) ;
#line 3930
static int ldv_dev_set_drvdata_46(struct device *dev , void *data ) ;
#line 3931
int dev_err(struct device  const  *arg0 , char const   *arg1  , ...) ;
#line 3932
int _dev_info(struct device  const  *arg0 , char const   *arg1  , ...) ;
#line 3933 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static unsigned int iminor(struct inode  const  *inode ) 
{ 


  {
#line 3936
  return ((unsigned int )inode->i_rdev & 1048575U);
}
}
#line 3939
loff_t noop_llseek(struct file *arg0 , loff_t arg1 , int arg2 ) ;
#line 3940
long schedule_timeout(long arg0 ) ;
#line 3941 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static int test_tsk_thread_flag(struct task_struct *tsk , int flag ) 
{ 
  int tmp ;

  {
  {
#line 3946
  tmp = test_ti_thread_flag((struct thread_info *)tsk->stack, flag);
  }
#line 3948
  return (tmp);
}
}
#line 3951 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static int signal_pending(struct task_struct *p ) 
{ 
  int tmp ;
  long tmp___0 ;

  {
  {
#line 3957
  tmp = test_tsk_thread_flag(p, 2);
#line 3958
  tmp___0 = ldv__builtin_expect((long )(tmp != 0), 0L);
  }
#line 3960
  return ((int )tmp___0);
}
}
#line 3963 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void *usb_get_intfdata(struct usb_interface *intf ) 
{ 
  void *tmp ;

  {
  {
#line 3968
  tmp = ldv_dev_get_drvdata_45((struct device  const  *)(& intf->dev));
  }
#line 3970
  return (tmp);
}
}
#line 3973 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void usb_set_intfdata(struct usb_interface *intf , void *data ) 
{ 


  {
  {
#line 3977
  ldv_dev_set_drvdata_46(& intf->dev, data);
  }
#line 3979
  return;
}
}
#line 3982 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static struct usb_device *interface_to_usbdev(struct usb_interface *intf ) 
{ 
  struct device  const  *__mptr ;

  {
  {
#line 3986
  __mptr = (struct device  const  *)intf->dev.parent;
  }
#line 3987
  return ((struct usb_device *)(__mptr + 0xffffffffffffff78UL));
}
}
#line 3990
struct usb_interface *usb_find_interface(struct usb_driver *arg0 , int arg1 ) ;
#line 3991
static int ldv_usb_register_driver_87(struct usb_driver *ldv_func_arg1 , struct module *ldv_func_arg2 ,
                                      char const   *ldv_func_arg3 ) ;
#line 3993
static void ldv_usb_deregister_88(struct usb_driver *ldv_func_arg1 ) ;
#line 3994
int usb_register_dev(struct usb_interface *arg0 , struct usb_class_driver *arg1 ) ;
#line 3995
void usb_deregister_dev(struct usb_interface *arg0 , struct usb_class_driver *arg1 ) ;
#line 3996 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void usb_fill_int_urb(struct urb *urb , struct usb_device *dev , unsigned int pipe ,
                                      void *transfer_buffer , int buffer_length ,
                                      void (*complete_fn)(struct urb * ) , void *context ,
                                      int interval ) 
{ 
  int __val ;
  int __min ;
  int __max ;

  {
  {
#line 4005
  urb->dev = dev;
#line 4006
  urb->pipe = pipe;
#line 4007
  urb->transfer_buffer = transfer_buffer;
#line 4008
  urb->transfer_buffer_length = (u32 )buffer_length;
#line 4009
  urb->complete = complete_fn;
#line 4010
  urb->context = context;
  }
#line 4011
  if ((unsigned int )dev->speed == 3U) {
#line 4011
    goto _L;
  } else
#line 4011
  if ((unsigned int )dev->speed == 5U) {
    _L: /* CIL Label */ 
    {
#line 4012
    __val = interval;
#line 4013
    __min = 1;
#line 4014
    __max = 16;
    }
#line 4015
    if (__min > __val) {
      {
#line 4015
      __val = __min;
      }
    } else {
      {
#line 4015
      __val = __val;
      }
    }
#line 4016
    if (__max < __val) {
      {
#line 4016
      interval = __max;
      }
    } else {
      {
#line 4016
      interval = __val;
      }
    }
    {
#line 4017
    urb->interval = 1 << (interval + -1);
    }
  } else {
    {
#line 4019
    urb->interval = interval;
    }
  }
  {
#line 4021
  urb->start_frame = -1;
  }
#line 4022
  return;
}
}
#line 4025
struct urb *usb_alloc_urb(int arg0 , gfp_t arg1 ) ;
#line 4026
void usb_free_urb(struct urb *arg0 ) ;
#line 4027
int usb_submit_urb(struct urb *arg0 , gfp_t arg1 ) ;
#line 4028
void usb_kill_urb(struct urb *arg0 ) ;
#line 4029
int usb_string(struct usb_device *arg0 , int arg1 , char *arg2 , size_t arg3 ) ;
#line 4030 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static unsigned int __create_pipe(struct usb_device *dev , unsigned int endpoint ) 
{ 


  {
#line 4033
  return ((unsigned int )(dev->devnum << 8) | (endpoint << 15));
}
}
#line 4036
void kfree(void const   *p ) ;
#line 4037
void *ldv_malloc(size_t size ) ;
#line 4038 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *__kmalloc(size_t size , gfp_t t ) 
{ 
  void *tmp ;

  {
  {
#line 4040
  tmp = ldv_malloc(size);
  }
#line 4040
  return (tmp);
}
}
#line 4043 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void *kmalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp___2 ;

  {
  {
#line 4048
  tmp___2 = __kmalloc(size, flags);
  }
#line 4050
  return (tmp___2);
}
}
#line 4053
__inline static void *kzalloc(size_t size , gfp_t flags ) ;
#line 4054 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static struct usb_device_id  const  device_table[7U]  = {      {(__u16 )3U, (__u16 )2567U, (__u16 )100U, (unsigned short)0, (unsigned short)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, 0UL}, 
        {(__u16 )3U, (__u16 )2567U, (__u16 )120U, (unsigned short)0, (unsigned short)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, 0UL}, 
        {(__u16 )3U, (__u16 )2567U, (__u16 )130U, (unsigned short)0, (unsigned short)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, 0UL}, 
        {(__u16 )3U, (__u16 )2567U, (__u16 )200U, (unsigned short)0, (unsigned short)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, 0UL}, 
        {(__u16 )3U, (__u16 )2567U, (__u16 )208U, (unsigned short)0, (unsigned short)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, 0UL}, 
        {(__u16 )3U, (__u16 )2567U, (__u16 )218U, (unsigned short)0, (unsigned short)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, 0UL}};
#line 4072 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_device_id  const  __mod_usb_device_table  ;
#line 4073 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static struct mutex adutux_mutex  =    {{1}, {{{{{0U}}, 3735899821U, 4294967295U, (void *)-1, {(struct lock_class_key *)0,
                                                           {(struct lock_class *)0,
                                                            (struct lock_class *)0},
                                                           (char const   *)"adutux_mutex.wait_lock",
                                                           0, 0UL}}}}, {& adutux_mutex.wait_list,
                                                                        & adutux_mutex.wait_list},
    (struct task_struct *)0, (char const   *)0, (void *)(& adutux_mutex), {(struct lock_class_key *)0,
                                                                           {(struct lock_class *)0,
                                                                            (struct lock_class *)0},
                                                                           (char const   *)"adutux_mutex",
                                                                           0, 0UL}};
#line 4077
static struct usb_driver adu_driver ;
#line 4078 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void adu_debug_data(struct device *dev , char const   *function ,
                                    int size , unsigned char const   *data ) 
{ 
  struct _ddebug descriptor ;
  long tmp ;

  {
  {
#line 4085
  descriptor.modname = (char const   *)"adutux";
#line 4086
  descriptor.function = (char const   *)"adu_debug_data";
#line 4087
  descriptor.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4088
  descriptor.format = (char const   *)"%s - length = %d, data = %*ph\n";
#line 4089
  descriptor.lineno = 113U;
#line 4090
  descriptor.flags = 0U;
#line 4091
  tmp = ldv__builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 4093
  if (tmp != 0L) {
    {
#line 4095
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)dev, (char const   *)"%s - length = %d, data = %*ph\n",
                      function, size, size, data);
    }
  }
#line 4100
  return;
}
}
#line 4103 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void adu_abort_transfers(struct adu_device *dev ) 
{ 
  unsigned long flags ;
  struct usb_device *tmp ;

  {
  {
#line 4105
  flags = 0UL;
#line 4108
  tmp = dev->udev;
#line 4109
  ldv_assert((char const   *)"", (unsigned long )tmp == (unsigned long )dev->udev);
  }
#line 4110
  if ((unsigned long )dev->udev == (unsigned long )((struct usb_device *)0)) {
#line 4111
    return;
  }
  {
#line 4115
  ldv___ldv_spin_lock_49(& dev->buflock);
  }
#line 4117
  if (dev->read_urb_finished == 0) {
    {
#line 4119
    ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
#line 4120
    usb_kill_urb(dev->interrupt_in_urb);
    }
  } else {
    {
#line 4124
    ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
    }
  }
  {
#line 4128
  ldv___ldv_spin_lock_52(& dev->buflock);
  }
#line 4130
  if (dev->out_urb_finished == 0) {
    {
#line 4132
    ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
#line 4133
    usb_kill_urb(dev->interrupt_out_urb);
    }
  } else {
    {
#line 4137
    ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
    }
  }
#line 4140
  return;
}
}
#line 4143 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void adu_delete(struct adu_device *dev ) 
{ 


  {
  {
#line 4147
  usb_free_urb(dev->interrupt_in_urb);
#line 4148
  usb_free_urb(dev->interrupt_out_urb);
#line 4149
  kfree((void const   *)dev->read_buffer_primary);
#line 4150
  kfree((void const   *)dev->read_buffer_secondary);
#line 4151
  kfree((void const   *)dev->interrupt_in_buffer);
#line 4152
  kfree((void const   *)dev->interrupt_out_buffer);
#line 4153
  kfree((void const   *)dev);
  }
#line 4155
  return;
}
}
#line 4158 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void adu_interrupt_in_callback(struct urb *urb ) 
{ 
  struct adu_device *dev ;
  int status ;
  struct _ddebug descriptor ;
  long tmp ;
  struct _ddebug descriptor___0 ;
  long tmp___0 ;
  struct _ddebug descriptor___1 ;
  long tmp___1 ;
  int tmp___2 ;

  {
  {
#line 4171
  dev = (struct adu_device *)urb->context;
#line 4172
  status = urb->status;
#line 4173
  adu_debug_data(& (dev->udev)->dev, (char const   *)"adu_interrupt_in_callback",
                 (int )urb->actual_length, (unsigned char const   *)urb->transfer_buffer);
#line 4175
  ldv_spin_lock_55(& dev->buflock);
  }
#line 4177
  if (status != 0) {
#line 4178
    if (status != -2) {
#line 4178
      if (status != -104) {
#line 4178
        if (status != -108) {
          {
#line 4180
          descriptor.modname = (char const   *)"adutux";
#line 4181
          descriptor.function = (char const   *)"adu_interrupt_in_callback";
#line 4182
          descriptor.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4183
          descriptor.format = (char const   *)"%s : nonzero status received: %d\n";
#line 4184
          descriptor.lineno = 172U;
#line 4185
          descriptor.flags = 0U;
#line 4186
          tmp = ldv__builtin_expect((long )descriptor.flags & 1L, 0L);
          }
#line 4188
          if (tmp != 0L) {
            {
#line 4190
            __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (dev->udev)->dev),
                              (char const   *)"%s : nonzero status received: %d\n",
                              "adu_interrupt_in_callback", status);
            }
          }
        }
      }
    }
#line 4198
    goto exit;
  }
#line 4201
  if (urb->actual_length != 0U) {
#line 4201
    if ((int )((signed char )*(dev->interrupt_in_buffer)) != 0) {
      {
#line 4203
      tmp___2 = usb_endpoint_maxp((struct usb_endpoint_descriptor  const  *)dev->interrupt_in_endpoint);
      }
#line 4205
      if ((u32 )dev->read_buffer_length < (u32 )(tmp___2 * 4) - urb->actual_length) {
        {
#line 4207
        memcpy((void *)(dev->read_buffer_primary + (unsigned long )dev->read_buffer_length),
               (void const   *)dev->interrupt_in_buffer, urb->actual_length);
#line 4209
        dev->read_buffer_length = (int )((u32 )dev->read_buffer_length + urb->actual_length);
#line 4210
        descriptor___0.modname = (char const   *)"adutux";
#line 4211
        descriptor___0.function = (char const   *)"adu_interrupt_in_callback";
#line 4212
        descriptor___0.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4213
        descriptor___0.format = (char const   *)"%s reading  %d\n";
#line 4214
        descriptor___0.lineno = 187U;
#line 4215
        descriptor___0.flags = 0U;
#line 4216
        tmp___0 = ldv__builtin_expect((long )descriptor___0.flags & 1L, 0L);
        }
#line 4218
        if (tmp___0 != 0L) {
          {
#line 4220
          __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)(& (dev->udev)->dev),
                            (char const   *)"%s reading  %d\n", "adu_interrupt_in_callback",
                            urb->actual_length);
          }
        }
      } else {
        {
#line 4227
        descriptor___1.modname = (char const   *)"adutux";
#line 4228
        descriptor___1.function = (char const   *)"adu_interrupt_in_callback";
#line 4229
        descriptor___1.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4230
        descriptor___1.format = (char const   *)"%s : read_buffer overflow\n";
#line 4231
        descriptor___1.lineno = 190U;
#line 4232
        descriptor___1.flags = 0U;
#line 4233
        tmp___1 = ldv__builtin_expect((long )descriptor___1.flags & 1L, 0L);
        }
#line 4235
        if (tmp___1 != 0L) {
          {
#line 4237
          __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)(& (dev->udev)->dev),
                            (char const   *)"%s : read_buffer overflow\n", "adu_interrupt_in_callback");
          }
        }
      }
    }
  }
  exit: 
  {
#line 4247
  dev->read_urb_finished = 1;
#line 4248
  ldv_spin_unlock_56(& dev->buflock);
#line 4249
  __wake_up(& dev->read_wait, 1U, 1, (void *)0);
  }
#line 4251
  return;
}
}
#line 4254 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void adu_interrupt_out_callback(struct urb *urb ) 
{ 
  struct adu_device *dev ;
  int status ;
  struct _ddebug descriptor ;
  long tmp ;

  {
  {
#line 4262
  dev = (struct adu_device *)urb->context;
#line 4263
  status = urb->status;
#line 4264
  adu_debug_data(& (dev->udev)->dev, (char const   *)"adu_interrupt_out_callback",
                 (int )urb->actual_length, (unsigned char const   *)urb->transfer_buffer);
  }
#line 4267
  if (status != 0) {
#line 4268
    if (status != -2) {
#line 4268
      if (status != -104) {
        {
#line 4270
        descriptor.modname = (char const   *)"adutux";
#line 4271
        descriptor.function = (char const   *)"adu_interrupt_out_callback";
#line 4272
        descriptor.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4273
        descriptor.format = (char const   *)"%s :nonzero status received: %d\n";
#line 4274
        descriptor.lineno = 214U;
#line 4275
        descriptor.flags = 0U;
#line 4276
        tmp = ldv__builtin_expect((long )descriptor.flags & 1L, 0L);
        }
#line 4278
        if (tmp != 0L) {
          {
#line 4280
          __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (dev->udev)->dev),
                            (char const   *)"%s :nonzero status received: %d\n", "adu_interrupt_out_callback",
                            status);
          }
        }
      }
    }
#line 4288
    return;
  }
  {
#line 4292
  ldv_spin_lock_55(& dev->buflock);
#line 4293
  dev->out_urb_finished = 1;
#line 4294
  __wake_up(& dev->write_wait, 3U, 1, (void *)0);
#line 4295
  ldv_spin_unlock_56(& dev->buflock);
  }
#line 4297
  return;
}
}
#line 4300 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static int adu_open(struct inode *inode , struct file *file ) 
{ 
  struct adu_device *dev ;
  struct usb_interface *interface ;
  int subminor ;
  int retval ;
  unsigned int tmp ;
  void *tmp___0 ;
  struct _ddebug descriptor ;
  long tmp___1 ;
  int tmp___2 ;
  unsigned int tmp___3 ;
  int tmp___4 ;

  {
  {
#line 4315
  dev = (struct adu_device *)0;
#line 4316
  tmp = iminor((struct inode  const  *)inode);
#line 4317
  subminor = (int )tmp;
#line 4318
  retval = ldv_mutex_lock_interruptible_59(& adutux_mutex);
  }
#line 4320
  if (retval != 0) {
#line 4321
    goto exit_no_lock;
  }
  {
#line 4325
  interface = usb_find_interface(& adu_driver, subminor);
  }
#line 4327
  if ((unsigned long )interface == (unsigned long )((struct usb_interface *)0)) {
    {
#line 4329
    printk((char const   *)"\vadutux: %s - error, can\'t find device for minor %d\n",
           "adu_open", subminor);
#line 4331
    retval = -19;
    }
#line 4333
    goto exit_no_device;
  }
  {
#line 4337
  tmp___0 = usb_get_intfdata(interface);
#line 4338
  dev = (struct adu_device *)tmp___0;
  }
#line 4340
  if ((unsigned long )dev == (unsigned long )((struct adu_device *)0)) {
    {
#line 4341
    retval = -19;
    }
#line 4342
    goto exit_no_device;
  } else
#line 4340
  if ((unsigned long )dev->udev == (unsigned long )((struct usb_device *)0)) {
    {
#line 4341
    retval = -19;
    }
#line 4342
    goto exit_no_device;
  }
#line 4345
  if (dev->open_count != 0) {
    {
#line 4346
    retval = -16;
    }
#line 4347
    goto exit_no_device;
  }
  {
#line 4351
  (dev->open_count) ++;
#line 4352
  descriptor.modname = (char const   *)"adutux";
#line 4353
  descriptor.function = (char const   *)"adu_open";
#line 4354
  descriptor.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4355
  descriptor.format = (char const   *)"%s: open count %d\n";
#line 4356
  descriptor.lineno = 260U;
#line 4357
  descriptor.flags = 0U;
#line 4358
  tmp___1 = ldv__builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 4360
  if (tmp___1 != 0L) {
    {
#line 4362
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (dev->udev)->dev),
                      (char const   *)"%s: open count %d\n", "adu_open", dev->open_count);
    }
  }
  {
#line 4368
  file->private_data = (void *)dev;
#line 4369
  dev->read_buffer_length = 0;
#line 4370
  tmp___2 = usb_endpoint_maxp((struct usb_endpoint_descriptor  const  *)dev->interrupt_in_endpoint);
#line 4371
  tmp___3 = __create_pipe(dev->udev, (unsigned int )(dev->interrupt_in_endpoint)->bEndpointAddress);
#line 4372
  usb_fill_int_urb(dev->interrupt_in_urb, dev->udev, tmp___3 | 1073741952U, (void *)dev->interrupt_in_buffer,
                   tmp___2, & adu_interrupt_in_callback, (void *)dev, (int )(dev->interrupt_in_endpoint)->bInterval);
#line 4374
  dev->read_urb_finished = 0;
#line 4375
  tmp___4 = usb_submit_urb(dev->interrupt_in_urb, 208U);
  }
#line 4377
  if (tmp___4 != 0) {
    {
#line 4378
    dev->read_urb_finished = 1;
    }
  }
  {
#line 4381
  dev->out_urb_finished = 1;
#line 4382
  retval = 0;
  }
  exit_no_device: 
  {
#line 4385
  ldv_mutex_unlock_60(& adutux_mutex);
  }
  exit_no_lock: 
  {

  }
#line 4388
  return (retval);
}
}
#line 4391 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void adu_release_internal(struct adu_device *dev ) 
{ 
  struct _ddebug descriptor ;
  long tmp ;

  {
  {
#line 4397
  (dev->open_count) --;
#line 4398
  descriptor.modname = (char const   *)"adutux";
#line 4399
  descriptor.function = (char const   *)"adu_release_internal";
#line 4400
  descriptor.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4401
  descriptor.format = (char const   *)"%s : open count %d\n";
#line 4402
  descriptor.lineno = 298U;
#line 4403
  descriptor.flags = 0U;
#line 4404
  tmp = ldv__builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 4406
  if (tmp != 0L) {
    {
#line 4408
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (dev->udev)->dev),
                      (char const   *)"%s : open count %d\n", "adu_release_internal",
                      dev->open_count);
    }
  }
#line 4413
  if (dev->open_count <= 0) {
    {
#line 4415
    adu_abort_transfers(dev);
#line 4416
    dev->open_count = 0;
    }
  }
#line 4420
  return;
}
}
#line 4423 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static int adu_release(struct inode *inode , struct file *file ) 
{ 
  struct adu_device *dev ;
  int retval ;
  struct _ddebug descriptor ;
  long tmp ;

  {
  {
#line 4430
  retval = 0;
  }
#line 4431
  if ((unsigned long )file == (unsigned long )((struct file *)0)) {
    {
#line 4432
    retval = -19;
    }
#line 4433
    goto exit;
  }
  {
#line 4436
  dev = (struct adu_device *)file->private_data;
  }
#line 4437
  if ((unsigned long )dev == (unsigned long )((struct adu_device *)0)) {
    {
#line 4438
    retval = -19;
    }
#line 4439
    goto exit;
  }
  {
#line 4443
  ldv_mutex_lock_61(& adutux_mutex);
  }
#line 4445
  if (dev->open_count <= 0) {
    {
#line 4447
    descriptor.modname = (char const   *)"adutux";
#line 4448
    descriptor.function = (char const   *)"adu_release";
#line 4449
    descriptor.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4450
    descriptor.format = (char const   *)"%s : device not opened\n";
#line 4451
    descriptor.lineno = 324U;
#line 4452
    descriptor.flags = 0U;
#line 4453
    tmp = ldv__builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 4455
    if (tmp != 0L) {
      {
#line 4457
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (dev->udev)->dev),
                        (char const   *)"%s : device not opened\n", "adu_release");
      }
    }
    {
#line 4462
    retval = -19;
    }
#line 4463
    goto unlock;
  }
  {
#line 4467
  adu_release_internal(dev);
  }
#line 4469
  if ((unsigned long )dev->udev == (unsigned long )((struct usb_device *)0)) {
#line 4470
    if (dev->open_count == 0) {
      {
#line 4472
      adu_delete(dev);
      }
    }
  }
  unlock: 
  {
#line 4480
  ldv_mutex_unlock_62(& adutux_mutex);
  }
  exit: 
  {

  }
#line 4483
  return (retval);
}
}
#line 4486 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static ssize_t adu_read(struct file *file , char *buffer , size_t count , loff_t *ppos ) 
{ 
  struct adu_device *dev ;
  size_t bytes_read ;
  size_t bytes_to_read ;
  int i ;
  int retval ;
  int timeout ;
  int should_submit ;
  unsigned long flags ;
  wait_queue_t wait ;
  struct task_struct *tmp ;
  int tmp___0 ;
  struct _ddebug descriptor ;
  long tmp___1 ;
  struct _ddebug descriptor___0 ;
  long tmp___2 ;
  int data_in_secondary ;
  struct _ddebug descriptor___1 ;
  long tmp___3 ;
  int amount ;
  unsigned long tmp___4 ;
  char *tmp___5 ;
  struct _ddebug descriptor___2 ;
  long tmp___6 ;
  struct _ddebug descriptor___3 ;
  long tmp___7 ;
  struct _ddebug descriptor___4 ;
  long tmp___8 ;
  int tmp___9 ;
  unsigned int tmp___10 ;
  struct _ddebug descriptor___5 ;
  long tmp___11 ;
  long volatile   __ret ;
  struct task_struct *tmp___12 ;
  struct task_struct *tmp___13 ;
  struct task_struct *tmp___14 ;
  struct task_struct *tmp___15 ;
  long tmp___16 ;
  long volatile   __ret___0 ;
  struct task_struct *tmp___17 ;
  struct task_struct *tmp___18 ;
  struct task_struct *tmp___19 ;
  struct task_struct *tmp___20 ;
  struct _ddebug descriptor___6 ;
  long tmp___21 ;
  struct _ddebug descriptor___7 ;
  long tmp___22 ;
  struct task_struct *tmp___23 ;
  int tmp___24 ;
  int tmp___25 ;
  unsigned int tmp___26 ;
  int tmp___27 ;
  size_t tmp___28 ;

  {
  {
#line 4495
  flags = 0UL;
#line 4541
  bytes_read = (size_t )0UL;
#line 4542
  bytes_to_read = count;
#line 4543
  retval = 0;
#line 4544
  timeout = 0;
#line 4545
  should_submit = 0;
#line 4546
  tmp = get_current();
#line 4547
  wait.flags = 0U;
#line 4548
  wait.private = (void *)tmp;
#line 4549
  wait.func = & default_wake_function;
#line 4550
  wait.task_list.next = (struct list_head *)0;
#line 4551
  wait.task_list.prev = (struct list_head *)0;
#line 4552
  dev = (struct adu_device *)file->private_data;
#line 4553
  tmp___0 = ldv_mutex_lock_interruptible_63(& dev->mtx);
  }
#line 4555
  if (tmp___0 != 0) {
#line 4556
    return (-512L);
  }
#line 4559
  if ((unsigned long )dev->udev == (unsigned long )((struct usb_device *)0)) {
    {
#line 4561
    retval = -19;
#line 4562
    printk((char const   *)"\vadutux: No device or device unplugged %d\n", retval);
    }
#line 4564
    goto exit;
  }
#line 4567
  if ((unsigned long )count == 0UL) {
    {
#line 4569
    descriptor.modname = (char const   *)"adutux";
#line 4570
    descriptor.function = (char const   *)"adu_read";
#line 4571
    descriptor.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4572
    descriptor.format = (char const   *)"%s : read request of 0 bytes\n";
#line 4573
    descriptor.lineno = 368U;
#line 4574
    descriptor.flags = 0U;
#line 4575
    tmp___1 = ldv__builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 4577
    if (tmp___1 != 0L) {
      {
#line 4579
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (dev->udev)->dev),
                        (char const   *)"%s : read request of 0 bytes\n", "adu_read");
      }
    }
#line 4584
    goto exit;
  }
  {
#line 4588
  timeout = 500;
#line 4589
  descriptor___0.modname = (char const   *)"adutux";
#line 4590
  descriptor___0.function = (char const   *)"adu_read";
#line 4591
  descriptor___0.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4592
  descriptor___0.format = (char const   *)"%s : about to start looping\n";
#line 4593
  descriptor___0.lineno = 373U;
#line 4594
  descriptor___0.flags = 0U;
#line 4595
  tmp___2 = ldv__builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 4597
  if (tmp___2 != 0L) {
    {
#line 4599
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)(& (dev->udev)->dev),
                      (char const   *)"%s : about to start looping\n", "adu_read");
    }
  }
#line 4604
  goto ldv_30705;
  ldv_30704: 
  {
#line 4607
  data_in_secondary = dev->secondary_tail - dev->secondary_head;
#line 4608
  descriptor___1.modname = (char const   *)"adutux";
#line 4609
  descriptor___1.function = (char const   *)"adu_read";
#line 4610
  descriptor___1.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4611
  descriptor___1.format = (char const   *)"%s : while, data_in_secondary=%d, status=%d\n";
#line 4612
  descriptor___1.lineno = 379U;
#line 4613
  descriptor___1.flags = 0U;
#line 4614
  tmp___3 = ldv__builtin_expect((long )descriptor___1.flags & 1L, 0L);
  }
#line 4616
  if (tmp___3 != 0L) {
    {
#line 4618
    __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)(& (dev->udev)->dev),
                      (char const   *)"%s : while, data_in_secondary=%d, status=%d\n",
                      "adu_read", data_in_secondary, (dev->interrupt_in_urb)->status);
    }
  }
#line 4624
  if (data_in_secondary != 0) {
#line 4626
    if (bytes_to_read < (size_t )data_in_secondary) {
      {
#line 4626
      tmp___28 = bytes_to_read;
      }
    } else {
      {
#line 4626
      tmp___28 = (size_t )data_in_secondary;
      }
    }
    {
#line 4626
    amount = (int )tmp___28;
#line 4627
    tmp___4 = copy_to_user((void *)buffer, (void const   *)(dev->read_buffer_secondary + (unsigned long )dev->secondary_head),
                           (unsigned long )amount);
#line 4629
    i = (int )tmp___4;
    }
#line 4631
    if (i != 0) {
      {
#line 4632
      retval = -14;
      }
#line 4633
      goto exit;
    }
    {
#line 4636
    dev->secondary_head += amount - i;
#line 4637
    bytes_read += (size_t )(amount - i);
#line 4638
    bytes_to_read -= (size_t )(amount - i);
    }
#line 4639
    if (i != 0) {
#line 4640
      if ((unsigned long )bytes_read != 0UL) {
        {
#line 4640
        retval = (int )bytes_read;
        }
      } else {
        {
#line 4640
        retval = -14;
        }
      }
#line 4641
      goto exit;
    }
  } else {
    {
#line 4646
    ldv___ldv_spin_lock_64(& dev->buflock);
    }
#line 4648
    if (dev->read_buffer_length != 0) {
      {
#line 4650
      descriptor___2.modname = (char const   *)"adutux";
#line 4651
      descriptor___2.function = (char const   *)"adu_read";
#line 4652
      descriptor___2.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4653
      descriptor___2.format = (char const   *)"%s : swap, read_buffer_length = %d\n";
#line 4654
      descriptor___2.lineno = 404U;
#line 4655
      descriptor___2.flags = 0U;
#line 4656
      tmp___6 = ldv__builtin_expect((long )descriptor___2.flags & 1L, 0L);
      }
#line 4658
      if (tmp___6 != 0L) {
        {
#line 4660
        __dynamic_dev_dbg(& descriptor___2, (struct device  const  *)(& (dev->udev)->dev),
                          (char const   *)"%s : swap, read_buffer_length = %d\n",
                          "adu_read", dev->read_buffer_length);
        }
      }
      {
#line 4666
      tmp___5 = dev->read_buffer_secondary;
#line 4667
      dev->read_buffer_secondary = dev->read_buffer_primary;
#line 4668
      dev->read_buffer_primary = tmp___5;
#line 4669
      dev->secondary_head = 0;
#line 4670
      dev->secondary_tail = dev->read_buffer_length;
#line 4671
      dev->read_buffer_length = 0;
#line 4672
      ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
#line 4673
      should_submit = 1;
      }
    } else {
#line 4676
      if (dev->read_urb_finished == 0) {
        {
#line 4678
        ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
#line 4679
        descriptor___3.modname = (char const   *)"adutux";
#line 4680
        descriptor___3.function = (char const   *)"adu_read";
#line 4681
        descriptor___3.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4682
        descriptor___3.format = (char const   *)"%s : submitted already\n";
#line 4683
        descriptor___3.lineno = 421U;
#line 4684
        descriptor___3.flags = 0U;
#line 4685
        tmp___7 = ldv__builtin_expect((long )descriptor___3.flags & 1L, 0L);
        }
#line 4687
        if (tmp___7 != 0L) {
          {
#line 4689
          __dynamic_dev_dbg(& descriptor___3, (struct device  const  *)(& (dev->udev)->dev),
                            (char const   *)"%s : submitted already\n", "adu_read");
          }
        }
      } else {
        {
#line 4696
        descriptor___4.modname = (char const   *)"adutux";
#line 4697
        descriptor___4.function = (char const   *)"adu_read";
#line 4698
        descriptor___4.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4699
        descriptor___4.format = (char const   *)"%s : initiate input\n";
#line 4700
        descriptor___4.lineno = 426U;
#line 4701
        descriptor___4.flags = 0U;
#line 4702
        tmp___8 = ldv__builtin_expect((long )descriptor___4.flags & 1L, 0L);
        }
#line 4704
        if (tmp___8 != 0L) {
          {
#line 4706
          __dynamic_dev_dbg(& descriptor___4, (struct device  const  *)(& (dev->udev)->dev),
                            (char const   *)"%s : initiate input\n", "adu_read");
          }
        }
        {
#line 4712
        dev->read_urb_finished = 0;
#line 4713
        ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
#line 4714
        tmp___9 = usb_endpoint_maxp((struct usb_endpoint_descriptor  const  *)dev->interrupt_in_endpoint);
#line 4715
        tmp___10 = __create_pipe(dev->udev, (unsigned int )(dev->interrupt_in_endpoint)->bEndpointAddress);
#line 4716
        usb_fill_int_urb(dev->interrupt_in_urb, dev->udev, tmp___10 | 1073741952U,
                         (void *)dev->interrupt_in_buffer, tmp___9, & adu_interrupt_in_callback,
                         (void *)dev, (int )(dev->interrupt_in_endpoint)->bInterval);
#line 4719
        retval = usb_submit_urb(dev->interrupt_in_urb, 208U);
        }
#line 4721
        if (retval != 0) {
          {
#line 4722
          dev->read_urb_finished = 1;
          }
#line 4723
          if (retval == -12) {
#line 4724
            if ((unsigned long )bytes_read != 0UL) {
              {
#line 4724
              retval = (int )bytes_read;
              }
            } else {
              {
#line 4724
              retval = -12;
              }
            }
          }
          {
#line 4728
          descriptor___5.modname = (char const   *)"adutux";
#line 4729
          descriptor___5.function = (char const   *)"adu_read";
#line 4730
          descriptor___5.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4731
          descriptor___5.format = (char const   *)"%s : submit failed\n";
#line 4732
          descriptor___5.lineno = 446U;
#line 4733
          descriptor___5.flags = 0U;
#line 4734
          tmp___11 = ldv__builtin_expect((long )descriptor___5.flags & 1L, 0L);
          }
#line 4736
          if (tmp___11 != 0L) {
            {
#line 4738
            __dynamic_dev_dbg(& descriptor___5, (struct device  const  *)(& (dev->udev)->dev),
                              (char const   *)"%s : submit failed\n", "adu_read");
            }
          }
#line 4743
          goto exit;
        }
      }
      {
#line 4747
      __ret = (long volatile   )1L;
      }
#line 4762
      goto case_8;
#line 4765
      goto switch_default;
      case_1: 
      {
#line 4768
      tmp___12 = get_current();
#line 4769
      __asm__  volatile   ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___12->state): : "memory",
                           "cc");
      }
#line 4772
      goto ldv_30688;
      case_2: 
      {
#line 4775
      tmp___13 = get_current();
#line 4776
      __asm__  volatile   ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___13->state): : "memory",
                           "cc");
      }
#line 4779
      goto ldv_30688;
      case_4: 
      {
#line 4782
      tmp___14 = get_current();
#line 4783
      __asm__  volatile   ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___14->state): : "memory",
                           "cc");
      }
#line 4786
      goto ldv_30688;
      case_8: 
      {
#line 4789
      tmp___15 = get_current();
#line 4790
      __asm__  volatile   ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___15->state): : "memory",
                           "cc");
      }
#line 4793
      goto ldv_30688;
      switch_default: 
      {
#line 4796
      __xchg_wrong_size();
      }
      switch_break: 
      {

      }
      ldv_30688: 
      {
#line 4802
      add_wait_queue(& dev->read_wait, & wait);
#line 4803
      ldv___ldv_spin_lock_68(& dev->buflock);
      }
#line 4805
      if (dev->read_urb_finished == 0) {
        {
#line 4807
        ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
#line 4808
        tmp___16 = schedule_timeout(500L);
#line 4809
        timeout = (int )tmp___16;
        }
      } else {
        {
#line 4813
        ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
#line 4814
        __ret___0 = (long volatile   )0L;
        }
#line 4830
        goto case_8___0;
#line 4833
        goto switch_default___0;
        case_1___0: 
        {
#line 4836
        tmp___17 = get_current();
#line 4837
        __asm__  volatile   ("xchgb %b0, %1\n": "+q" (__ret___0), "+m" (tmp___17->state): : "memory",
                             "cc");
        }
#line 4840
        goto ldv_30696;
        case_2___0: 
        {
#line 4843
        tmp___18 = get_current();
#line 4844
        __asm__  volatile   ("xchgw %w0, %1\n": "+r" (__ret___0), "+m" (tmp___18->state): : "memory",
                             "cc");
        }
#line 4847
        goto ldv_30696;
        case_4___0: 
        {
#line 4850
        tmp___19 = get_current();
#line 4851
        __asm__  volatile   ("xchgl %0, %1\n": "+r" (__ret___0), "+m" (tmp___19->state): : "memory",
                             "cc");
        }
#line 4854
        goto ldv_30696;
        case_8___0: 
        {
#line 4857
        tmp___20 = get_current();
#line 4858
        __asm__  volatile   ("xchgq %q0, %1\n": "+r" (__ret___0), "+m" (tmp___20->state): : "memory",
                             "cc");
        }
#line 4861
        goto ldv_30696;
        switch_default___0: 
        {
#line 4864
        __xchg_wrong_size();
        }
        switch_break___0: 
        {

        }
        ldv_30696: 
        {

        }
      }
      {
#line 4871
      remove_wait_queue(& dev->read_wait, & wait);
      }
#line 4873
      if (timeout <= 0) {
        {
#line 4875
        descriptor___6.modname = (char const   *)"adutux";
#line 4876
        descriptor___6.function = (char const   *)"adu_read";
#line 4877
        descriptor___6.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4878
        descriptor___6.format = (char const   *)"%s : timeout\n";
#line 4879
        descriptor___6.lineno = 466U;
#line 4880
        descriptor___6.flags = 0U;
#line 4881
        tmp___21 = ldv__builtin_expect((long )descriptor___6.flags & 1L, 0L);
        }
#line 4883
        if (tmp___21 != 0L) {
          {
#line 4885
          __dynamic_dev_dbg(& descriptor___6, (struct device  const  *)(& (dev->udev)->dev),
                            (char const   *)"%s : timeout\n", "adu_read");
          }
        }
#line 4890
        if ((unsigned long )bytes_read != 0UL) {
          {
#line 4890
          retval = (int )bytes_read;
          }
        } else {
          {
#line 4890
          retval = -110;
          }
        }
#line 4891
        goto exit;
      }
      {
#line 4895
      tmp___23 = get_current();
#line 4896
      tmp___24 = signal_pending(tmp___23);
      }
#line 4898
      if (tmp___24 != 0) {
        {
#line 4900
        descriptor___7.modname = (char const   *)"adutux";
#line 4901
        descriptor___7.function = (char const   *)"adu_read";
#line 4902
        descriptor___7.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 4903
        descriptor___7.format = (char const   *)"%s : signal pending\n";
#line 4904
        descriptor___7.lineno = 474U;
#line 4905
        descriptor___7.flags = 0U;
#line 4906
        tmp___22 = ldv__builtin_expect((long )descriptor___7.flags & 1L, 0L);
        }
#line 4908
        if (tmp___22 != 0L) {
          {
#line 4910
          __dynamic_dev_dbg(& descriptor___7, (struct device  const  *)(& (dev->udev)->dev),
                            (char const   *)"%s : signal pending\n", "adu_read");
          }
        }
#line 4915
        if ((unsigned long )bytes_read != 0UL) {
          {
#line 4915
          retval = (int )bytes_read;
          }
        } else {
          {
#line 4915
          retval = -4;
          }
        }
#line 4916
        goto exit;
      }
    }
  }
  ldv_30705: 
  {

  }
#line 4922
  if ((unsigned long )bytes_to_read != 0UL) {
#line 4923
    goto ldv_30704;
  }
  {
#line 4927
  retval = (int )bytes_read;
#line 4928
  ldv___ldv_spin_lock_71(& dev->buflock);
  }
#line 4930
  if (should_submit != 0) {
#line 4930
    if (dev->read_urb_finished != 0) {
      {
#line 4932
      dev->read_urb_finished = 0;
#line 4933
      ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
#line 4934
      tmp___25 = usb_endpoint_maxp((struct usb_endpoint_descriptor  const  *)dev->interrupt_in_endpoint);
#line 4935
      tmp___26 = __create_pipe(dev->udev, (unsigned int )(dev->interrupt_in_endpoint)->bEndpointAddress);
#line 4936
      usb_fill_int_urb(dev->interrupt_in_urb, dev->udev, tmp___26 | 1073741952U, (void *)dev->interrupt_in_buffer,
                       tmp___25, & adu_interrupt_in_callback, (void *)dev, (int )(dev->interrupt_in_endpoint)->bInterval);
#line 4938
      tmp___27 = usb_submit_urb(dev->interrupt_in_urb, 208U);
      }
#line 4940
      if (tmp___27 != 0) {
        {
#line 4941
        dev->read_urb_finished = 1;
        }
      }
    } else {
      {
#line 4946
      ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
      }
    }
  } else {
    {
#line 4946
    ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
    }
  }
  exit: 
  {
#line 4951
  ldv_mutex_unlock_74(& dev->mtx);
  }
#line 4953
  return ((ssize_t )retval);
}
}
#line 4956 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static ssize_t adu_write(struct file *file , char const   *buffer , size_t count ,
                         loff_t *ppos ) 
{ 
  wait_queue_t waita ;
  struct task_struct *tmp ;
  struct adu_device *dev ;
  size_t bytes_written ;
  size_t bytes_to_write ;
  size_t buffer_size ;
  unsigned long flags ;
  int retval ;
  struct _ddebug descriptor ;
  long tmp___0 ;
  long volatile   __ret ;
  struct task_struct *tmp___1 ;
  struct task_struct *tmp___2 ;
  struct task_struct *tmp___3 ;
  struct task_struct *tmp___4 ;
  struct _ddebug descriptor___0 ;
  long tmp___5 ;
  long volatile   __ret___0 ;
  struct task_struct *tmp___6 ;
  struct task_struct *tmp___7 ;
  struct task_struct *tmp___8 ;
  struct task_struct *tmp___9 ;
  struct task_struct *tmp___10 ;
  int tmp___11 ;
  struct _ddebug descriptor___1 ;
  long tmp___12 ;
  long tmp___13 ;
  struct _ddebug descriptor___2 ;
  long tmp___14 ;
  long volatile   __ret___1 ;
  struct task_struct *tmp___15 ;
  struct task_struct *tmp___16 ;
  struct task_struct *tmp___17 ;
  struct task_struct *tmp___18 ;
  struct _ddebug descriptor___3 ;
  long tmp___19 ;
  int tmp___20 ;
  struct _ddebug descriptor___4 ;
  long tmp___21 ;
  unsigned long tmp___22 ;
  unsigned int tmp___23 ;

  {
  {
#line 4965
  flags = 0UL;
#line 5002
  tmp = get_current();
#line 5003
  waita.flags = 0U;
#line 5004
  waita.private = (void *)tmp;
#line 5005
  waita.func = & default_wake_function;
#line 5006
  waita.task_list.next = (struct list_head *)0;
#line 5007
  waita.task_list.prev = (struct list_head *)0;
#line 5008
  bytes_written = (size_t )0UL;
#line 5009
  dev = (struct adu_device *)file->private_data;
#line 5010
  retval = ldv_mutex_lock_interruptible_75(& dev->mtx);
  }
#line 5012
  if (retval != 0) {
#line 5013
    goto exit_nolock;
  }
#line 5016
  if ((unsigned long )dev->udev == (unsigned long )((struct usb_device *)0)) {
    {
#line 5018
    retval = -19;
#line 5019
    printk((char const   *)"\vadutux: No device or device unplugged %d\n", retval);
    }
#line 5021
    goto exit;
  }
#line 5024
  if ((unsigned long )count == 0UL) {
    {
#line 5026
    descriptor.modname = (char const   *)"adutux";
#line 5027
    descriptor.function = (char const   *)"adu_write";
#line 5028
    descriptor.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 5029
    descriptor.format = (char const   *)"%s : write request of 0 bytes\n";
#line 5030
    descriptor.lineno = 537U;
#line 5031
    descriptor.flags = 0U;
#line 5032
    tmp___0 = ldv__builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 5034
    if (tmp___0 != 0L) {
      {
#line 5036
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (dev->udev)->dev),
                        (char const   *)"%s : write request of 0 bytes\n", "adu_write");
      }
    }
#line 5041
    goto exit;
  }
#line 5044
  goto ldv_30755;
  ldv_30754: 
  {
#line 5047
  add_wait_queue(& dev->write_wait, & waita);
#line 5048
  __ret = (long volatile   )1L;
  }
#line 5064
  goto case_8;
#line 5067
  goto switch_default;
  case_1: 
  {
#line 5070
  tmp___1 = get_current();
#line 5071
  __asm__  volatile   ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___1->state): : "memory",
                       "cc");
  }
#line 5074
  goto ldv_30726;
  case_2: 
  {
#line 5077
  tmp___2 = get_current();
#line 5078
  __asm__  volatile   ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___2->state): : "memory",
                       "cc");
  }
#line 5081
  goto ldv_30726;
  case_4: 
  {
#line 5084
  tmp___3 = get_current();
#line 5085
  __asm__  volatile   ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___3->state): : "memory",
                       "cc");
  }
#line 5088
  goto ldv_30726;
  case_8: 
  {
#line 5091
  tmp___4 = get_current();
#line 5092
  __asm__  volatile   ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___4->state): : "memory",
                       "cc");
  }
#line 5095
  goto ldv_30726;
  switch_default: 
  {
#line 5098
  __xchg_wrong_size();
  }
  switch_break: 
  {

  }
  ldv_30726: 
  {
#line 5104
  ldv___ldv_spin_lock_76(& dev->buflock);
  }
#line 5106
  if (dev->out_urb_finished == 0) {
    {
#line 5108
    ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
#line 5109
    ldv_mutex_unlock_78(& dev->mtx);
#line 5110
    tmp___10 = get_current();
#line 5111
    tmp___11 = signal_pending(tmp___10);
    }
#line 5113
    if (tmp___11 != 0) {
      {
#line 5115
      descriptor___0.modname = (char const   *)"adutux";
#line 5116
      descriptor___0.function = (char const   *)"adu_write";
#line 5117
      descriptor___0.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 5118
      descriptor___0.format = (char const   *)"%s : interrupted\n";
#line 5119
      descriptor___0.lineno = 551U;
#line 5120
      descriptor___0.flags = 0U;
#line 5121
      tmp___5 = ldv__builtin_expect((long )descriptor___0.flags & 1L, 0L);
      }
#line 5123
      if (tmp___5 != 0L) {
        {
#line 5125
        __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)(& (dev->udev)->dev),
                          (char const   *)"%s : interrupted\n", "adu_write");
        }
      }
      {
#line 5130
      __ret___0 = (long volatile   )0L;
      }
#line 5145
      goto case_8___0;
#line 5148
      goto switch_default___0;
      case_1___0: 
      {
#line 5151
      tmp___6 = get_current();
#line 5152
      __asm__  volatile   ("xchgb %b0, %1\n": "+q" (__ret___0), "+m" (tmp___6->state): : "memory",
                           "cc");
      }
#line 5155
      goto ldv_30735;
      case_2___0: 
      {
#line 5158
      tmp___7 = get_current();
#line 5159
      __asm__  volatile   ("xchgw %w0, %1\n": "+r" (__ret___0), "+m" (tmp___7->state): : "memory",
                           "cc");
      }
#line 5162
      goto ldv_30735;
      case_4___0: 
      {
#line 5165
      tmp___8 = get_current();
#line 5166
      __asm__  volatile   ("xchgl %0, %1\n": "+r" (__ret___0), "+m" (tmp___8->state): : "memory",
                           "cc");
      }
#line 5169
      goto ldv_30735;
      case_8___0: 
      {
#line 5172
      tmp___9 = get_current();
#line 5173
      __asm__  volatile   ("xchgq %q0, %1\n": "+r" (__ret___0), "+m" (tmp___9->state): : "memory",
                           "cc");
      }
#line 5176
      goto ldv_30735;
      switch_default___0: 
      {
#line 5179
      __xchg_wrong_size();
      }
      switch_break___0: 
      {

      }
      ldv_30735: 
      {
#line 5184
      retval = -4;
      }
#line 5185
      goto exit_onqueue;
    }
    {
#line 5189
    tmp___13 = schedule_timeout(500L);
    }
#line 5191
    if (tmp___13 == 0L) {
      {
#line 5193
      descriptor___1.modname = (char const   *)"adutux";
#line 5194
      descriptor___1.function = (char const   *)"adu_write";
#line 5195
      descriptor___1.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 5196
      descriptor___1.format = (char const   *)"%s - command timed out.\n";
#line 5197
      descriptor___1.lineno = 558U;
#line 5198
      descriptor___1.flags = 0U;
#line 5199
      tmp___12 = ldv__builtin_expect((long )descriptor___1.flags & 1L, 0L);
      }
#line 5201
      if (tmp___12 != 0L) {
        {
#line 5203
        __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)(& (dev->udev)->dev),
                          (char const   *)"%s - command timed out.\n", "adu_write");
        }
      }
      {
#line 5208
      retval = -110;
      }
#line 5209
      goto exit_onqueue;
    }
    {
#line 5213
    remove_wait_queue(& dev->write_wait, & waita);
#line 5214
    retval = ldv_mutex_lock_interruptible_79(& dev->mtx);
    }
#line 5216
    if (retval != 0) {
#line 5217
      if ((unsigned long )bytes_written != 0UL) {
        {
#line 5217
        retval = (int )bytes_written;
        }
      } else {
        {
#line 5217
        retval = retval;
        }
      }
#line 5218
      goto exit_nolock;
    }
    {
#line 5222
    descriptor___2.modname = (char const   *)"adutux";
#line 5223
    descriptor___2.function = (char const   *)"adu_write";
#line 5224
    descriptor___2.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 5225
    descriptor___2.format = (char const   *)"%s : in progress, count = %Zd\n";
#line 5226
    descriptor___2.lineno = 571U;
#line 5227
    descriptor___2.flags = 0U;
#line 5228
    tmp___14 = ldv__builtin_expect((long )descriptor___2.flags & 1L, 0L);
    }
#line 5230
    if (tmp___14 != 0L) {
      {
#line 5232
      __dynamic_dev_dbg(& descriptor___2, (struct device  const  *)(& (dev->udev)->dev),
                        (char const   *)"%s : in progress, count = %Zd\n", "adu_write",
                        count);
      }
    }
  } else {
    {
#line 5239
    ldv_spin_unlock_irqrestore_50(& dev->buflock, flags);
#line 5240
    __ret___1 = (long volatile   )0L;
    }
#line 5256
    goto case_8___1;
#line 5259
    goto switch_default___1;
    case_1___1: 
    {
#line 5262
    tmp___15 = get_current();
#line 5263
    __asm__  volatile   ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (tmp___15->state): : "memory",
                         "cc");
    }
#line 5266
    goto ldv_30746;
    case_2___1: 
    {
#line 5269
    tmp___16 = get_current();
#line 5270
    __asm__  volatile   ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (tmp___16->state): : "memory",
                         "cc");
    }
#line 5273
    goto ldv_30746;
    case_4___1: 
    {
#line 5276
    tmp___17 = get_current();
#line 5277
    __asm__  volatile   ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (tmp___17->state): : "memory",
                         "cc");
    }
#line 5280
    goto ldv_30746;
    case_8___1: 
    {
#line 5283
    tmp___18 = get_current();
#line 5284
    __asm__  volatile   ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (tmp___18->state): : "memory",
                         "cc");
    }
#line 5287
    goto ldv_30746;
    switch_default___1: 
    {
#line 5290
    __xchg_wrong_size();
    }
    switch_break___1: 
    {

    }
    ldv_30746: 
    {
#line 5296
    remove_wait_queue(& dev->write_wait, & waita);
#line 5297
    descriptor___3.modname = (char const   *)"adutux";
#line 5298
    descriptor___3.function = (char const   *)"adu_write";
#line 5299
    descriptor___3.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 5300
    descriptor___3.format = (char const   *)"%s : sending, count = %Zd\n";
#line 5301
    descriptor___3.lineno = 577U;
#line 5302
    descriptor___3.flags = 0U;
#line 5303
    tmp___19 = ldv__builtin_expect((long )descriptor___3.flags & 1L, 0L);
    }
#line 5305
    if (tmp___19 != 0L) {
      {
#line 5307
      __dynamic_dev_dbg(& descriptor___3, (struct device  const  *)(& (dev->udev)->dev),
                        (char const   *)"%s : sending, count = %Zd\n", "adu_write",
                        count);
      }
    }
    {
#line 5313
    tmp___20 = usb_endpoint_maxp((struct usb_endpoint_descriptor  const  *)dev->interrupt_out_endpoint);
#line 5314
    buffer_size = (size_t )tmp___20;
    }
#line 5315
    if (buffer_size < count) {
      {
#line 5315
      bytes_to_write = buffer_size;
      }
    } else {
      {
#line 5315
      bytes_to_write = count;
      }
    }
    {
#line 5316
    descriptor___4.modname = (char const   *)"adutux";
#line 5317
    descriptor___4.function = (char const   *)"adu_write";
#line 5318
    descriptor___4.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 5319
    descriptor___4.format = (char const   *)"%s : buffer_size = %Zd, count = %Zd, bytes_to_write = %Zd\n";
#line 5320
    descriptor___4.lineno = 584U;
#line 5321
    descriptor___4.flags = 0U;
#line 5322
    tmp___21 = ldv__builtin_expect((long )descriptor___4.flags & 1L, 0L);
    }
#line 5324
    if (tmp___21 != 0L) {
      {
#line 5326
      __dynamic_dev_dbg(& descriptor___4, (struct device  const  *)(& (dev->udev)->dev),
                        (char const   *)"%s : buffer_size = %Zd, count = %Zd, bytes_to_write = %Zd\n",
                        "adu_write", buffer_size, count, bytes_to_write);
      }
    }
    {
#line 5333
    tmp___22 = copy_from_user((void *)dev->interrupt_out_buffer, (void const   *)buffer,
                              (unsigned long )bytes_to_write);
    }
#line 5336
    if (tmp___22 != 0UL) {
      {
#line 5337
      retval = -14;
      }
#line 5338
      goto exit;
    }
    {
#line 5342
    tmp___23 = __create_pipe(dev->udev, (unsigned int )(dev->interrupt_out_endpoint)->bEndpointAddress);
#line 5343
    usb_fill_int_urb(dev->interrupt_out_urb, dev->udev, tmp___23 | 1073741824U, (void *)dev->interrupt_out_buffer,
                     (int )bytes_to_write, & adu_interrupt_out_callback, (void *)dev,
                     (int )(dev->interrupt_out_endpoint)->bInterval);
#line 5346
    (dev->interrupt_out_urb)->actual_length = bytes_to_write;
#line 5347
    dev->out_urb_finished = 0;
#line 5348
    retval = usb_submit_urb(dev->interrupt_out_urb, 208U);
    }
#line 5350
    if (retval < 0) {
      {
#line 5352
      dev->out_urb_finished = 1;
#line 5353
      dev_err((struct device  const  *)(& (dev->udev)->dev), (char const   *)"Couldn\'t submit interrupt_out_urb %d\n",
              retval);
      }
#line 5356
      goto exit;
    }
    {
#line 5359
    buffer += bytes_to_write;
#line 5360
    count -= bytes_to_write;
#line 5361
    bytes_written += bytes_to_write;
    }
  }
  ldv_30755: 
  {

  }
#line 5364
  if ((unsigned long )count != 0UL) {
#line 5365
    goto ldv_30754;
  }
  {
#line 5369
  ldv_mutex_unlock_81(& dev->mtx);
  }
#line 5371
  return ((ssize_t )bytes_written);
  exit: 
  {
#line 5374
  ldv_mutex_unlock_82(& dev->mtx);
  }
  exit_nolock: 
  {

  }
#line 5377
  return ((ssize_t )retval);
  exit_onqueue: 
  {
#line 5380
  remove_wait_queue(& dev->write_wait, & waita);
  }
#line 5382
  return ((ssize_t )retval);
}
}
#line 5385 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static struct file_operations  const  adu_fops  = 
#line 5385
     {& __this_module, & noop_llseek, & adu_read, & adu_write, (ssize_t (*)(struct kiocb * ,
                                                                          struct iovec  const  * ,
                                                                          unsigned long  ,
                                                                          loff_t  ))0,
    (ssize_t (*)(struct kiocb * , struct iovec  const  * , unsigned long  , loff_t  ))0,
    (int (*)(struct file * , struct dir_context * ))0, (unsigned int (*)(struct file * ,
                                                                         struct poll_table_struct * ))0,
    (long (*)(struct file * , unsigned int  , unsigned long  ))0, (long (*)(struct file * ,
                                                                            unsigned int  ,
                                                                            unsigned long  ))0,
    (int (*)(struct file * , struct vm_area_struct * ))0, & adu_open, (int (*)(struct file * ,
                                                                               fl_owner_t  ))0,
    & adu_release, (int (*)(struct file * , loff_t  , loff_t  , int  ))0, (int (*)(struct kiocb * ,
                                                                                   int  ))0,
    (int (*)(int  , struct file * , int  ))0, (int (*)(struct file * , int  , struct file_lock * ))0,
    (ssize_t (*)(struct file * , struct page * , int  , size_t  , loff_t * , int  ))0,
    (unsigned long (*)(struct file * , unsigned long  , unsigned long  , unsigned long  ,
                       unsigned long  ))0, (int (*)(int  ))0, (int (*)(struct file * ,
                                                                       int  , struct file_lock * ))0,
    (ssize_t (*)(struct pipe_inode_info * , struct file * , loff_t * , size_t  , unsigned int  ))0,
    (ssize_t (*)(struct file * , loff_t * , struct pipe_inode_info * , size_t  , unsigned int  ))0,
    (int (*)(struct file * , long  , struct file_lock ** ))0, (long (*)(struct file * ,
                                                                        int  , loff_t  ,
                                                                        loff_t  ))0,
    (int (*)(struct seq_file * , struct file * ))0};
#line 5388 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static struct usb_class_driver adu_class  =    {"usb/adutux%d", (char *(*)(struct device * , umode_t * ))0, & adu_fops, 0};
#line 5389 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static int adu_probe(struct usb_interface *interface , struct usb_device_id  const  *id ) 
{ 
  struct usb_device *udev ;
  struct usb_device *tmp ;
  struct adu_device *dev ;
  struct usb_host_interface *iface_desc ;
  struct usb_endpoint_descriptor *endpoint ;
  int retval ;
  int in_end_size ;
  int out_end_size ;
  int i ;
  void *tmp___0 ;
  struct lock_class_key __key ;
  struct lock_class_key __key___0 ;
  struct lock_class_key __key___1 ;
  struct lock_class_key __key___2 ;
  int tmp___1 ;
  int tmp___2 ;
  void *tmp___3 ;
  void *tmp___4 ;
  void *tmp___5 ;
  void *tmp___6 ;
  int tmp___7 ;
  struct _ddebug descriptor ;
  long tmp___8 ;

  {
  {
#line 5416
  tmp = interface_to_usbdev(interface);
#line 5417
  udev = tmp;
#line 5418
  dev = (struct adu_device *)0;
#line 5419
  retval = -19;
  }
#line 5421
  if ((unsigned long )udev == (unsigned long )((struct usb_device *)0)) {
    {
#line 5423
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"udev is NULL.\n");
    }
#line 5425
    goto exit;
  }
  {
#line 5429
  tmp___0 = kzalloc((size_t )544UL, 208U);
#line 5430
  dev = (struct adu_device *)tmp___0;
  }
#line 5432
  if ((unsigned long )dev == (unsigned long )((struct adu_device *)0)) {
    {
#line 5434
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"Out of memory\n");
#line 5435
    retval = -12;
    }
#line 5437
    goto exit;
  }
  {
#line 5441
  __mutex_init(& dev->mtx, (char const   *)"&dev->mtx", & __key);
#line 5442
  spinlock_check(& dev->buflock);
#line 5443
  __raw_spin_lock_init(& dev->buflock.__annonCompField19.rlock, (char const   *)"&(&dev->buflock)->rlock",
                       & __key___0);
#line 5445
  dev->udev = udev;
#line 5446
  __init_waitqueue_head(& dev->read_wait, (char const   *)"&dev->read_wait", & __key___1);
#line 5447
  __init_waitqueue_head(& dev->write_wait, (char const   *)"&dev->write_wait", & __key___2);
#line 5448
  iface_desc = interface->altsetting;
#line 5449
  i = 0;
  }
#line 5451
  goto ldv_30777;
  ldv_30776: 
  {
#line 5454
  endpoint = & (iface_desc->endpoint + (unsigned long )i)->desc;
#line 5455
  tmp___1 = usb_endpoint_is_int_in((struct usb_endpoint_descriptor  const  *)endpoint);
  }
#line 5457
  if (tmp___1 != 0) {
    {
#line 5458
    dev->interrupt_in_endpoint = endpoint;
    }
  }
  {
#line 5462
  tmp___2 = usb_endpoint_is_int_out((struct usb_endpoint_descriptor  const  *)endpoint);
  }
#line 5464
  if (tmp___2 != 0) {
    {
#line 5465
    dev->interrupt_out_endpoint = endpoint;
    }
  }
  {
#line 5468
  i ++;
  }
  ldv_30777: 
  {

  }
#line 5470
  if (i < (int )iface_desc->desc.bNumEndpoints) {
#line 5471
    goto ldv_30776;
  }
#line 5474
  if ((unsigned long )dev->interrupt_in_endpoint == (unsigned long )((struct usb_endpoint_descriptor *)0)) {
    {
#line 5476
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"interrupt in endpoint not found\n");
    }
#line 5478
    goto error;
  }
#line 5481
  if ((unsigned long )dev->interrupt_out_endpoint == (unsigned long )((struct usb_endpoint_descriptor *)0)) {
    {
#line 5483
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"interrupt out endpoint not found\n");
    }
#line 5485
    goto error;
  }
  {
#line 5489
  in_end_size = usb_endpoint_maxp((struct usb_endpoint_descriptor  const  *)dev->interrupt_in_endpoint);
#line 5490
  out_end_size = usb_endpoint_maxp((struct usb_endpoint_descriptor  const  *)dev->interrupt_out_endpoint);
#line 5491
  tmp___3 = kmalloc((size_t )(in_end_size * 4), 208U);
#line 5492
  dev->read_buffer_primary = (char *)tmp___3;
  }
#line 5494
  if ((unsigned long )dev->read_buffer_primary == (unsigned long )((char *)0)) {
    {
#line 5496
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"Couldn\'t allocate read_buffer_primary\n");
#line 5497
    retval = -12;
    }
#line 5499
    goto error;
  }
  {
#line 5503
  memset((void *)dev->read_buffer_primary, 97, (size_t )in_end_size);
#line 5504
  memset((void *)(dev->read_buffer_primary + (unsigned long )in_end_size), 98, (size_t )in_end_size);
#line 5505
  memset((void *)(dev->read_buffer_primary + (unsigned long )(in_end_size * 2)), 99,
         (size_t )in_end_size);
#line 5507
  memset((void *)(dev->read_buffer_primary + (unsigned long )(in_end_size * 3)), 100,
         (size_t )in_end_size);
#line 5509
  tmp___4 = kmalloc((size_t )(in_end_size * 4), 208U);
#line 5510
  dev->read_buffer_secondary = (char *)tmp___4;
  }
#line 5512
  if ((unsigned long )dev->read_buffer_secondary == (unsigned long )((char *)0)) {
    {
#line 5514
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"Couldn\'t allocate read_buffer_secondary\n");
#line 5515
    retval = -12;
    }
#line 5517
    goto error;
  }
  {
#line 5521
  memset((void *)dev->read_buffer_secondary, 101, (size_t )in_end_size);
#line 5522
  memset((void *)(dev->read_buffer_secondary + (unsigned long )in_end_size), 102,
         (size_t )in_end_size);
#line 5524
  memset((void *)(dev->read_buffer_secondary + (unsigned long )(in_end_size * 2)),
         103, (size_t )in_end_size);
#line 5526
  memset((void *)(dev->read_buffer_secondary + (unsigned long )(in_end_size * 3)),
         104, (size_t )in_end_size);
#line 5528
  tmp___5 = kmalloc((size_t )in_end_size, 208U);
#line 5529
  dev->interrupt_in_buffer = (char *)tmp___5;
  }
#line 5531
  if ((unsigned long )dev->interrupt_in_buffer == (unsigned long )((char *)0)) {
    {
#line 5533
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"Couldn\'t allocate interrupt_in_buffer\n");
    }
#line 5535
    goto error;
  }
  {
#line 5539
  memset((void *)dev->interrupt_in_buffer, 105, (size_t )in_end_size);
#line 5540
  dev->interrupt_in_urb = usb_alloc_urb(0, 208U);
  }
#line 5542
  if ((unsigned long )dev->interrupt_in_urb == (unsigned long )((struct urb *)0)) {
    {
#line 5544
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"Couldn\'t allocate interrupt_in_urb\n");
    }
#line 5546
    goto error;
  }
  {
#line 5550
  tmp___6 = kmalloc((size_t )out_end_size, 208U);
#line 5551
  dev->interrupt_out_buffer = (char *)tmp___6;
  }
#line 5553
  if ((unsigned long )dev->interrupt_out_buffer == (unsigned long )((char *)0)) {
    {
#line 5555
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"Couldn\'t allocate interrupt_out_buffer\n");
    }
#line 5557
    goto error;
  }
  {
#line 5561
  dev->interrupt_out_urb = usb_alloc_urb(0, 208U);
  }
#line 5563
  if ((unsigned long )dev->interrupt_out_urb == (unsigned long )((struct urb *)0)) {
    {
#line 5565
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"Couldn\'t allocate interrupt_out_urb\n");
    }
#line 5567
    goto error;
  }
  {
#line 5571
  tmp___7 = usb_string(udev, (int )udev->descriptor.iSerialNumber, (char *)(& dev->serial_number),
                       (size_t )8UL);
  }
#line 5574
  if (tmp___7 == 0) {
    {
#line 5576
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"Could not retrieve serial number\n");
    }
#line 5578
    goto error;
  }
  {
#line 5582
  descriptor.modname = (char const   *)"adutux";
#line 5583
  descriptor.function = (char const   *)"adu_probe";
#line 5584
  descriptor.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 5585
  descriptor.format = (char const   *)"serial_number=%s";
#line 5586
  descriptor.lineno = 767U;
#line 5587
  descriptor.flags = 0U;
#line 5588
  tmp___8 = ldv__builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 5590
  if (tmp___8 != 0L) {
    {
#line 5592
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& interface->dev), (char const   *)"serial_number=%s",
                      (char *)(& dev->serial_number));
    }
  }
  {
#line 5598
  usb_set_intfdata(interface, (void *)dev);
#line 5599
  retval = usb_register_dev(interface, & adu_class);
  }
#line 5601
  if (retval != 0) {
    {
#line 5603
    dev_err((struct device  const  *)(& interface->dev), (char const   *)"Not able to get a minor for this device.\n");
#line 5604
    usb_set_intfdata(interface, (void *)0);
    }
#line 5606
    goto error;
  }
  {
#line 5610
  dev->minor = (unsigned int )interface->minor;
#line 5611
  _dev_info((struct device  const  *)(& interface->dev), (char const   *)"ADU%d %s now attached to /dev/usb/adutux%d\n",
            (int )udev->descriptor.idProduct, (char *)(& dev->serial_number), dev->minor);
  }
  exit: 
  {

  }
#line 5615
  return (retval);
  error: 
  {
#line 5618
  adu_delete(dev);
  }
#line 5620
  return (retval);
}
}
#line 5623 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void adu_disconnect(struct usb_interface *interface ) 
{ 
  struct adu_device *dev ;
  int minor ;
  void *tmp ;
  struct _ddebug descriptor ;
  long tmp___0 ;

  {
  {
#line 5632
  tmp = usb_get_intfdata(interface);
#line 5633
  dev = (struct adu_device *)tmp;
#line 5634
  ldv_mutex_lock_83(& dev->mtx);
#line 5635
  dev->udev = (struct usb_device *)0;
#line 5636
  minor = (int )dev->minor;
#line 5637
  usb_deregister_dev(interface, & adu_class);
#line 5638
  ldv_mutex_unlock_84(& dev->mtx);
#line 5639
  ldv_mutex_lock_85(& adutux_mutex);
#line 5640
  usb_set_intfdata(interface, (void *)0);
#line 5641
  descriptor.modname = (char const   *)"adutux";
#line 5642
  descriptor.function = (char const   *)"adu_disconnect";
#line 5643
  descriptor.filename = (char const   *)"drivers/usb/misc/adutux.c";
#line 5644
  descriptor.format = (char const   *)"%s : open count %d\n";
#line 5645
  descriptor.lineno = 818U;
#line 5646
  descriptor.flags = 0U;
#line 5647
  tmp___0 = ldv__builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 5649
  if (tmp___0 != 0L) {
    {
#line 5651
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (dev->udev)->dev),
                      (char const   *)"%s : open count %d\n", "adu_disconnect", dev->open_count);
    }
  }
#line 5656
  if (dev->open_count == 0) {
    {
#line 5658
    adu_delete(dev);
    }
  }
  {
#line 5663
  ldv_mutex_unlock_86(& adutux_mutex);
#line 5664
  _dev_info((struct device  const  *)(& interface->dev), (char const   *)"ADU device adutux%d now disconnected\n",
            minor);
  }
#line 5667
  return;
}
}
#line 5670 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static struct usb_driver adu_driver  = 
#line 5670
     {(char const   *)"adutux", & adu_probe, & adu_disconnect, (int (*)(struct usb_interface * ,
                                                                      unsigned int  ,
                                                                      void * ))0,
    (int (*)(struct usb_interface * , pm_message_t  ))0, (int (*)(struct usb_interface * ))0,
    (int (*)(struct usb_interface * ))0, (int (*)(struct usb_interface * ))0, (int (*)(struct usb_interface * ))0,
    (struct usb_device_id  const  *)(& device_table), {{{{{{0U}}, 0U, 0U, (void *)0,
                                                          {(struct lock_class_key *)0,
                                                           {(struct lock_class *)0,
                                                            (struct lock_class *)0},
                                                           (char const   *)0, 0, 0UL}}}},
                                                       {(struct list_head *)0, (struct list_head *)0}},
    {{(char const   *)0, (struct bus_type *)0, (struct module *)0, (char const   *)0,
      (_Bool)0, (struct of_device_id  const  *)0, (struct acpi_device_id  const  *)0,
      (int (*)(struct device * ))0, (int (*)(struct device * ))0, (void (*)(struct device * ))0,
      (int (*)(struct device * , pm_message_t  ))0, (int (*)(struct device * ))0,
      (struct attribute_group  const  **)0, (struct dev_pm_ops  const  *)0, (struct driver_private *)0},
     0}, 0U, 0U, 0U, 0U};
#line 5676 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static int adu_driver_init(void) 
{ 
  int tmp ;

  {
  {
#line 5681
  tmp = ldv_usb_register_driver_87(& adu_driver, & __this_module, (char const   *)"adutux");
  }
#line 5683
  return (tmp);
}
}
#line 5686 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void adu_driver_exit(void) 
{ 


  {
  {
#line 5690
  ldv_usb_deregister_88(& adu_driver);
  }
#line 5692
  return;
}
}
#line 5695
void *ldv_character_driver_scenario_2(void *arg0 ) ;
#line 5696
void ldv_character_driver_scenario_callback_2_22(ssize_t (*arg0)(struct file * , char * ,
                                                                 size_t  , loff_t * ) ,
                                                 struct file *arg1 , char *arg2 ,
                                                 unsigned long arg3 , long long *arg4 ) ;
#line 5700
void ldv_character_driver_scenario_callback_2_5(loff_t (*arg0)(struct file * , loff_t  ,
                                                               int  ) , struct file *arg1 ,
                                                long long arg2 , int arg3 ) ;
#line 5703
int ldv_character_driver_scenario_probe_2_13(int (*arg0)(struct inode * , struct file * ) ,
                                             struct inode *arg1 , struct file *arg2 ) ;
#line 5705
void ldv_character_driver_scenario_release_2_2(int (*arg0)(struct inode * , struct file * ) ,
                                               struct inode *arg1 , struct file *arg2 ) ;
#line 5707
void ldv_character_driver_scenario_write_2_4(ssize_t (*arg0)(struct file * , char * ,
                                                             size_t  , loff_t * ) ,
                                             struct file *arg1 , char *arg2 , unsigned long arg3 ,
                                             long long *arg4 ) ;
#line 5711
void ldv_dispatch_default_deregister_3_4_3(void) ;
#line 5712
void ldv_dispatch_default_register_3_4_4(void) ;
#line 5713
void ldv_dispatch_deregister_5_1(struct usb_driver *arg0 ) ;
#line 5714
void ldv_dispatch_insmod_deregister_7_2(void) ;
#line 5715
void ldv_dispatch_insmod_register_7_3(void) ;
#line 5716
void ldv_dispatch_register_6_3(struct usb_driver *arg0 ) ;
#line 5717
void ldv_emg_usb_deregister(struct usb_driver *arg0 ) ;
#line 5718
int ldv_emg_usb_register_driver(struct usb_driver *arg0 , struct module *arg1 , char *arg2 ) ;
#line 5719
void *ldv_insmod_4(void *arg0 ) ;
#line 5720
void ldv_insmod_adu_driver_exit_4_2(void (*arg0)(void) ) ;
#line 5721
int ldv_insmod_adu_driver_init_4_9(int (*arg0)(void) ) ;
#line 5722
void *ldv_main_7(void *arg0 ) ;
#line 5723
void *ldv_usb_scenario_3(void *arg0 ) ;
#line 5724
int ldv_usb_scenario_probe_3_14(int (*arg0)(struct usb_interface * , struct usb_device_id * ) ,
                                struct usb_interface *arg1 , struct usb_device_id *arg2 ) ;
#line 5726
void ldv_usb_scenario_release_3_5(void (*arg0)(struct usb_interface * ) , struct usb_interface *arg1 ) ;
#line 5727
int main(void) ;
#line 5728 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_t ldv_thread_2  ;
#line 5729 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_t ldv_thread_3  ;
#line 5730 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_t ldv_thread_4  ;
#line 5731 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_character_driver_scenario_2(void *arg0 ) 
{ 
  loff_t (*ldv_2_callback_llseek)(struct file * , loff_t  , int  ) ;
  ssize_t (*ldv_2_callback_read)(struct file * , char * , size_t  , loff_t * ) ;
  struct file_operations *ldv_2_container_file_operations ;
  char *ldv_2_ldv_param_22_1_default ;
  long long *ldv_2_ldv_param_22_3_default ;
  char *ldv_2_ldv_param_4_1_default ;
  long long *ldv_2_ldv_param_4_3_default ;
  long long ldv_2_ldv_param_5_1_default ;
  int ldv_2_ldv_param_5_2_default ;
  int tmp ;
  struct file *ldv_2_resource_file ;
  struct inode *ldv_2_resource_inode ;
  int ldv_2_ret_default ;
  size_t ldv_2_size_cnt_write_size ;
  void *tmp___8 ;
  void *tmp___9 ;
  void *tmp___10 ;
  int tmp___11 ;
  int tmp___12 ;
  int tmp___13 ;
  int tmp___14 ;
  void *tmp___15 ;
  void *tmp___16 ;
  void *tmp___17 ;
  void *tmp___18 ;
  int tmp___19 ;

  {
  {
#line 5739
  ldv_2_ldv_param_4_3_default = (long long *)0;
#line 5740
  ldv_2_ldv_param_5_1_default = 0LL;
#line 5741
  tmp = ldv_undef_int();
#line 5741
  ldv_2_ldv_param_5_2_default = tmp;
#line 5760
  ldv_2_callback_llseek = (loff_t (*)(struct file * , loff_t  , int  ))0;
#line 5761
  ldv_2_callback_read = (ssize_t (*)(struct file * , char * , size_t  , loff_t * ))0;
#line 5762
  ldv_2_ret_default = ldv_undef_int();
#line 5763
  ldv_free(arg0);
#line 5764
  tmp___8 = ldv_xmalloc((size_t )0UL);
#line 5765
  ldv_2_container_file_operations = (struct file_operations *)tmp___8;
#line 5766
  tmp___9 = ldv_xmalloc((size_t )520UL);
#line 5767
  ldv_2_resource_file = (struct file *)tmp___9;
#line 5768
  tmp___10 = ldv_xmalloc((size_t )1032UL);
#line 5769
  ldv_2_resource_inode = (struct inode *)tmp___10;
#line 5770
  tmp___11 = ldv_undef_int();
#line 5771
  ldv_2_size_cnt_write_size = (size_t )tmp___11;
  }
#line 5773
  goto ldv_main_2;
#line 5774
  return ((void *)0);
  ldv_main_2: 
  {
#line 5777
  tmp___13 = ldv_undef_int();
  }
#line 5779
  if (tmp___13 != 0) {
    {
#line 5781
    ldv_2_ret_default = ldv_character_driver_scenario_probe_2_13(ldv_2_container_file_operations->open,
                                                                 ldv_2_resource_inode,
                                                                 ldv_2_resource_file);
#line 5784
    ldv_2_ret_default = ldv_filter_err_code(ldv_2_ret_default);
#line 5785
    tmp___12 = ldv_undef_int();
    }
#line 5787
    if (tmp___12 != 0) {
      {
#line 5789
      assume_abort_if_not(ldv_2_ret_default == 0);
      }
#line 5791
      goto ldv_call_2;
    } else {
      {
#line 5794
      assume_abort_if_not(ldv_2_ret_default != 0);
      }
#line 5796
      goto ldv_main_2;
    }
  } else {
    {
#line 5800
    ldv_free((void *)ldv_2_resource_file);
#line 5801
    ldv_free((void *)ldv_2_resource_inode);
#line 5802
    ldv_free((void *)ldv_2_container_file_operations);
    }
#line 5804
    return ((void *)0);
  }
#line 5806
  return ((void *)0);
  ldv_call_2: 
  {
#line 5809
  tmp___14 = ldv_undef_int();
  }
#line 5812
  if (tmp___14 == 1) {
#line 5813
    goto case_1;
  }
#line 5816
  if (tmp___14 == 2) {
#line 5817
    goto case_2;
  }
#line 5820
  if (tmp___14 == 3) {
#line 5821
    goto case_3;
  }
#line 5824
  goto switch_default;
  case_1: 
  {
#line 5827
  tmp___15 = ldv_xmalloc((size_t )0UL);
#line 5828
  ldv_2_ldv_param_4_1_default = (char *)tmp___15;
#line 5829
  tmp___16 = ldv_xmalloc((size_t )0UL);
#line 5830
  ldv_2_ldv_param_4_3_default = (long long *)tmp___16;
#line 5831
  assume_abort_if_not((unsigned long )ldv_2_size_cnt_write_size <= 2147479552UL);
#line 5832
  ldv_character_driver_scenario_write_2_4((ssize_t (*)(struct file * , char * , size_t  ,
                                                       loff_t * ))ldv_2_container_file_operations->write,
                                          ldv_2_resource_file, ldv_2_ldv_param_4_1_default,
                                          (unsigned long )ldv_2_size_cnt_write_size,
                                          ldv_2_ldv_param_4_3_default);
#line 5836
  ldv_free((void *)ldv_2_ldv_param_4_1_default);
#line 5837
  ldv_free((void *)ldv_2_ldv_param_4_3_default);
  }
#line 5839
  goto ldv_call_2;
  case_2: 
  {
#line 5842
  ldv_character_driver_scenario_release_2_2(ldv_2_container_file_operations->release,
                                            ldv_2_resource_inode, ldv_2_resource_file);
  }
#line 5845
  goto ldv_main_2;
  case_3: 
  {
#line 5848
  tmp___19 = ldv_undef_int();
  }
#line 5850
  if (tmp___19 != 0) {
    {
#line 5852
    tmp___17 = ldv_xmalloc((size_t )0UL);
#line 5853
    ldv_2_ldv_param_22_1_default = (char *)tmp___17;
#line 5854
    tmp___18 = ldv_xmalloc((size_t )0UL);
#line 5855
    ldv_2_ldv_param_22_3_default = (long long *)tmp___18;
#line 5856
    ldv_character_driver_scenario_callback_2_22(ldv_2_callback_read, ldv_2_resource_file,
                                                ldv_2_ldv_param_22_1_default, (unsigned long )ldv_2_size_cnt_write_size,
                                                ldv_2_ldv_param_22_3_default);
#line 5859
    ldv_free((void *)ldv_2_ldv_param_22_1_default);
#line 5860
    ldv_free((void *)ldv_2_ldv_param_22_3_default);
    }
  } else {
    {
#line 5864
    ldv_character_driver_scenario_callback_2_5(ldv_2_callback_llseek, ldv_2_resource_file,
                                               ldv_2_ldv_param_5_1_default, ldv_2_ldv_param_5_2_default);
    }
  }
#line 5868
  goto ldv_30929;
  switch_default: 
  {
#line 5871
  assume_abort_if_not(0);
  }
  switch_break: 
  {

  }
  ldv_30929: 
  {

  }
#line 5876
  goto ldv_call_2;
#line 5877
  return ((void *)0);
}
}
#line 5880 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_character_driver_scenario_callback_2_22(ssize_t (*arg0)(struct file * , char * ,
                                                                 size_t  , loff_t * ) ,
                                                 struct file *arg1 , char *arg2 ,
                                                 unsigned long arg3 , long long *arg4 ) 
{ 


  {
  {
#line 5887
  adu_read(arg1, arg2, (size_t )arg3, arg4);
  }
#line 5889
  return;
}
}
#line 5892 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_character_driver_scenario_callback_2_5(loff_t (*arg0)(struct file * , loff_t  ,
                                                               int  ) , struct file *arg1 ,
                                                long long arg2 , int arg3 ) 
{ 


  {
  {
#line 5898
  noop_llseek(arg1, arg2, arg3);
  }
#line 5900
  return;
}
}
#line 5903 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_character_driver_scenario_probe_2_13(int (*arg0)(struct inode * , struct file * ) ,
                                             struct inode *arg1 , struct file *arg2 ) 
{ 
  int tmp ;

  {
  {
#line 5909
  tmp = adu_open(arg1, arg2);
  }
#line 5911
  return (tmp);
}
}
#line 5914 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_character_driver_scenario_release_2_2(int (*arg0)(struct inode * , struct file * ) ,
                                               struct inode *arg1 , struct file *arg2 ) 
{ 


  {
  {
#line 5919
  adu_release(arg1, arg2);
  }
#line 5921
  return;
}
}
#line 5924 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_character_driver_scenario_write_2_4(ssize_t (*arg0)(struct file * , char * ,
                                                             size_t  , loff_t * ) ,
                                             struct file *arg1 , char *arg2 , unsigned long arg3 ,
                                             long long *arg4 ) 
{ 


  {
  {
#line 5931
  adu_write(arg1, (char const   *)arg2, (size_t )arg3, arg4);
  }
#line 5933
  return;
}
}
#line 5936 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_dispatch_default_deregister_3_4_3(void) 
{ 
  int ret ;

  {
  {
#line 5941
  ret = pthread_join(ldv_thread_2, (void **)0);
#line 5942
  assume_abort_if_not(ret == 0);
  }
#line 5944
  return;
}
}
#line 5947 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_dispatch_default_register_3_4_4(void) 
{ 
  int ret ;
  struct ldv_struct_insmod_4 *cf_arg_2 ;
  void *tmp ;

  {
  {
#line 5954
  tmp = ldv_xmalloc((size_t )4UL);
#line 5955
  cf_arg_2 = (struct ldv_struct_insmod_4 *)tmp;
#line 5956
  ret = pthread_create((pthread_t * __restrict  )(& ldv_thread_2), (pthread_attr_t const   * __restrict  )((pthread_attr_t const   *)0),
                       & ldv_character_driver_scenario_2, (void * __restrict  )((void *)cf_arg_2));
#line 5958
  assume_abort_if_not(ret == 0);
  }
#line 5960
  return;
}
}
#line 5963 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_dispatch_deregister_5_1(struct usb_driver *arg0 ) 
{ 
  int ret ;

  {
  {
#line 5968
  ret = pthread_join(ldv_thread_3, (void **)0);
#line 5969
  assume_abort_if_not(ret == 0);
  }
#line 5971
  return;
}
}
#line 5974 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_dispatch_insmod_deregister_7_2(void) 
{ 
  int ret ;

  {
  {
#line 5979
  ret = pthread_join(ldv_thread_4, (void **)0);
#line 5980
  assume_abort_if_not(ret == 0);
  }
#line 5982
  return;
}
}
#line 5985 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_dispatch_insmod_register_7_3(void) 
{ 
  int ret ;
  struct ldv_struct_insmod_4 *cf_arg_4 ;
  void *tmp ;

  {
  {
#line 5992
  tmp = ldv_xmalloc((size_t )4UL);
#line 5993
  cf_arg_4 = (struct ldv_struct_insmod_4 *)tmp;
#line 5994
  ret = pthread_create((pthread_t * __restrict  )(& ldv_thread_4), (pthread_attr_t const   * __restrict  )((pthread_attr_t const   *)0),
                       & ldv_insmod_4, (void * __restrict  )((void *)cf_arg_4));
#line 5996
  assume_abort_if_not(ret == 0);
  }
#line 5998
  return;
}
}
#line 6001 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_dispatch_register_6_3(struct usb_driver *arg0 ) 
{ 
  int ret ;
  struct ldv_struct_usb_scenario_3 *cf_arg_3 ;
  void *tmp ;

  {
  {
#line 6008
  tmp = ldv_xmalloc((size_t )16UL);
#line 6009
  cf_arg_3 = (struct ldv_struct_usb_scenario_3 *)tmp;
#line 6010
  cf_arg_3->arg0 = arg0;
#line 6011
  ret = pthread_create((pthread_t * __restrict  )(& ldv_thread_3), (pthread_attr_t const   * __restrict  )((pthread_attr_t const   *)0),
                       & ldv_usb_scenario_3, (void * __restrict  )((void *)cf_arg_3));
#line 6013
  assume_abort_if_not(ret == 0);
  }
#line 6015
  return;
}
}
#line 6018 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_emg_usb_deregister(struct usb_driver *arg0 ) 
{ 
  struct usb_driver *ldv_5_usb_driver_usb_driver ;

  {
  {
#line 6023
  ldv_5_usb_driver_usb_driver = arg0;
#line 6024
  ldv_dispatch_deregister_5_1(ldv_5_usb_driver_usb_driver);
  }
#line 6026
  return;
#line 6027
  return;
}
}
#line 6030 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_emg_usb_register_driver(struct usb_driver *arg0 , struct module *arg1 , char *arg2 ) 
{ 
  int ldv_6_res_default ;
  struct usb_driver *ldv_6_usb_driver_usb_driver ;
  int tmp___0 ;
  int tmp___1 ;

  {
  {
#line 6038
  ldv_6_res_default = ldv_undef_int();
#line 6039
  tmp___1 = ldv_undef_int();
  }
#line 6041
  if (tmp___1 != 0) {
    {
#line 6043
    ldv_6_usb_driver_usb_driver = arg0;
#line 6044
    ldv_dispatch_register_6_3(ldv_6_usb_driver_usb_driver);
    }
#line 6046
    return (0);
  } else {
    {
#line 6049
    ldv_failed_usb_register_driver();
#line 6050
    tmp___0 = ldv_undef_int_negative();
    }
#line 6052
    return (tmp___0);
  }
}
}
#line 6056 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_insmod_4(void *arg0 ) 
{ 
  void (*ldv_4_adu_driver_exit_default)(void) ;
  int (*ldv_4_adu_driver_init_default)(void) ;
  int ldv_4_reg_guard_3_default ;
  int ldv_4_ret_default ;
  int tmp___1 ;

  {
  {
#line 6065
  ldv_4_adu_driver_exit_default = (void (*)(void))0;
#line 6066
  ldv_4_adu_driver_init_default = (int (*)(void))0;
#line 6067
  ldv_free(arg0);
#line 6068
  ldv_4_ret_default = ldv_insmod_adu_driver_init_4_9(ldv_4_adu_driver_init_default);
#line 6069
  ldv_4_ret_default = ldv_post_init(ldv_4_ret_default);
#line 6070
  tmp___1 = ldv_undef_int();
  }
#line 6072
  if (tmp___1 != 0) {
    {
#line 6074
    assume_abort_if_not(ldv_4_ret_default != 0);
    }
#line 6076
    return ((void *)0);
  } else {
    {
#line 6079
    assume_abort_if_not(ldv_4_ret_default == 0);
#line 6080
    ldv_4_reg_guard_3_default = ldv_undef_int();
    }
#line 6082
    if (ldv_4_reg_guard_3_default != 0) {
      {
#line 6084
      ldv_dispatch_default_register_3_4_4();
      }
    }
#line 6088
    if (ldv_4_reg_guard_3_default != 0) {
      {
#line 6090
      ldv_dispatch_default_deregister_3_4_3();
      }
    }
    {
#line 6095
    ldv_insmod_adu_driver_exit_4_2(ldv_4_adu_driver_exit_default);
    }
#line 6097
    return ((void *)0);
  }
#line 6099
  return ((void *)0);
}
}
#line 6102 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_insmod_adu_driver_exit_4_2(void (*arg0)(void) ) 
{ 


  {
  {
#line 6106
  adu_driver_exit();
  }
#line 6108
  return;
}
}
#line 6111 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_insmod_adu_driver_init_4_9(int (*arg0)(void) ) 
{ 
  int tmp ;

  {
  {
#line 6116
  tmp = adu_driver_init();
  }
#line 6118
  return (tmp);
}
}
#line 6121 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_main_7(void *arg0 ) 
{ 


  {
  {
#line 6125
  ldv_initialize();
#line 6126
  ldv_dispatch_insmod_register_7_3();
#line 6127
  ldv_dispatch_insmod_deregister_7_2();
#line 6128
  ldv_check_final_state();
#line 6129
  assume_abort_if_not(0);
  }
#line 6131
  return ((void *)0);
#line 6132
  return ((void *)0);
}
}
#line 6135 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_usb_scenario_3(void *arg0 ) 
{ 
  struct usb_driver *ldv_3_container_usb_driver ;
  struct usb_device_id *ldv_3_ldv_param_14_1_default ;
  int ldv_3_probe_retval_default ;
  _Bool ldv_3_reset_flag_default ;
  struct usb_interface *ldv_3_resource_usb_interface ;
  struct usb_device *ldv_3_usb_device_usb_device ;
  struct ldv_struct_usb_scenario_3 *data ;
  void *tmp___3 ;
  void *tmp___4 ;
  int tmp___5 ;
  void *tmp___6 ;
  int tmp___7 ;
  int tmp___8 ;
  int tmp___9 ;

  {
  {
#line 6153
  data = (struct ldv_struct_usb_scenario_3 *)arg0;
#line 6154
  ldv_3_container_usb_driver = (struct usb_driver *)0;
#line 6155
  ldv_3_probe_retval_default = ldv_undef_int();
#line 6156
  ldv_3_reset_flag_default = (_Bool)0;
#line 6157
  ldv_3_resource_usb_interface = (struct usb_interface *)0;
#line 6158
  ldv_3_usb_device_usb_device = (struct usb_device *)0;
  }
#line 6160
  if ((unsigned long )data != (unsigned long )((struct ldv_struct_usb_scenario_3 *)0)) {
    {
#line 6162
    ldv_3_container_usb_driver = data->arg0;
#line 6163
    ldv_free((void *)data);
    }
  }
  {
#line 6168
  tmp___5 = ldv_undef_int();
  }
#line 6170
  if (tmp___5 != 0) {
    {
#line 6172
    tmp___3 = ldv_xmalloc((size_t )1528UL);
#line 6173
    ldv_3_resource_usb_interface = (struct usb_interface *)tmp___3;
#line 6174
    tmp___4 = ldv_xmalloc((size_t )1992UL);
#line 6175
    ldv_3_usb_device_usb_device = (struct usb_device *)tmp___4;
#line 6176
    ldv_3_resource_usb_interface->dev.parent = & ldv_3_usb_device_usb_device->dev;
    }
#line 6178
    goto ldv_manage_interface_3;
  } else {
#line 6180
    return ((void *)0);
  }
#line 6182
  return ((void *)0);
  ldv_manage_interface_3: 
  {
#line 6185
  tmp___9 = ldv_undef_int();
  }
#line 6187
  if (tmp___9 != 0) {
    {
#line 6189
    tmp___6 = ldv_xmalloc((size_t )0UL);
#line 6190
    ldv_3_ldv_param_14_1_default = (struct usb_device_id *)tmp___6;
#line 6191
    ldv_pre_probe();
#line 6192
    ldv_3_probe_retval_default = ldv_usb_scenario_probe_3_14((int (*)(struct usb_interface * ,
                                                                      struct usb_device_id * ))ldv_3_container_usb_driver->probe,
                                                             ldv_3_resource_usb_interface,
                                                             ldv_3_ldv_param_14_1_default);
#line 6196
    ldv_3_probe_retval_default = ldv_post_probe(ldv_3_probe_retval_default);
#line 6197
    ldv_free((void *)ldv_3_ldv_param_14_1_default);
#line 6198
    tmp___8 = ldv_undef_int();
    }
#line 6200
    if (tmp___8 != 0) {
      {
#line 6202
      assume_abort_if_not(ldv_3_probe_retval_default != 0);
      }
#line 6204
      goto ldv_manage_interface_3;
    } else {
      {
#line 6207
      assume_abort_if_not(ldv_3_probe_retval_default == 0);
#line 6208
      tmp___7 = ldv_undef_int();
      }
#line 6211
      if (tmp___7 == 1) {
#line 6212
        goto case_1;
      }
#line 6215
      if (tmp___7 == 2) {
#line 6216
        goto case_2;
      }
#line 6219
      if (tmp___7 == 3) {
#line 6220
        goto case_3;
      }
#line 6223
      if (tmp___7 == 4) {
#line 6224
        goto case_4;
      }
#line 6227
      goto switch_default;
      case_1: 
      {

      }
#line 6229
      goto ldv_31045;
      case_2: 
      {

      }
#line 6231
      goto ldv_31045;
      case_3: 
      {

      }
#line 6233
      goto ldv_31045;
      case_4: 
      {

      }
#line 6235
      goto ldv_31045;
      switch_default: 
      {
#line 6238
      assume_abort_if_not(0);
      }
      switch_break: 
      {

      }
      ldv_31045: 
      {

      }
    }
    {
#line 6245
    ldv_usb_scenario_release_3_5(ldv_3_container_usb_driver->disconnect, ldv_3_resource_usb_interface);
    }
#line 6247
    goto ldv_manage_interface_3;
  } else {
    {
#line 6250
    ldv_free((void *)ldv_3_resource_usb_interface);
#line 6251
    ldv_free((void *)ldv_3_usb_device_usb_device);
    }
#line 6253
    return ((void *)0);
  }
#line 6255
  return ((void *)0);
}
}
#line 6258 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_usb_scenario_probe_3_14(int (*arg0)(struct usb_interface * , struct usb_device_id * ) ,
                                struct usb_interface *arg1 , struct usb_device_id *arg2 ) 
{ 
  int tmp ;

  {
  {
#line 6264
  tmp = adu_probe(arg1, (struct usb_device_id  const  *)arg2);
  }
#line 6266
  return (tmp);
}
}
#line 6269 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_usb_scenario_release_3_5(void (*arg0)(struct usb_interface * ) , struct usb_interface *arg1 ) 
{ 


  {
  {
#line 6273
  adu_disconnect(arg1);
  }
#line 6275
  return;
}
}
#line 6278 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int main(void) 
{ 


  {
  {
#line 6282
  ldv_main_7((void *)0);
  }
#line 6284
  return (0);
}
}
#line 6287 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void *ldv_dev_get_drvdata_45(struct device  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 6292
  tmp = ldv_dev_get_drvdata(dev);
  }
#line 6294
  return (tmp);
}
}
#line 6297 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static int ldv_dev_set_drvdata_46(struct device *dev , void *data ) 
{ 
  int tmp ;

  {
  {
#line 6302
  tmp = ldv_dev_set_drvdata(dev, data);
  }
#line 6304
  return (tmp);
}
}
#line 6307
void *ldv_zalloc(size_t size ) ;
#line 6308 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
  {
#line 6313
  tmp = ldv_kzalloc(size, flags);
  }
#line 6315
  return (tmp);
}
}
#line 6318 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv___ldv_spin_lock_49(spinlock_t *ldv_func_arg1 ) 
{ 


  {
  {
#line 6322
  ldv_spin_lock_buflock_of_adu_device();
#line 6323
  __ldv_spin_lock(ldv_func_arg1);
  }
#line 6325
  return;
}
}
#line 6328 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void ldv_spin_unlock_irqrestore_50(spinlock_t *lock , unsigned long flags ) 
{ 


  {
  {
#line 6332
  ldv_spin_unlock_buflock_of_adu_device();
#line 6333
  spin_unlock_irqrestore(lock, flags);
  }
#line 6335
  return;
}
}
#line 6338 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv___ldv_spin_lock_52(spinlock_t *ldv_func_arg1 ) 
{ 


  {
  {
#line 6342
  ldv_spin_lock_buflock_of_adu_device();
#line 6343
  __ldv_spin_lock(ldv_func_arg1);
  }
#line 6345
  return;
}
}
#line 6348 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void ldv_spin_lock_55(spinlock_t *lock ) 
{ 


  {
  {
#line 6352
  ldv_spin_lock_buflock_of_adu_device();
#line 6353
  spin_lock(lock);
  }
#line 6355
  return;
}
}
#line 6358 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
__inline static void ldv_spin_unlock_56(spinlock_t *lock ) 
{ 


  {
  {
#line 6362
  ldv_spin_unlock_buflock_of_adu_device();
#line 6363
  spin_unlock(lock);
  }
#line 6365
  return;
}
}
#line 6368 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static int ldv_mutex_lock_interruptible_59(struct mutex *ldv_func_arg1 ) 
{ 
  int tmp ;

  {
  {
#line 6373
  tmp = ldv_mutex_lock_interruptible_or_killable_adutux_mutex(ldv_func_arg1);
  }
#line 6375
  return (tmp);
}
}
#line 6378 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_mutex_unlock_60(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 6382
  ldv_mutex_unlock_adutux_mutex(ldv_func_arg1);
  }
#line 6384
  return;
}
}
#line 6387 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_mutex_lock_61(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 6391
  ldv_mutex_lock_adutux_mutex(ldv_func_arg1);
  }
#line 6393
  return;
}
}
#line 6396 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_mutex_unlock_62(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 6400
  ldv_mutex_unlock_adutux_mutex(ldv_func_arg1);
  }
#line 6402
  return;
}
}
#line 6405 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static int ldv_mutex_lock_interruptible_63(struct mutex *ldv_func_arg1 ) 
{ 
  int tmp ;

  {
  {
#line 6410
  tmp = ldv_mutex_lock_interruptible_or_killable_mtx_of_adu_device(ldv_func_arg1);
  }
#line 6412
  return (tmp);
}
}
#line 6415 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv___ldv_spin_lock_64(spinlock_t *ldv_func_arg1 ) 
{ 


  {
  {
#line 6419
  ldv_spin_lock_buflock_of_adu_device();
#line 6420
  __ldv_spin_lock(ldv_func_arg1);
  }
#line 6422
  return;
}
}
#line 6425 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv___ldv_spin_lock_68(spinlock_t *ldv_func_arg1 ) 
{ 


  {
  {
#line 6429
  ldv_spin_lock_buflock_of_adu_device();
#line 6430
  __ldv_spin_lock(ldv_func_arg1);
  }
#line 6432
  return;
}
}
#line 6435 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv___ldv_spin_lock_71(spinlock_t *ldv_func_arg1 ) 
{ 


  {
  {
#line 6439
  ldv_spin_lock_buflock_of_adu_device();
#line 6440
  __ldv_spin_lock(ldv_func_arg1);
  }
#line 6442
  return;
}
}
#line 6445 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_mutex_unlock_74(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 6449
  ldv_mutex_unlock_mtx_of_adu_device(ldv_func_arg1);
  }
#line 6451
  return;
}
}
#line 6454 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static int ldv_mutex_lock_interruptible_75(struct mutex *ldv_func_arg1 ) 
{ 
  int tmp ;

  {
  {
#line 6459
  tmp = ldv_mutex_lock_interruptible_or_killable_mtx_of_adu_device(ldv_func_arg1);
  }
#line 6461
  return (tmp);
}
}
#line 6464 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv___ldv_spin_lock_76(spinlock_t *ldv_func_arg1 ) 
{ 


  {
  {
#line 6468
  ldv_spin_lock_buflock_of_adu_device();
#line 6469
  __ldv_spin_lock(ldv_func_arg1);
  }
#line 6471
  return;
}
}
#line 6474 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_mutex_unlock_78(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 6478
  ldv_mutex_unlock_mtx_of_adu_device(ldv_func_arg1);
  }
#line 6480
  return;
}
}
#line 6483 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static int ldv_mutex_lock_interruptible_79(struct mutex *ldv_func_arg1 ) 
{ 
  int tmp ;

  {
  {
#line 6488
  tmp = ldv_mutex_lock_interruptible_or_killable_mtx_of_adu_device(ldv_func_arg1);
  }
#line 6490
  return (tmp);
}
}
#line 6493 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_mutex_unlock_81(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 6497
  ldv_mutex_unlock_mtx_of_adu_device(ldv_func_arg1);
  }
#line 6499
  return;
}
}
#line 6502 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_mutex_unlock_82(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 6506
  ldv_mutex_unlock_mtx_of_adu_device(ldv_func_arg1);
  }
#line 6508
  return;
}
}
#line 6511 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_mutex_lock_83(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 6515
  ldv_mutex_lock_mtx_of_adu_device(ldv_func_arg1);
  }
#line 6517
  return;
}
}
#line 6520 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_mutex_unlock_84(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 6524
  ldv_mutex_unlock_mtx_of_adu_device(ldv_func_arg1);
  }
#line 6526
  return;
}
}
#line 6529 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_mutex_lock_85(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 6533
  ldv_mutex_lock_adutux_mutex(ldv_func_arg1);
  }
#line 6535
  return;
}
}
#line 6538 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_mutex_unlock_86(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 6542
  ldv_mutex_unlock_adutux_mutex(ldv_func_arg1);
  }
#line 6544
  return;
}
}
#line 6547 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static int ldv_usb_register_driver_87(struct usb_driver *ldv_func_arg1 , struct module *ldv_func_arg2 ,
                                      char const   *ldv_func_arg3 ) 
{ 
  int tmp ;

  {
  {
#line 6553
  tmp = ldv_emg_usb_register_driver(ldv_func_arg1, ldv_func_arg2, (char *)ldv_func_arg3);
  }
#line 6555
  return (tmp);
}
}
#line 6558 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static void ldv_usb_deregister_88(struct usb_driver *ldv_func_arg1 ) 
{ 


  {
  {
#line 6562
  ldv_emg_usb_deregister(ldv_func_arg1);
  }
#line 6564
  return;
}
}
#line 6567
void *ldv_xzalloc(size_t size ) ;
#line 6568 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_dev_get_drvdata(struct device  const  *dev ) 
{ 


  {
#line 6571
  if ((unsigned long )dev != (unsigned long )((struct device  const  *)0)) {
#line 6571
    if ((unsigned long )dev->p != (unsigned long )((struct device_private *)0)) {
#line 6572
      return ((dev->p)->driver_data);
    }
  }
#line 6575
  return ((void *)0);
}
}
#line 6578 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_dev_set_drvdata(struct device *dev , void *data ) 
{ 
  void *tmp ;

  {
  {
#line 6583
  tmp = ldv_xzalloc((size_t )8UL);
#line 6584
  dev->p = (struct device_private *)tmp;
#line 6585
  (dev->p)->driver_data = data;
  }
#line 6587
  return (0);
}
}
#line 6590 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct spi_master *ldv_spi_alloc_master(struct device *host , unsigned int size ) 
{ 
  struct spi_master *master ;
  void *tmp ;

  {
  {
#line 6596
  tmp = ldv_zalloc((size_t )((unsigned long )size + 2200UL));
#line 6597
  master = (struct spi_master *)tmp;
  }
#line 6599
  if ((unsigned long )master == (unsigned long )((struct spi_master *)0)) {
#line 6600
    return ((struct spi_master *)0);
  }
  {
#line 6604
  ldv_dev_set_drvdata(& master->dev, (void *)(master + 1U));
  }
#line 6606
  return (master);
}
}
#line 6609 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
long ldv_is_err(void const   *ptr ) 
{ 


  {
#line 6612
  return ((long )((unsigned long )ptr > 4294967295UL));
}
}
#line 6615 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_err_ptr(long error ) 
{ 


  {
#line 6618
  return ((void *)(4294967295L - error));
}
}
#line 6621 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
long ldv_ptr_err(void const   *ptr ) 
{ 


  {
#line 6624
  return ((long )(4294967295UL - (unsigned long )ptr));
}
}
#line 6627 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
long ldv_is_err_or_null(void const   *ptr ) 
{ 
  long tmp ;
  int tmp___0 ;

  {
#line 6632
  if ((unsigned long )ptr == (unsigned long )((void const   *)0)) {
    {
#line 6633
    tmp___0 = 1;
    }
  } else {
    {
#line 6636
    tmp = ldv_is_err(ptr);
    }
#line 6638
    if (tmp != 0L) {
      {
#line 6639
      tmp___0 = 1;
      }
    } else {
      {
#line 6641
      tmp___0 = 0;
      }
    }
  }
#line 6644
  return ((long )tmp___0);
}
}
#line 6647 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
static int ldv_filter_positive_int(int val ) 
{ 


  {
  {
#line 6651
  assume_abort_if_not(val <= 0);
  }
#line 6653
  return (val);
}
}
#line 6656 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_post_init(int init_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 6661
  tmp = ldv_filter_positive_int(init_ret_val);
  }
#line 6663
  return (tmp);
}
}
#line 6666 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_post_probe(int probe_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 6671
  tmp = ldv_filter_positive_int(probe_ret_val);
  }
#line 6673
  return (tmp);
}
}
#line 6676 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_filter_err_code(int ret_val ) 
{ 
  int tmp ;

  {
  {
#line 6681
  tmp = ldv_filter_positive_int(ret_val);
  }
#line 6683
  return (tmp);
}
}
#line 6686
void ldv_check_alloc_flags(gfp_t arg0 ) ;
#line 6687
void ldv_after_alloc(void *arg0 ) ;
#line 6688 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_kzalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 6693
  ldv_check_alloc_flags(flags);
#line 6694
  res = ldv_zalloc(size);
#line 6695
  ldv_after_alloc(res);
  }
#line 6697
  return (res);
}
}
#line 6700 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
long ldv__builtin_expect(long exp , long c ) 
{ 


  {
#line 6703
  return (exp);
}
}
#line 6706 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv__builtin_trap(void) 
{ 


  {
  {
#line 6710
  ldv_assert((char const   *)"", 0);
  }
#line 6712
  return;
}
}
#line 6715
void *ldv_calloc(size_t nmemb , size_t size ) ;
#line 6716
extern void *malloc(size_t  ) ;
#line 6717
extern void *calloc(size_t  , size_t  ) ;
#line 6718
extern void free(void * ) ;
#line 6719 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_malloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 6727
  tmp___1 = ldv_undef_int();
  }
#line 6729
  if (tmp___1 != 0) {
    {
#line 6731
    tmp = malloc(size);
#line 6732
    res = tmp;
#line 6733
    assume_abort_if_not((unsigned long )res != (unsigned long )((void *)0));
#line 6734
    tmp___0 = ldv_is_err((void const   *)res);
#line 6735
    assume_abort_if_not(tmp___0 == 0L);
    }
#line 6737
    return (res);
  } else {
#line 6739
    return ((void *)0);
  }
}
}
#line 6743 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_calloc(size_t nmemb , size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 6751
  tmp___1 = ldv_undef_int();
  }
#line 6753
  if (tmp___1 != 0) {
    {
#line 6755
    tmp = calloc(nmemb, size);
#line 6756
    res = tmp;
#line 6757
    assume_abort_if_not((unsigned long )res != (unsigned long )((void *)0));
#line 6758
    tmp___0 = ldv_is_err((void const   *)res);
#line 6759
    assume_abort_if_not(tmp___0 == 0L);
    }
#line 6761
    return (res);
  } else {
#line 6763
    return ((void *)0);
  }
}
}
#line 6767 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_zalloc(size_t size ) 
{ 
  void *tmp ;

  {
  {
#line 6772
  tmp = ldv_calloc((size_t )1UL, size);
  }
#line 6774
  return (tmp);
}
}
#line 6777 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_free(void *s ) 
{ 


  {
  {
#line 6781
  free(s);
  }
#line 6783
  return;
}
}
#line 6786 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_xmalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 6793
  tmp = malloc(size);
#line 6794
  res = tmp;
#line 6795
  assume_abort_if_not((unsigned long )res != (unsigned long )((void *)0));
#line 6796
  tmp___0 = ldv_is_err((void const   *)res);
#line 6797
  assume_abort_if_not(tmp___0 == 0L);
  }
#line 6799
  return (res);
}
}
#line 6802 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *ldv_xzalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 6809
  tmp = calloc((size_t )1UL, size);
#line 6810
  res = tmp;
#line 6811
  assume_abort_if_not((unsigned long )res != (unsigned long )((void *)0));
#line 6812
  tmp___0 = ldv_is_err((void const   *)res);
#line 6813
  assume_abort_if_not(tmp___0 == 0L);
  }
#line 6815
  return (res);
}
}
#line 6818
unsigned long ldv_undef_ulong(void) ;
#line 6819
int ldv_undef_int_nonpositive(void) ;
#line 6822 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_undef_int(void) 
{ 
  int tmp ;

  {
  {
#line 6827
  tmp = __VERIFIER_nondet_int();
  }
#line 6829
  return (tmp);
}
}
#line 6832 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
unsigned long ldv_undef_ulong(void) 
{ 
  unsigned long tmp ;

  {
  {
#line 6837
  tmp = __VERIFIER_nondet_ulong();
  }
#line 6839
  return (tmp);
}
}
#line 6842 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_undef_int_negative(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 6848
  tmp = ldv_undef_int();
#line 6849
  ret = tmp;
#line 6850
  assume_abort_if_not(ret < 0);
  }
#line 6852
  return (ret);
}
}
#line 6855 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_undef_int_nonpositive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 6861
  tmp = ldv_undef_int();
#line 6862
  ret = tmp;
#line 6863
  assume_abort_if_not(ret <= 0);
  }
#line 6865
  return (ret);
}
}
#line 6870
extern void ( __attribute__((__leaf__)) __assert_fail)(char const   *__assertion ,
                                                       char const   *__file , unsigned int __line ,
                                                       char const   *__function )  __attribute__((__nothrow__,
__noreturn__)) ;
#line 6873
extern void ( __attribute__((__leaf__)) __assert_perror_fail)(int __errnum , char const   *__file ,
                                                              unsigned int __line ,
                                                              char const   *__function )  __attribute__((__nothrow__,
__noreturn__)) ;
#line 6876
extern void ( __attribute__((__leaf__)) __assert)(char const   *__assertion , char const   *__file ,
                                                  int __line )  __attribute__((__nothrow__,
__noreturn__)) ;
#line 6879 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void reach_error(void) 
{ 


  {
  {
#line 6879
  __assert_fail((char const   *)"0", (char const   *)"linux-3.14--drivers--usb--misc--adutux.ko.cil.c",
                7104U, (char const   *)"reach_error");
  }
}
}
#line 6882 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t pmutex_adutux_mutex  ;
#line 6883 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_mutex_lock_adutux_mutex(struct mutex *lock ) 
{ 


  {
  {
#line 6887
  pthread_mutex_lock(& pmutex_adutux_mutex);
  }
#line 6889
  return;
}
}
#line 6892 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_lock_interruptible_or_killable_adutux_mutex(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 6897
  tmp = ldv_undef_int();
  }
#line 6899
  if (tmp != 0) {
    {
#line 6901
    pthread_mutex_lock(& pmutex_adutux_mutex);
    }
#line 6903
    return (0);
  } else {
#line 6905
    return (-4);
  }
}
}
#line 6909 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_is_locked_adutux_mutex(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 6914
  tmp = ldv_undef_int();
  }
#line 6916
  if (tmp != 0) {
#line 6917
    return (1);
  } else {
#line 6919
    return (0);
  }
}
}
#line 6923 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_trylock_adutux_mutex(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 6928
  tmp = pthread_mutex_trylock(& pmutex_adutux_mutex);
  }
#line 6930
  return (tmp);
}
}
#line 6933 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_mutex_lock_adutux_mutex(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
  {
#line 6936
  (cnt->counter) --;
  }
#line 6937
  if (cnt->counter != 0) {
#line 6938
    return (0);
  } else {
    {
#line 6941
    pthread_mutex_lock(& pmutex_adutux_mutex);
    }
#line 6943
    return (1);
  }
}
}
#line 6947 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_mutex_unlock_adutux_mutex(struct mutex *lock ) 
{ 


  {
  {
#line 6951
  pthread_mutex_unlock(& pmutex_adutux_mutex);
  }
#line 6953
  return;
}
}
#line 6956 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t pmutex_i_mutex_of_inode  ;
#line 6957 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_mutex_lock_i_mutex_of_inode(struct mutex *lock ) 
{ 


  {
  {
#line 6961
  pthread_mutex_lock(& pmutex_i_mutex_of_inode);
  }
#line 6963
  return;
}
}
#line 6966 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_lock_interruptible_or_killable_i_mutex_of_inode(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 6971
  tmp = ldv_undef_int();
  }
#line 6973
  if (tmp != 0) {
    {
#line 6975
    pthread_mutex_lock(& pmutex_i_mutex_of_inode);
    }
#line 6977
    return (0);
  } else {
#line 6979
    return (-4);
  }
}
}
#line 6983 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_is_locked_i_mutex_of_inode(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 6988
  tmp = ldv_undef_int();
  }
#line 6990
  if (tmp != 0) {
#line 6991
    return (1);
  } else {
#line 6993
    return (0);
  }
}
}
#line 6997 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_trylock_i_mutex_of_inode(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 7002
  tmp = pthread_mutex_trylock(& pmutex_i_mutex_of_inode);
  }
#line 7004
  return (tmp);
}
}
#line 7007 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_mutex_lock_i_mutex_of_inode(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
  {
#line 7010
  (cnt->counter) --;
  }
#line 7011
  if (cnt->counter != 0) {
#line 7012
    return (0);
  } else {
    {
#line 7015
    pthread_mutex_lock(& pmutex_i_mutex_of_inode);
    }
#line 7017
    return (1);
  }
}
}
#line 7021 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_mutex_unlock_i_mutex_of_inode(struct mutex *lock ) 
{ 


  {
  {
#line 7025
  pthread_mutex_unlock(& pmutex_i_mutex_of_inode);
  }
#line 7027
  return;
}
}
#line 7030 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t pmutex_lock  ;
#line 7031 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_mutex_lock_lock(struct mutex *lock ) 
{ 


  {
  {
#line 7035
  pthread_mutex_lock(& pmutex_lock);
  }
#line 7037
  return;
}
}
#line 7040 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_lock_interruptible_or_killable_lock(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 7045
  tmp = ldv_undef_int();
  }
#line 7047
  if (tmp != 0) {
    {
#line 7049
    pthread_mutex_lock(& pmutex_lock);
    }
#line 7051
    return (0);
  } else {
#line 7053
    return (-4);
  }
}
}
#line 7057 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_is_locked_lock(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 7062
  tmp = ldv_undef_int();
  }
#line 7064
  if (tmp != 0) {
#line 7065
    return (1);
  } else {
#line 7067
    return (0);
  }
}
}
#line 7071 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_trylock_lock(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 7076
  tmp = pthread_mutex_trylock(& pmutex_lock);
  }
#line 7078
  return (tmp);
}
}
#line 7081 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_mutex_lock_lock(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
  {
#line 7084
  (cnt->counter) --;
  }
#line 7085
  if (cnt->counter != 0) {
#line 7086
    return (0);
  } else {
    {
#line 7089
    pthread_mutex_lock(& pmutex_lock);
    }
#line 7091
    return (1);
  }
}
}
#line 7095 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_mutex_unlock_lock(struct mutex *lock ) 
{ 


  {
  {
#line 7099
  pthread_mutex_unlock(& pmutex_lock);
  }
#line 7101
  return;
}
}
#line 7104 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t pmutex_mtx_of_adu_device  ;
#line 7105 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_mutex_lock_mtx_of_adu_device(struct mutex *lock ) 
{ 


  {
  {
#line 7109
  pthread_mutex_lock(& pmutex_mtx_of_adu_device);
  }
#line 7111
  return;
}
}
#line 7114 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_lock_interruptible_or_killable_mtx_of_adu_device(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 7119
  tmp = ldv_undef_int();
  }
#line 7121
  if (tmp != 0) {
    {
#line 7123
    pthread_mutex_lock(& pmutex_mtx_of_adu_device);
    }
#line 7125
    return (0);
  } else {
#line 7127
    return (-4);
  }
}
}
#line 7131 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_is_locked_mtx_of_adu_device(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 7136
  tmp = ldv_undef_int();
  }
#line 7138
  if (tmp != 0) {
#line 7139
    return (1);
  } else {
#line 7141
    return (0);
  }
}
}
#line 7145 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_trylock_mtx_of_adu_device(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 7150
  tmp = pthread_mutex_trylock(& pmutex_mtx_of_adu_device);
  }
#line 7152
  return (tmp);
}
}
#line 7155 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_mutex_lock_mtx_of_adu_device(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
  {
#line 7158
  (cnt->counter) --;
  }
#line 7159
  if (cnt->counter != 0) {
#line 7160
    return (0);
  } else {
    {
#line 7163
    pthread_mutex_lock(& pmutex_mtx_of_adu_device);
    }
#line 7165
    return (1);
  }
}
}
#line 7169 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_mutex_unlock_mtx_of_adu_device(struct mutex *lock ) 
{ 


  {
  {
#line 7173
  pthread_mutex_unlock(& pmutex_mtx_of_adu_device);
  }
#line 7175
  return;
}
}
#line 7178 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t pmutex_mutex_of_device  ;
#line 7179 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) 
{ 


  {
  {
#line 7183
  pthread_mutex_lock(& pmutex_mutex_of_device);
  }
#line 7185
  return;
}
}
#line 7188 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_lock_interruptible_or_killable_mutex_of_device(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 7193
  tmp = ldv_undef_int();
  }
#line 7195
  if (tmp != 0) {
    {
#line 7197
    pthread_mutex_lock(& pmutex_mutex_of_device);
    }
#line 7199
    return (0);
  } else {
#line 7201
    return (-4);
  }
}
}
#line 7205 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_is_locked_mutex_of_device(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 7210
  tmp = ldv_undef_int();
  }
#line 7212
  if (tmp != 0) {
#line 7213
    return (1);
  } else {
#line 7215
    return (0);
  }
}
}
#line 7219 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 7224
  tmp = pthread_mutex_trylock(& pmutex_mutex_of_device);
  }
#line 7226
  return (tmp);
}
}
#line 7229 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_mutex_lock_mutex_of_device(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
  {
#line 7232
  (cnt->counter) --;
  }
#line 7233
  if (cnt->counter != 0) {
#line 7234
    return (0);
  } else {
    {
#line 7237
    pthread_mutex_lock(& pmutex_mutex_of_device);
    }
#line 7239
    return (1);
  }
}
}
#line 7243 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) 
{ 


  {
  {
#line 7247
  pthread_mutex_unlock(& pmutex_mutex_of_device);
  }
#line 7249
  return;
}
}
#line 7252 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_initialize(void) 
{ 


  {
#line 7255
  return;
}
}
#line 7258 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_check_final_state(void) 
{ 


  {
#line 7261
  return;
}
}
#line 7264 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_assert(char const   *desc , int expr ) 
{ 


  {
#line 7267
  if (expr == 0) {
    {
#line 7269
    reach_error();
    }
  }
#line 7273
  return;
}
}
#line 7277 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t smutex_alloc_lock_of_task_struct  ;
#line 7278 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_lock_alloc_lock_of_task_struct(void) 
{ 


  {
  {
#line 7282
  pthread_mutex_lock(& smutex_alloc_lock_of_task_struct);
  }
#line 7284
  return;
}
}
#line 7287 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_alloc_lock_of_task_struct(void) 
{ 


  {
  {
#line 7291
  pthread_mutex_unlock(& smutex_alloc_lock_of_task_struct);
  }
#line 7293
  return;
}
}
#line 7296 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_trylock_alloc_lock_of_task_struct(void) 
{ 
  int tmp ;

  {
  {
#line 7301
  tmp = pthread_mutex_trylock(& smutex_alloc_lock_of_task_struct);
  }
#line 7303
  return (tmp);
}
}
#line 7306 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_wait_alloc_lock_of_task_struct(void) 
{ 


  {
#line 7309
  return;
}
}
#line 7312 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_locked_alloc_lock_of_task_struct(void) 
{ 
  int tmp ;

  {
  {
#line 7317
  tmp = ldv_undef_int();
  }
#line 7319
  if (tmp != 0) {
#line 7320
    return (1);
  } else {
#line 7322
    return (0);
  }
}
}
#line 7326 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_can_lock_alloc_lock_of_task_struct(void) 
{ 
  int tmp ;

  {
  {
#line 7331
  tmp = ldv_spin_is_locked_alloc_lock_of_task_struct();
  }
#line 7333
  return (tmp == 0);
}
}
#line 7336 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_contended_alloc_lock_of_task_struct(void) 
{ 
  int is_spin_contended ;

  {
  {
#line 7341
  is_spin_contended = ldv_undef_int();
  }
#line 7343
  if (is_spin_contended != 0) {
#line 7344
    return (0);
  } else {
#line 7346
    return (1);
  }
}
}
#line 7350 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_lock_alloc_lock_of_task_struct(void) 
{ 
  int atomic_value_after_dec ;

  {
  {
#line 7355
  atomic_value_after_dec = ldv_undef_int();
  }
#line 7357
  if (atomic_value_after_dec == 0) {
    {
#line 7359
    ldv_spin_lock_alloc_lock_of_task_struct();
    }
#line 7361
    return (1);
  }
#line 7364
  return (0);
}
}
#line 7367 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t smutex_buflock_of_adu_device  ;
#line 7368 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_lock_buflock_of_adu_device(void) 
{ 


  {
  {
#line 7372
  pthread_mutex_lock(& smutex_buflock_of_adu_device);
  }
#line 7374
  return;
}
}
#line 7377 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_buflock_of_adu_device(void) 
{ 


  {
  {
#line 7381
  pthread_mutex_unlock(& smutex_buflock_of_adu_device);
  }
#line 7383
  return;
}
}
#line 7386 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_trylock_buflock_of_adu_device(void) 
{ 
  int tmp ;

  {
  {
#line 7391
  tmp = pthread_mutex_trylock(& smutex_buflock_of_adu_device);
  }
#line 7393
  return (tmp);
}
}
#line 7396 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_wait_buflock_of_adu_device(void) 
{ 


  {
#line 7399
  return;
}
}
#line 7402 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_locked_buflock_of_adu_device(void) 
{ 
  int tmp ;

  {
  {
#line 7407
  tmp = ldv_undef_int();
  }
#line 7409
  if (tmp != 0) {
#line 7410
    return (1);
  } else {
#line 7412
    return (0);
  }
}
}
#line 7416 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_can_lock_buflock_of_adu_device(void) 
{ 
  int tmp ;

  {
  {
#line 7421
  tmp = ldv_spin_is_locked_buflock_of_adu_device();
  }
#line 7423
  return (tmp == 0);
}
}
#line 7426 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_contended_buflock_of_adu_device(void) 
{ 
  int is_spin_contended ;

  {
  {
#line 7431
  is_spin_contended = ldv_undef_int();
  }
#line 7433
  if (is_spin_contended != 0) {
#line 7434
    return (0);
  } else {
#line 7436
    return (1);
  }
}
}
#line 7440 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_lock_buflock_of_adu_device(void) 
{ 
  int atomic_value_after_dec ;

  {
  {
#line 7445
  atomic_value_after_dec = ldv_undef_int();
  }
#line 7447
  if (atomic_value_after_dec == 0) {
    {
#line 7449
    ldv_spin_lock_buflock_of_adu_device();
    }
#line 7451
    return (1);
  }
#line 7454
  return (0);
}
}
#line 7457 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t smutex_i_lock_of_inode  ;
#line 7458 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_lock_i_lock_of_inode(void) 
{ 


  {
  {
#line 7462
  pthread_mutex_lock(& smutex_i_lock_of_inode);
  }
#line 7464
  return;
}
}
#line 7467 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_i_lock_of_inode(void) 
{ 


  {
  {
#line 7471
  pthread_mutex_unlock(& smutex_i_lock_of_inode);
  }
#line 7473
  return;
}
}
#line 7476 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_trylock_i_lock_of_inode(void) 
{ 
  int tmp ;

  {
  {
#line 7481
  tmp = pthread_mutex_trylock(& smutex_i_lock_of_inode);
  }
#line 7483
  return (tmp);
}
}
#line 7486 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_wait_i_lock_of_inode(void) 
{ 


  {
#line 7489
  return;
}
}
#line 7492 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_locked_i_lock_of_inode(void) 
{ 
  int tmp ;

  {
  {
#line 7497
  tmp = ldv_undef_int();
  }
#line 7499
  if (tmp != 0) {
#line 7500
    return (1);
  } else {
#line 7502
    return (0);
  }
}
}
#line 7506 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_can_lock_i_lock_of_inode(void) 
{ 
  int tmp ;

  {
  {
#line 7511
  tmp = ldv_spin_is_locked_i_lock_of_inode();
  }
#line 7513
  return (tmp == 0);
}
}
#line 7516 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_contended_i_lock_of_inode(void) 
{ 
  int is_spin_contended ;

  {
  {
#line 7521
  is_spin_contended = ldv_undef_int();
  }
#line 7523
  if (is_spin_contended != 0) {
#line 7524
    return (0);
  } else {
#line 7526
    return (1);
  }
}
}
#line 7530 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_lock_i_lock_of_inode(void) 
{ 
  int atomic_value_after_dec ;

  {
  {
#line 7535
  atomic_value_after_dec = ldv_undef_int();
  }
#line 7537
  if (atomic_value_after_dec == 0) {
    {
#line 7539
    ldv_spin_lock_i_lock_of_inode();
    }
#line 7541
    return (1);
  }
#line 7544
  return (0);
}
}
#line 7547 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t smutex_lock  ;
#line 7548 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_lock_lock(void) 
{ 


  {
  {
#line 7552
  pthread_mutex_lock(& smutex_lock);
  }
#line 7554
  return;
}
}
#line 7557 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_lock(void) 
{ 


  {
  {
#line 7561
  pthread_mutex_unlock(& smutex_lock);
  }
#line 7563
  return;
}
}
#line 7566 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_trylock_lock(void) 
{ 
  int tmp ;

  {
  {
#line 7571
  tmp = pthread_mutex_trylock(& smutex_lock);
  }
#line 7573
  return (tmp);
}
}
#line 7576 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_wait_lock(void) 
{ 


  {
#line 7579
  return;
}
}
#line 7582 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_locked_lock(void) 
{ 
  int tmp ;

  {
  {
#line 7587
  tmp = ldv_undef_int();
  }
#line 7589
  if (tmp != 0) {
#line 7590
    return (1);
  } else {
#line 7592
    return (0);
  }
}
}
#line 7596 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_can_lock_lock(void) 
{ 
  int tmp ;

  {
  {
#line 7601
  tmp = ldv_spin_is_locked_lock();
  }
#line 7603
  return (tmp == 0);
}
}
#line 7606 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_contended_lock(void) 
{ 
  int is_spin_contended ;

  {
  {
#line 7611
  is_spin_contended = ldv_undef_int();
  }
#line 7613
  if (is_spin_contended != 0) {
#line 7614
    return (0);
  } else {
#line 7616
    return (1);
  }
}
}
#line 7620 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_lock_lock(void) 
{ 
  int atomic_value_after_dec ;

  {
  {
#line 7625
  atomic_value_after_dec = ldv_undef_int();
  }
#line 7627
  if (atomic_value_after_dec == 0) {
    {
#line 7629
    ldv_spin_lock_lock();
    }
#line 7631
    return (1);
  }
#line 7634
  return (0);
}
}
#line 7637 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t smutex_lock_of_NOT_ARG_SIGN  ;
#line 7638 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_lock_lock_of_NOT_ARG_SIGN(void) 
{ 


  {
  {
#line 7642
  pthread_mutex_lock(& smutex_lock_of_NOT_ARG_SIGN);
  }
#line 7644
  return;
}
}
#line 7647 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_lock_of_NOT_ARG_SIGN(void) 
{ 


  {
  {
#line 7651
  pthread_mutex_unlock(& smutex_lock_of_NOT_ARG_SIGN);
  }
#line 7653
  return;
}
}
#line 7656 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_trylock_lock_of_NOT_ARG_SIGN(void) 
{ 
  int tmp ;

  {
  {
#line 7661
  tmp = pthread_mutex_trylock(& smutex_lock_of_NOT_ARG_SIGN);
  }
#line 7663
  return (tmp);
}
}
#line 7666 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_wait_lock_of_NOT_ARG_SIGN(void) 
{ 


  {
#line 7669
  return;
}
}
#line 7672 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_locked_lock_of_NOT_ARG_SIGN(void) 
{ 
  int tmp ;

  {
  {
#line 7677
  tmp = ldv_undef_int();
  }
#line 7679
  if (tmp != 0) {
#line 7680
    return (1);
  } else {
#line 7682
    return (0);
  }
}
}
#line 7686 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_can_lock_lock_of_NOT_ARG_SIGN(void) 
{ 
  int tmp ;

  {
  {
#line 7691
  tmp = ldv_spin_is_locked_lock_of_NOT_ARG_SIGN();
  }
#line 7693
  return (tmp == 0);
}
}
#line 7696 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_contended_lock_of_NOT_ARG_SIGN(void) 
{ 
  int is_spin_contended ;

  {
  {
#line 7701
  is_spin_contended = ldv_undef_int();
  }
#line 7703
  if (is_spin_contended != 0) {
#line 7704
    return (0);
  } else {
#line 7706
    return (1);
  }
}
}
#line 7710 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_lock_lock_of_NOT_ARG_SIGN(void) 
{ 
  int atomic_value_after_dec ;

  {
  {
#line 7715
  atomic_value_after_dec = ldv_undef_int();
  }
#line 7717
  if (atomic_value_after_dec == 0) {
    {
#line 7719
    ldv_spin_lock_lock_of_NOT_ARG_SIGN();
    }
#line 7721
    return (1);
  }
#line 7724
  return (0);
}
}
#line 7727 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t smutex_node_size_lock_of_pglist_data  ;
#line 7728 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_lock_node_size_lock_of_pglist_data(void) 
{ 


  {
  {
#line 7732
  pthread_mutex_lock(& smutex_node_size_lock_of_pglist_data);
  }
#line 7734
  return;
}
}
#line 7737 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_node_size_lock_of_pglist_data(void) 
{ 


  {
  {
#line 7741
  pthread_mutex_unlock(& smutex_node_size_lock_of_pglist_data);
  }
#line 7743
  return;
}
}
#line 7746 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_trylock_node_size_lock_of_pglist_data(void) 
{ 
  int tmp ;

  {
  {
#line 7751
  tmp = pthread_mutex_trylock(& smutex_node_size_lock_of_pglist_data);
  }
#line 7753
  return (tmp);
}
}
#line 7756 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_wait_node_size_lock_of_pglist_data(void) 
{ 


  {
#line 7759
  return;
}
}
#line 7762 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_locked_node_size_lock_of_pglist_data(void) 
{ 
  int tmp ;

  {
  {
#line 7767
  tmp = ldv_undef_int();
  }
#line 7769
  if (tmp != 0) {
#line 7770
    return (1);
  } else {
#line 7772
    return (0);
  }
}
}
#line 7776 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_can_lock_node_size_lock_of_pglist_data(void) 
{ 
  int tmp ;

  {
  {
#line 7781
  tmp = ldv_spin_is_locked_node_size_lock_of_pglist_data();
  }
#line 7783
  return (tmp == 0);
}
}
#line 7786 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_contended_node_size_lock_of_pglist_data(void) 
{ 
  int is_spin_contended ;

  {
  {
#line 7791
  is_spin_contended = ldv_undef_int();
  }
#line 7793
  if (is_spin_contended != 0) {
#line 7794
    return (0);
  } else {
#line 7796
    return (1);
  }
}
}
#line 7800 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_lock_node_size_lock_of_pglist_data(void) 
{ 
  int atomic_value_after_dec ;

  {
  {
#line 7805
  atomic_value_after_dec = ldv_undef_int();
  }
#line 7807
  if (atomic_value_after_dec == 0) {
    {
#line 7809
    ldv_spin_lock_node_size_lock_of_pglist_data();
    }
#line 7811
    return (1);
  }
#line 7814
  return (0);
}
}
#line 7817 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t smutex_ptl  ;
#line 7818 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_lock_ptl(void) 
{ 


  {
  {
#line 7822
  pthread_mutex_lock(& smutex_ptl);
  }
#line 7824
  return;
}
}
#line 7827 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_ptl(void) 
{ 


  {
  {
#line 7831
  pthread_mutex_unlock(& smutex_ptl);
  }
#line 7833
  return;
}
}
#line 7836 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_trylock_ptl(void) 
{ 
  int tmp ;

  {
  {
#line 7841
  tmp = pthread_mutex_trylock(& smutex_ptl);
  }
#line 7843
  return (tmp);
}
}
#line 7846 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_wait_ptl(void) 
{ 


  {
#line 7849
  return;
}
}
#line 7852 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_locked_ptl(void) 
{ 
  int tmp ;

  {
  {
#line 7857
  tmp = ldv_undef_int();
  }
#line 7859
  if (tmp != 0) {
#line 7860
    return (1);
  } else {
#line 7862
    return (0);
  }
}
}
#line 7866 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_can_lock_ptl(void) 
{ 
  int tmp ;

  {
  {
#line 7871
  tmp = ldv_spin_is_locked_ptl();
  }
#line 7873
  return (tmp == 0);
}
}
#line 7876 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_contended_ptl(void) 
{ 
  int is_spin_contended ;

  {
  {
#line 7881
  is_spin_contended = ldv_undef_int();
  }
#line 7883
  if (is_spin_contended != 0) {
#line 7884
    return (0);
  } else {
#line 7886
    return (1);
  }
}
}
#line 7890 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_lock_ptl(void) 
{ 
  int atomic_value_after_dec ;

  {
  {
#line 7895
  atomic_value_after_dec = ldv_undef_int();
  }
#line 7897
  if (atomic_value_after_dec == 0) {
    {
#line 7899
    ldv_spin_lock_ptl();
    }
#line 7901
    return (1);
  }
#line 7904
  return (0);
}
}
#line 7907 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
pthread_mutex_t smutex_siglock_of_sighand_struct  ;
#line 7908 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_lock_siglock_of_sighand_struct(void) 
{ 


  {
  {
#line 7912
  pthread_mutex_lock(& smutex_siglock_of_sighand_struct);
  }
#line 7914
  return;
}
}
#line 7917 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_siglock_of_sighand_struct(void) 
{ 


  {
  {
#line 7921
  pthread_mutex_unlock(& smutex_siglock_of_sighand_struct);
  }
#line 7923
  return;
}
}
#line 7926 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_trylock_siglock_of_sighand_struct(void) 
{ 
  int tmp ;

  {
  {
#line 7931
  tmp = pthread_mutex_trylock(& smutex_siglock_of_sighand_struct);
  }
#line 7933
  return (tmp);
}
}
#line 7936 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_spin_unlock_wait_siglock_of_sighand_struct(void) 
{ 


  {
#line 7939
  return;
}
}
#line 7942 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_locked_siglock_of_sighand_struct(void) 
{ 
  int tmp ;

  {
  {
#line 7947
  tmp = ldv_undef_int();
  }
#line 7949
  if (tmp != 0) {
#line 7950
    return (1);
  } else {
#line 7952
    return (0);
  }
}
}
#line 7956 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_can_lock_siglock_of_sighand_struct(void) 
{ 
  int tmp ;

  {
  {
#line 7961
  tmp = ldv_spin_is_locked_siglock_of_sighand_struct();
  }
#line 7963
  return (tmp == 0);
}
}
#line 7966 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_spin_is_contended_siglock_of_sighand_struct(void) 
{ 
  int is_spin_contended ;

  {
  {
#line 7971
  is_spin_contended = ldv_undef_int();
  }
#line 7973
  if (is_spin_contended != 0) {
#line 7974
    return (0);
  } else {
#line 7976
    return (1);
  }
}
}
#line 7980 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_atomic_dec_and_lock_siglock_of_sighand_struct(void) 
{ 
  int atomic_value_after_dec ;

  {
  {
#line 7985
  atomic_value_after_dec = ldv_undef_int();
  }
#line 7987
  if (atomic_value_after_dec == 0) {
    {
#line 7989
    ldv_spin_lock_siglock_of_sighand_struct();
    }
#line 7991
    return (1);
  }
#line 7994
  return (0);
}
}
#line 7998 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void kfree(void const   *p ) 
{ 


  {
  {
#line 7999
  free((void *)p);
  }
#line 8000
  return;
}
}
#line 8001 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void __raw_spin_lock_init(raw_spinlock_t *arg0 , char const   *arg1 , struct lock_class_key *arg2 ) 
{ 


  {
#line 8002
  return;
}
}
#line 8005 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int usb_submit_urb(struct urb *arg0 , gfp_t arg1 ) 
{ 
  int tmp ;

  {
  {
#line 8006
  tmp = __VERIFIER_nondet_int();
  }
#line 8006
  return (tmp);
}
}
#line 8009 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int _dev_info(struct device  const  *arg0 , char const   *arg1  , ...) 
{ 
  int tmp ;

  {
  {
#line 8010
  tmp = __VERIFIER_nondet_int();
  }
#line 8010
  return (tmp);
}
}
#line 8012 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void remove_wait_queue(wait_queue_head_t *arg0 , wait_queue_t *arg1 ) 
{ 


  {
#line 8013
  return;
}
}
#line 8016 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
unsigned long _copy_to_user(void *arg0 , void const   *arg1 , unsigned int arg2 ) 
{ 
  unsigned long tmp ;

  {
  {
#line 8017
  tmp = __VERIFIER_nondet_ulong();
  }
#line 8017
  return (tmp);
}
}
#line 8019 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void _raw_spin_unlock_irqrestore(raw_spinlock_t *arg0 , unsigned long arg1 ) 
{ 


  {
#line 8020
  return;
}
}
#line 8022 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_after_alloc(void *arg0 ) 
{ 


  {
#line 8023
  return;
}
}
#line 8025 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void __wake_up(wait_queue_head_t *arg0 , unsigned int arg1 , int arg2 , void *arg3 ) 
{ 


  {
#line 8026
  return;
}
}
#line 8029 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int usb_register_dev(struct usb_interface *arg0 , struct usb_class_driver *arg1 ) 
{ 
  int tmp ;

  {
  {
#line 8030
  tmp = __VERIFIER_nondet_int();
  }
#line 8030
  return (tmp);
}
}
#line 8032 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void usb_free_urb(struct urb *arg0 ) 
{ 


  {
#line 8033
  return;
}
}
#line 8035 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void _raw_spin_unlock(raw_spinlock_t *arg0 ) 
{ 


  {
#line 8036
  return;
}
}
#line 8038 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void usb_kill_urb(struct urb *arg0 ) 
{ 


  {
#line 8039
  return;
}
}
#line 8041 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_check_alloc_flags(gfp_t arg0 ) 
{ 


  {
#line 8042
  return;
}
}
#line 8044 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void __ldv_spin_lock(spinlock_t *arg0 ) 
{ 


  {
#line 8045
  return;
}
}
#line 8047 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void might_fault(void) 
{ 


  {
#line 8048
  return;
}
}
#line 8051 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int printk(char const   *arg0  , ...) 
{ 
  int tmp ;

  {
  {
#line 8052
  tmp = __VERIFIER_nondet_int();
  }
#line 8052
  return (tmp);
}
}
#line 8054 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void ldv_pre_probe(void) 
{ 


  {
#line 8055
  return;
}
}
#line 8058 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int dev_err(struct device  const  *arg0 , char const   *arg1  , ...) 
{ 
  int tmp ;

  {
  {
#line 8059
  tmp = __VERIFIER_nondet_int();
  }
#line 8059
  return (tmp);
}
}
#line 8062 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int __dynamic_dev_dbg(struct _ddebug *arg0 , struct device  const  *arg1 , char const   *arg2 
                      , ...) 
{ 
  int tmp ;

  {
  {
#line 8063
  tmp = __VERIFIER_nondet_int();
  }
#line 8063
  return (tmp);
}
}
#line 8065 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void __mutex_init(struct mutex *arg0 , char const   *arg1 , struct lock_class_key *arg2 ) 
{ 


  {
#line 8066
  return;
}
}
#line 8068 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void usb_deregister_dev(struct usb_interface *arg0 , struct usb_class_driver *arg1 ) 
{ 


  {
#line 8069
  return;
}
}
#line 8072 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int ldv_failed_usb_register_driver(void) 
{ 
  int tmp ;

  {
  {
#line 8073
  tmp = __VERIFIER_nondet_int();
  }
#line 8073
  return (tmp);
}
}
#line 8076 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
loff_t noop_llseek(struct file *arg0 , loff_t arg1 , int arg2 ) 
{ 
  long tmp ;

  {
  {
#line 8077
  tmp = __VERIFIER_nondet_long();
  }
#line 8077
  return ((loff_t )tmp);
}
}
#line 8079 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void __copy_to_user_overflow(void) 
{ 


  {
#line 8080
  return;
}
}
#line 8082 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void add_wait_queue(wait_queue_head_t *arg0 , wait_queue_t *arg1 ) 
{ 


  {
#line 8083
  return;
}
}
#line 8085 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void __init_waitqueue_head(wait_queue_head_t *arg0 , char const   *arg1 , struct lock_class_key *arg2 ) 
{ 


  {
#line 8086
  return;
}
}
#line 8089 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
long schedule_timeout(long arg0 ) 
{ 
  long tmp ;

  {
  {
#line 8090
  tmp = __VERIFIER_nondet_long();
  }
#line 8090
  return (tmp);
}
}
#line 8092 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void __copy_from_user_overflow(void) 
{ 


  {
#line 8093
  return;
}
}
#line 8095 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void _raw_spin_lock(raw_spinlock_t *arg0 ) 
{ 


  {
#line 8096
  return;
}
}
#line 8099 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
int usb_string(struct usb_device *arg0 , int arg1 , char *arg2 , size_t arg3 ) 
{ 
  int tmp ;

  {
  {
#line 8100
  tmp = __VERIFIER_nondet_int();
  }
#line 8100
  return (tmp);
}
}
#line 8102 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct urb *usb_alloc_urb(int arg0 , gfp_t arg1 ) 
{ 
  void *tmp ;

  {
  {
#line 8103
  tmp = ldv_malloc((size_t )sizeof(struct urb ));
  }
#line 8103
  return ((struct urb *)tmp);
}
}
#line 8105 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
void *memcpy(void *arg0 , void const   *arg1 , size_t arg2 ) 
{ 
  void *tmp ;

  {
  {
#line 8106
  tmp = ldv_malloc((size_t )0UL);
  }
#line 8106
  return (tmp);
}
}
#line 8108 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
struct usb_interface *usb_find_interface(struct usb_driver *arg0 , int arg1 ) 
{ 
  void *tmp ;

  {
  {
#line 8109
  tmp = ldv_malloc((size_t )sizeof(struct usb_interface ));
  }
#line 8109
  return ((struct usb_interface *)tmp);
}
}
#line 8112 "linux-3.14--drivers--usb--misc--adutux.ko.cil.i"
unsigned long _copy_from_user(void *arg0 , void const   *arg1 , unsigned int arg2 ) 
{ 
  unsigned long tmp ;

  {
  {
#line 8113
  tmp = __VERIFIER_nondet_ulong();
  }
#line 8113
  return (tmp);
}
}
