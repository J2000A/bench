<?xml version="1.0"?>

<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="900 s" hardtimelimit="960 s" memlimit="6 GB" cpuCores="1">

<require cpuModel="Intel Xeon E3-1230 v5 @ 3.40 GHz" cpuCores="1"/>

  <option name="-heap">10000M</option>
  <option name="-timelimit">900s</option>

  <resultfiles>**/invariantWitnesses/*</resultfiles>
  <!-- <resultfiles>**</resultfiles> -->
  <option name="-witness2invariant"/>
  <option name="-skipRecursion"/>
  <option name="-spec">unreach-call.prp</option>

    <rundefinition name="2ls">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_2ls.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_2ls.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="cbmc">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_cbmc.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_cbmc.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="cpachecker">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_cpachecker.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_cpachecker.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="crux">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_crux.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_crux.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="dartagnan">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_dartagnan.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_dartagnan.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="esbmc">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_esbmc.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_esbmc.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="frama-c-sv">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_frama-c-sv.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_frama-c-sv.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="gazer-theta">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_gazer-theta.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_gazer-theta.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="goblint">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_goblint.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_goblint.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="graves-cpa">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_graves-cpa.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_graves-cpa.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="korn">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_korn.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_korn.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="lart">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_lart.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_lart.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="pesco">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_pesco.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_pesco.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="pinaka">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_pinaka.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_pinaka.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="symbiotic">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_symbiotic.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_symbiotic.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="theta">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_theta.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_theta.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="uautomizer">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_uautomizer.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_uautomizer.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="ukojak">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_ukojak.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_ukojak.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="utaipan">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_utaipan.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_utaipan.graphml</option>
      </tasks>
  </rundefinition>
  <rundefinition name="veriabs">
      <tasks>
        <include>*.yml</include>
        <requiredfiles>${taskdef_path}/${taskdef_name}_veriabs.graphml</requiredfiles>
        <option name="-setprop">invariantStore.witness=${taskdef_path}/${taskdef_name}_veriabs.graphml</option>
      </tasks>
  </rundefinition>

</benchmark>

